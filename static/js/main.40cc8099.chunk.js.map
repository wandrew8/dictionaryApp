{"version":3,"sources":["images sync /^/.*/.svg$","images/inn.svg","images/mataura.svg","images/mohaka.svg","images/ngaruroro.svg","images/taieri.svg","setupFirebase.js","components/styles/variables.js","components/styles/GlobalStyle.js","components/Navigation.js","components/SearchBar.js","components/Header.js","pages/Home.js","pages/User.js","components/FirebaseAuth.js","components/styles/components/modal.js","components/Modal.js","pages/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","firebase","initializeApp","apiKey","process","authDomain","projectId","variables","primaryDark","primaryLight","primaryWhite","inn","primary","secondary","tertiary","dark","light","white","backgroundLight","backgroundDark","mataura","mohaka","ngaruroro","taieri","primaryFont","headingFont","boxShadow","GlobalStyle","createGlobalStyle","props","theme","nightMode","NavBar","styled","nav","StyledLink","Link","Navigation","state","themeValue","handleChange","setState","target","value","toggleTheme","bind","to","color","this","icon","faAdjust","onClick","toggleNightMode","onChange","Component","SearchContainer","div","Image","img","StyledForm","form","SearchBar","query","handleInputChange","submitForm","preventDefault","handleSearch","style","display","justifyContent","src","require","alt","onSubmit","name","type","placeholder","StyledHeader","header","Header","Home","fetch","headers","Authorization","then","res","json","data","console","log","catch","err","User","isSignedIn","userName","unregisterAuthObserver","auth","onAuthStateChanged","user","currentUser","history","push","uiConfig","signInFlow","signInSuccessUrl","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","GithubAuthProvider","firebaseAuth","React","ModalContainer","ContentContainer","Modal","SignIn","App","storage","getItem","setItem","getInitalTheme","savedNightMode","JSON","parse","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.40cc8099.chunk.js","sourcesContent":["var map = {\n\t\"./inn.svg\": 68,\n\t\"./mataura.svg\": 69,\n\t\"./mohaka.svg\": 70,\n\t\"./ngaruroro.svg\": 71,\n\t\"./taieri.svg\": 72\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37;","module.exports = __webpack_public_path__ + \"static/media/inn.64bd2963.svg\";","module.exports = __webpack_public_path__ + \"static/media/mataura.4afff881.svg\";","module.exports = __webpack_public_path__ + \"static/media/mohaka.c27f4bb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/ngaruroro.8a341e3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/taieri.cf3c80a0.svg\";","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\r\n});\r\n","export const variables = {\r\n    //Color Variables\r\n    primaryDark: \"#161616\",\r\n    primaryLight: \"#E6E6E6\",\r\n    primaryWhite: \"#fdfdfe\",\r\n\r\n    //Theme color varients\r\n    inn: {\r\n        primary: \"#F45B0F\",\r\n        secondary: \"#FFD726\",\r\n        tertiary: \"#048ECB\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#E6E6E6\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    mataura: {\r\n        primary: \"#F83C1E\",\r\n        secondary: \"#F6B800\",\r\n        tertiary: \"#2C99B0\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#fdfdfe\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    mohaka: {\r\n        primary: \"#1A9E78\",\r\n        secondary: \"#F4B943\",\r\n        tertiary: \"#D55151\",\r\n        dark: \"#242C2D\",\r\n        light: \"#EADDCD\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#fdfdfe\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    ngaruroro: {\r\n        primary: \"#5359A6\",\r\n        secondary: \"#37ABB7\", \r\n        tertiary: \"#C4DD76\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#fdfdfe\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    taieri: {\r\n        primary: \"#44AB96\",\r\n        secondary: \"#E53855\",\r\n        tertiary: \"#4484AB\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#E6E6E6\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n\r\n    //Typography Variables\r\n    primaryFont: \"'Raleway', sans-serif\",\r\n    headingFont: \"'Playfair Display', serif\",\r\n\r\n    //Other Variables\r\n    boxShadow: \"2px 2px 5px rgba(0,0,0,0.2)\"\r\n}","import { createGlobalStyle } from 'styled-components';\r\nimport { variables } from './variables';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n}\r\n*, *:before, *:after {\r\n  -webkit-box-sizing: inherit;\r\n  -moz-box-sizing: inherit;\r\n  box-sizing: inherit;\r\n}\r\nbody {\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    font-family: ${variables.primaryFont};\r\n    text-align: center;\r\n}\r\nh1, h2, h3, h4, h5, h6 {\r\n    font-family: ${variables.headingFont};\r\n    font-weight: 400;\r\n    margin-bottom: 3rem;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAdjust } from '@fortawesome/free-solid-svg-icons'\r\nimport { variables } from '../components/styles/variables';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NavBar = styled.nav`\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    box-shadow: ${variables.boxShadow};\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    background: ${props => variables[props.theme.theme].primary};\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    color: ${variables.primaryWhite};\r\n    text-decoration: none;\r\n`\r\n\r\nexport default class Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n    }\r\n\r\n    state = {\r\n        themeValue: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ themeValue: e.target.value });\r\n        this.props.toggleTheme(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavBar>\r\n                <StyledLink to=\"/user\">User</StyledLink>\r\n                <StyledLink to=\"/\">Home</StyledLink>\r\n                <StyledLink to=\"/create-account\">Sign Up</StyledLink>\r\n                <FontAwesomeIcon color={this.props.nightMode === \"light\" ? variables.primaryWhite : variables.primaryDark} icon={faAdjust} onClick={this.props.toggleNightMode} />\r\n                <form>\r\n                    <select value={this.state.themeValue} onChange={this.handleChange}>\r\n                        <option value=\"mohaka\">Select a Theme</option>\r\n                        <option value=\"inn\">Inn</option>\r\n                        <option value=\"mataura\">Mataura</option>\r\n                        <option value=\"mohaka\">Mohaka</option>\r\n                        <option value=\"ngaruroro\">Ngaruroro</option>\r\n                        <option value=\"taieri\">Taieri</option>\r\n                    </select>\r\n                </form>\r\n            </NavBar>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { variables } from './styles/variables';\r\n\r\nconst SearchContainer = styled.div`\r\n    position: relative;\r\n    min-height: 300px;\r\n    min-width: 300px;\r\n    max-height: 400px;\r\n    max-width: 500px;\r\n    width: 90%;\r\n    height: 90%;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].backgroundLight : variables[props.theme.theme].backgroundDark };\r\n    border-radius: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: ${variables.boxShadow};\r\n`;\r\n\r\nconst Image = styled.img`\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-radius: 1rem;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n    z-index: 10;\r\n    display: flex;\r\n    width: 80%;\r\n    min-width: 250px;\r\n    border-radius: 1rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 200px;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n`;\r\n\r\nexport default class SearchBar extends Component {\r\n    state = {\r\n        query: ''\r\n    }\r\n\r\n    static propTypes = {\r\n        handleSearch: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ query: e.target.value });\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleSearch(this.state.query);\r\n        this.setState({ query: '' })\r\n    }\r\n\r\n    render() {\r\n        const { theme } = this.props;\r\n        return (\r\n            <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <SearchContainer>\r\n                <Image src={require(`../images/${theme}.svg`)} alt=\"\" />\r\n                <StyledForm onSubmit={this.submitForm}>\r\n                    <input \r\n                        name=\"query\" \r\n                        type=\"text\" \r\n                        placeholder=\"Search for a word\"\r\n                        value={this.state.query}\r\n                        onChange={this.handleInputChange}/>\r\n                    <button type=\"submit\">Search</button>\r\n                </StyledForm>\r\n            </SearchContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { variables } from '../components/styles/variables';\r\n\r\nconst StyledHeader = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100px;\r\n  background: ${props => variables[props.theme.theme].secondary};\r\n  box-shadow: ${variables.boxShadow};\r\n  &:after {\r\n  position: absolute;\r\n  border-style: solid;\r\n  border-width: 0 0 100px 500px;\r\n  border-color: transparent transparent rgba(255, 255, 255, 0.3) transparent;\r\n  right: 0;\r\n  top: 0;\r\n  content: \"\";\r\n  }\r\n  &:before  {\r\n  position: absolute;\r\n  border-style: solid;\r\n  border-width: 50px 0 0 70px;\r\n  border-color: transparent transparent transparent rgba(255, 255, 255, 0.3);\r\n  left: 0;\r\n  bottom: 0;\r\n  content: \"\";\r\n  }\r\n`\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <StyledHeader />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Navigation from '../components/Navigation';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Header from '../components/Header';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Home extends Component {\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string,\r\n    }\r\n\r\n    handleSearch = (query) => {\r\n        fetch(\"https://owlbot.info/api/v4/dictionary/\" + query, {\r\n        headers: {\r\n            Authorization: `Token ${process.env.REACT_APP_OWLBOT_API}`\r\n        }\r\n        }).then(res => res.json())\r\n        .then(data => console.log(data))\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Header />\r\n                <Navigation \r\n                    toggleNightMode={this.props.toggleNightMode} \r\n                    nightMode={this.props.nightMode}\r\n                    toggleTheme={this.props.toggleTheme}\r\n                     />\r\n                <h1>Welcome to the Dictionary App</h1>\r\n                <SearchBar \r\n                    handleSearch={this.handleSearch}\r\n                    theme={this.props.theme}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\nexport default class User extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userName: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userName: firebase.auth().currentUser })\r\n                //Redirects to home page if not logged in \r\n                if(!user){\r\n                    this.props.history.push('/');\r\n                }\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>You are logged in</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\n\r\nexport default class Home extends React.Component {\r\n    uiConfig = {\r\n        // Popup signin flow rather than redirect flow.\r\n        signInFlow: 'popup',\r\n        // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n        signInSuccessUrl: '/dictionaryApp#/user',\r\n        // We will display Google and Facebook as auth providers.\r\n        signInOptions: [\r\n          firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          firebase.auth.GithubAuthProvider.PROVIDER_ID\r\n        ]\r\n      };\r\n\r\n      render() {\r\n          return <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\r\n      }\r\n}","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const ModalContainer = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%,-50%);\r\n    max-height: 500px;\r\n    max-width: 700px;\r\n    width: 90%;\r\n    height: 90%;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].backgroundLight : variables[props.theme.theme].backgroundDark };\r\n    border-radius: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: ${variables.boxShadow};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-radius: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    height: 90%;\r\n    width: 90%;\r\n    border-radius: 1rem;\r\n    position: fixed;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0rem 0.5rem;\r\n    box-shadow: 1px 1px 3px rgba(0,0,0,0.1);\r\n`;\r\n","import React, { Component } from 'react';\r\nimport FirebaseAuth from './FirebaseAuth';\r\nimport { ModalContainer, Image, ContentContainer } from './styles/components/modal';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Modal extends Component {\r\n    static propTypes = {\r\n        theme: PropTypes.string,\r\n    }\r\n    \r\n    render() {\r\n        const { theme } = this.props;\r\n        return (\r\n            <ModalContainer>\r\n                <Image src={require(`../images/${theme}.svg`)} alt=\"\" />\r\n                <ContentContainer>\r\n                    <div>\r\n                        <h1>Create an Account or Log In</h1>\r\n                        <FirebaseAuth />\r\n                    </div>\r\n                </ContentContainer>\r\n            </ModalContainer>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Modal from '../components/Modal';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class SignIn extends Component {\r\n    static propTypes = {\r\n        theme: PropTypes.string,\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal theme={this.props.theme} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './components/styles/GlobalStyle';\nimport storage from 'local-storage-fallback';\nimport Home from './pages/Home';\nimport User from './pages/User';\nimport SignIn from './pages/SignIn';\n\nclass App extends React.Component {\n  state = {\n    nightMode: storage.getItem(\"nightMode\") ? storage.getItem(\"nightMode\") : \"light\",\n    theme: storage.getItem(\"theme\") ? storage.getItem(\"theme\") : \"mohaka\",\n  }\n\n  toggleNightMode = () => {\n    if(this.state.nightMode === \"light\"){\n      this.setState({ nightMode: \"dark\" })\n      storage.setItem(\"nightMode\", \"dark\");\n    } else {\n      this.setState({ nightMode: \"light\" });\n      storage.setItem(\"nightMode\", \"light\");\n    }\n  }\n\n  toggleTheme = (theme) => {\n    this.setState({ theme })\n    storage.setItem(\"theme\", theme)\n  }\n\n  getInitalTheme = () => {\n    const savedNightMode = storage.getItem(\"nightMode\");\n    return savedNightMode ? JSON.parse(savedNightMode) : false;\n  }\n\n  render() {\n      return (\n        <Router basename=\"/dictionaryApp/\">\n          <Switch>\n              <ThemeProvider theme={{ nightMode: this.state.nightMode, theme: this.state.theme }}>\n                <Route exact path=\"/\">\n                  <Home \n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme}\n                     />\n                </Route>\n                <Route path=\"/user\" component={User} />\n                <Route path=\"/create-account\">\n                  <SignIn theme={this.state.theme} />\n                </Route>\n                <GlobalStyle />\n              </ThemeProvider>\n          </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './setupFirebase';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}