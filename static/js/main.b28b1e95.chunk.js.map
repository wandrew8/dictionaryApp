{"version":3,"sources":["images sync /^/.*/.svg$","images/inn.svg","images/mataura.svg","images/mohaka.svg","images/ngaruroro.svg","images/taieri.svg","setupFirebase.js","components/styles/variables.js","components/styles/GlobalStyle.js","components/styles/components/themeItem.js","components/ThemeItem.js","components/styles/components/logo.js","components/Logo.js","components/styles/components/navigation.js","components/Navigation.js","components/styles/components/wordSetCard.js","components/WordSetCard.js","components/Loading.js","components/styles/components/practiceTests.js","components/PracticeTests.js","components/styles/components/footer.js","components/Footer.js","components/styles/components/button.js","components/Button.js","components/styles/components/searchBar.js","components/SearchBar.js","components/styles/components/header.js","components/Header.js","components/FirebaseAuth.js","components/styles/components/modal.js","components/Modal.js","components/styles/components/definitionCard.js","components/DefinitionCard.js","components/styles/components/wordOfDay.js","components/WordOfDay.js","pages/Home.js","components/styles/components/activityNavigation.js","components/ActivityNavigation.js","components/styles/components/flashcardControls.js","components/FlashcardControls.js","components/styles/components/flashcard.js","components/Flashcard.js","pages/Review.js","components/styles/components/collectionContainer.js","components/styles/components/addWordForm.js","components/AddWordForm.js","components/CollectionContainer.js","pages/WordCollection.js","components/styles/components/showResults.js","components/ShowResults.js","components/SettingsForm.js","components/styles/components/formComponent.js","components/FormComponent.js","pages/Test.js","pages/PracticeTest.js","pages/PracticeFlashCards.js","pages/Practice.js","pages/Collection.js","pages/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","firebase","initializeApp","apiKey","process","authDomain","projectId","variables","primaryDark","primaryLight","primaryWhite","inn","primary","secondary","tertiary","dark","light","white","backgroundLight","backgroundDark","mataura","mohaka","ngaruroro","taieri","primaryFont","headingFont","boxShadow","small","medium","large","desktop","GlobalStyle","createGlobalStyle","props","theme","nightMode","Item","styled","div","ThemeItem","className","style","height","width","borderRadius","marginRight","backgroundColor","name","StyledImage","img","LogoContainer","Logo","src","require","alt","to","NavBar","LoggedIn","NavSection","nav","Navigation","useState","setThemeValue","drawerOpen","setDrawerOpen","navRef","useRef","useEffect","document","addEventListener","handleClick","removeEventListener","current","contains","target","setTheme","toggleTheme","toggleNightMode","signout","currentTheme","isSignedIn","userImage","ref","activeStyle","borderBottom","exact","icon","faBars","color","onClick","margin","fontSize","faArrowRight","faSignOutAlt","faAdjust","faPalette","bind","this","href","Container","WordSetCard","wordSet","imageURL","Loading","spin","faSpinner","size","Section","section","db","firestore","PracticeTests","isLoading","setIsLoading","wordSets","setWordSets","getWordSets","collection","get","then","snapshot","docs","doc","push","length","set","key","data","StyledFooter","footer","withTheme","Date","getFullYear","InverseButton","button","StyledButton","Button","inverse","children","searched","SearchContainer","Image","StyledForm","form","StyledInput","input","SearchBar","query","setQuery","isWordSearched","setIsWordSearched","onSubmit","preventDefault","handleSearch","type","placeholder","value","required","onChange","StyledHeader","header","Header","Home","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","GithubAuthProvider","firebaseAuth","React","Component","ModalContainer","ContentContainer","Modal","modalRef","showModal","heading","closeModal","showClose","data-dismiss","aria-label","faTimesCircle","DefinitionContainer","isVisible","index","DefinitionCard","showErrorModal","setShowErrorModal","showConfirmationModal","setShowConfirmationModal","word","pronunciation","def","definition","example","image_url","Fragment","data-tip","uid","currentUser","add","dateAdded","faBookmark","WordOfDay","note","examples","definitions","text","partOfSpeech","moment","now","format","filter","i","cite","url","title","state","userInfo","badSearch","wordOfTheDay","signOut","setState","history","fetch","headers","Authorization","res","status","json","setTimeout","catch","err","console","log","getWordOfTheDay","year","month","getMonth","day","getDate","todayDate","Accept","unregisterAuthObserver","onAuthStateChanged","user","photoURL","FlexContainer","withRouter","main","ActivityNavigation","practice","activeClassName","Controls","FlashcardControls","totalNumber","currentNumber","moveNext","movePrev","moveFirst","moveLast","toggleOrder","faAngleDoubleLeft","faArrowLeft","faSync","faAngleDoubleRight","FlashCard","Flashcard","showBack","setShowBack","showWordFirst","setShowWordFirst","Review","userCollection","getUserCollection","SingleDefinition","li","Form","AddWordForm","formRef","values","setValues","handleChange","persist","closeForm","showForm","toggleForm","faTimes","addWordToCollection","newWord","CollectionContainer","setShowForm","removeItem","showRemove","showAddWordForm","marginBottom","display","justifyContent","faPlusSquare","padding","faTrash","WordCollection","wordCollection","isShowing","getWordsFromCollection","match","params","showResults","ShowResults","answers","individualWord","answer","toLowerCase","faCheckCircle","SettingsForm","handleCheckBox","checked","wordCount","settings","testLength","parseInt","hideHints","showTimer","timerLength","changeSettings","item","num","htmlFor","Input","CongratulationsContainer","FormComponent","formSubmitted","totalScore","message","subtitle","openForm","checkAnswers","window","scrollTo","lowerCaseAnswers","answersArray","totalCorrect","forEach","getMessage","total","score","getRandom","arr","n","result","Array","len","taken","RangeError","x","Math","floor","random","resetTest","faAngleDown","faCog","toUpperCase","slice","data-id","faInfoCircle","Test","Practice","Collection","delete","SignIn","Background","SecondBackground","ThirdBackground","App","storage","getItem","setNightMode","setItem","basename","path","PracticeTest","PracticeFlashCards","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b28b1e95.chunk.js","sourcesContent":["var map = {\n\t\"./inn.svg\": 70,\n\t\"./mataura.svg\": 71,\n\t\"./mohaka.svg\": 72,\n\t\"./ngaruroro.svg\": 73,\n\t\"./taieri.svg\": 74\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","module.exports = __webpack_public_path__ + \"static/media/inn.64bd2963.svg\";","module.exports = __webpack_public_path__ + \"static/media/mataura.4afff881.svg\";","module.exports = __webpack_public_path__ + \"static/media/mohaka.c27f4bb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/ngaruroro.8a341e3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/taieri.cf3c80a0.svg\";","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\r\n});\r\n","export const variables = {\r\n    //Color Variables\r\n    primaryDark: \"#161616\",\r\n    primaryLight: \"#E6E6E6\",\r\n    primaryWhite: \"#fdfdfe\",\r\n\r\n    //Theme color varients\r\n    inn: {\r\n        primary: \"#F45B0F\",\r\n        secondary: \"#FFD726\",\r\n        tertiary: \"#048ECB\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#E6E6E6\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    mataura: {\r\n        primary: \"#2C99B0\",\r\n        secondary: \"#F6B800\",\r\n        tertiary: \"#F83C1E\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#fdfdfe\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    mohaka: {\r\n        primary: \"#1A9E78\",\r\n        secondary: \"#F4B943\",\r\n        tertiary: \"#D55151\",\r\n        dark: \"#242C2D\",\r\n        light: \"#EADDCD\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#fdfdfe\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    ngaruroro: {\r\n        primary: \"#5359A6\",\r\n        secondary: \"#37ABB7\", \r\n        tertiary: \"#C4DD76\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#fdfdfe\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    taieri: {\r\n        primary: \"#4484AB\",\r\n        secondary: \"#44AB96\",\r\n        tertiary: \"#E53855\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#E6E6E6\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n\r\n    //Typography Variables\r\n    primaryFont: \"'Raleway', sans-serif\",\r\n    headingFont: \"'Playfair Display', serif\",\r\n\r\n    //Other Variables\r\n    boxShadow: \"2px 2px 5px rgba(0,0,0,0.2)\",\r\n\r\n    //Media Query Breakpoints\r\n    small: \"575.98px\", \r\n    medium: \"767.98px\",\r\n    large: \"991.98px\",\r\n    desktop: \"1199.98px\"\r\n}","import { createGlobalStyle } from 'styled-components';\r\nimport { variables } from './variables';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n}\r\n*, *:before, *:after {\r\n  -webkit-box-sizing: inherit;\r\n  -moz-box-sizing: inherit;\r\n  box-sizing: inherit;\r\n}\r\nbody {\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    font-family: ${variables.primaryFont};\r\n    text-align: center;\r\n    overflow-x: hidden;\r\n}\r\nh1, h2, h3, h4, h5, h6 {\r\n    font-family: ${variables.headingFont};\r\n    font-weight: 400;\r\n    margin-bottom: 3rem;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;","import styled from 'styled-components';\r\n\r\nexport const Item = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 1fr;\r\ngrid-gap: 0rem;\r\njustify-content: center;\r\nalign-items: center;\r\n.colors {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Item } from './styles/components/themeItem';\r\n\r\nexport default function ThemeItem(props) {\r\n    return (\r\n        <Item>\r\n           <div className=\"colors\">\r\n               <div style={{ height: \"20px\", width: \"20px\", borderRadius: \"50%\", marginRight: \"5px\", backgroundColor: props.primary }}></div>\r\n               <div style={{ height: \"20px\", width: \"20px\", borderRadius: \"50%\", marginRight: \"5px\", backgroundColor: props.secondary }}></div>\r\n               <div style={{ height: \"20px\", width: \"20px\", borderRadius: \"50%\", backgroundColor: props.tertiary }}></div>\r\n           </div>\r\n           <div className=\"name\">\r\n               <p>{props.name}</p>\r\n           </div> \r\n        </Item>\r\n    )\r\n}\r\n\r\nThemeItem.propTypes = {\r\n    name: PropTypes.string,\r\n    primary: PropTypes.string,\r\n    secondary: PropTypes.string,\r\n    tertiary: PropTypes.string,\r\n\r\n}\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const StyledImage = styled.img`\r\nwidth: 90%;\r\nmax-width: 250px;\r\nheight: 100%;\r\nobject-fit: cover;\r\ntop: 0;\r\nleft: 0;\r\nposition: absolute;\r\n\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\na {\r\n    text-decoration: none;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n}\r\n.overlay {\r\n    width: 80%;\r\n    max-width: 500px;\r\n    height: 100%;\r\n    background: linear-gradient(90deg, rgba(0,0,0,0.3), rgba(0,0,0,0.3), rgba(0,0,0,0));\r\n    z-index: 80;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n}\r\nh1 {\r\n    font-size: 1.5rem;\r\n    color: ${props => variables[props.theme.theme].white};\r\n    z-index: 100;\r\n    padding: 0;\r\n    margin: 0rem 3rem;\r\n    text-transform: uppercase;\r\n}\r\n@media only screen and (max-width: ${variables.small}) {\r\n    display: none;\r\n\r\n}\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledImage, LogoContainer } from './styles/components/logo';\r\n\r\n\r\nexport default function Logo(props) {\r\n    const { theme } = props\r\n    return (\r\n        <LogoContainer>\r\n            <StyledImage \r\n                src={require(`../images/${theme}.svg`)} \r\n                alt=\"logo\"\r\n            />\r\n            <div className=\"overlay\"></div>\r\n            <Link to=\"/\">\r\n                <h1>Dictionary App</h1>\r\n            </Link>\r\n        </LogoContainer>\r\n    )\r\n}\r\n\r\nLogo.propTypes = {\r\n    theme: PropTypes.string\r\n}\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const NavBar = styled.div`\r\nposition: absolute;\r\ntop: 0;\r\nwidth: 100%;\r\nheight: 50px;\r\nbox-shadow: ${variables.boxShadow};\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 0rem 3rem 0rem 0rem;\r\nalign-items: center;\r\nbackground: ${props => variables[props.theme.theme].primary};\r\n.flexItem {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.drawer {\r\n    right: 0px;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].backgroundLight };\r\n    position: absolute;\r\n    top: 50px;\r\n    width: 300px;\r\n    z-index: 11;\r\n    border-left: 2px solid gray;\r\n    border-bottom: solid 2px gray;\r\n    transition: 350ms ease-in-out;\r\n    padding-bottom: 5rem;\r\n    height: calc(100vh - 50px);\r\n    overflow: auto;\r\n    opacity: 1;\r\n}\r\n.open {\r\n    width: 0px;\r\n    opacity: 0;\r\n}\r\n.selected {\r\n    background-color: lightgrey;\r\n}\r\nul {\r\n    width: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n.icon {\r\n    cursor: pointer;\r\n}\r\nli {\r\n    list-style: none;\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    transition: 200ms ease-in;\r\n\r\n    &:hover {\r\n        background: lightgray;\r\n    }\r\n}\r\n.avatar img {\r\n    height: 35px;\r\n    width: 35px;\r\n    margin-right: 1rem;\r\n    box-shadow: 0px 0px 2px rgba(0,0,0,0.8);\r\n    border-radius: 50%;\r\n}\r\n.link {\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    color: ${props => variables[props.theme.theme].white};\r\n    margin: 0rem 1rem;\r\n    transition: 200ms linear;\r\n    padding-bottom: 0.25rem;\r\n    &:hover {\r\n        border-bottom: 5px solid rgba(0, 0,0,0.1);\r\n\r\n    }\r\n}\r\nsmall {\r\n    color: lightgray;\r\n    font-size: 0.8rem;\r\n    text-align: center;\r\n    .credit {\r\n        color: lightgray;\r\n        font-size: 0.8rem;\r\n        display: inline;\r\n        text-decoration: none;\r\n        cursor: pointer;\r\n    }\r\n}\r\n.navLinks {\r\n    margin: 0rem 2rem;\r\n    \r\n}\r\n@media only screen and (max-width: ${variables.large}) {\r\n    .navLinks {\r\n        display: none;\r\n    }\r\n}\r\n@media only screen and (max-width: ${variables.small}) {\r\n    justify-content: flex-end;\r\n    \r\n}\r\n\r\n`;\r\n\r\nexport const LoggedIn = styled.div`\r\npadding: 0rem 2rem 0rem 1rem;\r\ntext-align: left;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n`;\r\n\r\nexport const NavSection = styled.nav`\r\ntext-align: left;\r\npadding: 0rem 1rem 0rem 0rem;\r\n.signOut {\r\n    display: block;\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    background: transparent;\r\n    border: none;\r\n    font-family: ${variables.primaryFont};\r\n    transition: 200ms ease-in;\r\n    width: 100%;\r\n    text-align: left;\r\n    cursor: pointer;\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    &:hover {\r\n        background: lightgray;\r\n    }\r\n}\r\nh3 {\r\n    margin: 1rem 1rem 0rem 1rem;\r\n    padding: 0rem;\r\n}\r\na {\r\n    font-size: 1rem;\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    text-decoration: none;\r\n    display: block;\r\n    padding: 0.5rem;\r\n    transition: 200ms ease-in;\r\n    &:hover {\r\n        background: lightgray;\r\n    }\r\n\r\n}\r\np{\r\n    font-size: 1rem;\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    padding: 0.5rem;\r\n    margin: 0;\r\n    transition: 200ms ease-in;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: lightgray;\r\n    }\r\n}\r\n\r\n`\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport ThemeItem from './ThemeItem';\r\nimport Logo from '../components/Logo';\r\nimport { variables } from './styles/variables';\r\nimport { NavBar, LoggedIn, NavSection } from './styles/components/navigation';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAdjust, faBars, faArrowRight, faSignOutAlt, faPalette } from '@fortawesome/free-solid-svg-icons'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Navigation(props) {\r\n    const [ themeValue, setThemeValue ] = useState('');\r\n    const [ drawerOpen, setDrawerOpen ] = useState(false);\r\n    const navRef = useRef();\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClick, false);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClick, false);\r\n        }\r\n    }, []);\r\n    \r\n    // This closes the navigation drawer when a user clicks outside of the drawer\r\n    const handleClick = (e) => {\r\n        if(!navRef.current.contains(e.target)) {\r\n            setDrawerOpen(false);\r\n        }\r\n    }\r\n\r\n    const setTheme = (theme) => {\r\n        setThemeValue(theme);\r\n        props.toggleTheme(theme);\r\n    }\r\n\r\n    const toggleDrawer = () => {\r\n        setDrawerOpen(!drawerOpen);\r\n    }\r\n\r\n    const closeDrawer = () => {\r\n        setDrawerOpen(false)\r\n    }\r\n\r\n\r\n    const { nightMode, toggleNightMode, signout, currentTheme, isSignedIn, userImage } = props\r\n    return (\r\n        <NavBar ref={navRef}>\r\n            <Logo theme={currentTheme} />\r\n            <div className=\"flexItem\">\r\n                <div className=\"navLinks\">\r\n                    <NavLink \r\n                        className=\"link\"\r\n                        activeStyle={{ borderBottom: \"5px solid rgba(0, 0,0,0.1)\" }}\r\n                        exact\r\n                        to=\"/\">\r\n                        Search\r\n                    </NavLink>\r\n                    <NavLink \r\n                        className=\"link\"\r\n                        activeStyle={{ borderBottom: \"5px solid rgba(0, 0,0,0.1)\" }} \r\n                        exact\r\n                        to=\"/collection\">\r\n                        Your Collection\r\n                    </NavLink>\r\n                    <NavLink \r\n                        className=\"link\"\r\n                        activeStyle={{ borderBottom: \"5px solid rgba(0, 0,0,0.1)\" }} \r\n                        exact\r\n                        to=\"/practice\">\r\n                        Practice\r\n                    </NavLink>\r\n                    {isSignedIn ? null : <NavLink \r\n                        className=\"link\"\r\n                        activeStyle={{ borderBottom: \"5px solid rgba(0, 0,0,0.1)\" }}\r\n                        exact\r\n                        to=\"/create-account\">\r\n                        Create Account\r\n                    </NavLink>}\r\n                </div>\r\n                <div className=\"avatar\">\r\n                    {isSignedIn && userImage ? <img src={userImage} alt={`avatar`} /> : null}\r\n                </div>\r\n                <FontAwesomeIcon \r\n                    icon={ faBars } \r\n                    color={ variables.primaryWhite } \r\n                    className=\"icon\"\r\n                    onClick={toggleDrawer} />\r\n                <div \r\n                    className={drawerOpen ? \"drawer\" : \"open drawer\"}>\r\n                    <LoggedIn>\r\n                        <FontAwesomeIcon \r\n                            onClick={closeDrawer} \r\n                            className=\"icon\"\r\n                            style={{ margin: \"1rem\", fontSize: \"1.5rem\" }} \r\n                            icon={ faArrowRight } \r\n                            color={nightMode === \"light\" ? variables.primaryWhite : variables.primaryDark} />\r\n                            <p>{isSignedIn ? \"You are logged in\" : \"You are not logged in\"}</p>\r\n                    </LoggedIn>\r\n                    <hr/>\r\n                    <NavSection>\r\n                        <h3>Navigation</h3>\r\n                        <hr/>\r\n                        <Link to=\"/\">Search</Link>\r\n                        <Link to=\"/collection\">Your Collection</Link>\r\n                        <Link to=\"/practice\">Practice</Link>\r\n                        {isSignedIn ? null : <Link to=\"/create-account\">Sign in / Create Account</Link>}\r\n                    </NavSection>\r\n                    <NavSection>\r\n                        <h3>Account and Settings</h3>\r\n                        <hr/>\r\n                        <button \r\n                            onClick={signout} \r\n                            className=\"signOut\"><FontAwesomeIcon color={nightMode === \"light\" ? variables.primaryWhite : variables.primaryDark} icon={faSignOutAlt}/> Sign Out</button>\r\n                        <p \r\n                            className=\"navItem\"\r\n                            onClick={toggleNightMode}>\r\n                            <FontAwesomeIcon \r\n                                color={nightMode === \"light\" ? variables.primaryWhite : variables.primaryDark} \r\n                                icon={faAdjust}/> {nightMode === \"light\" ? \"Dark\" : \"Light\"} Mode\r\n                        </p>\r\n                        <p>\r\n                            <FontAwesomeIcon \r\n                                color={nightMode === \"light\" ? variables.primaryWhite : variables.primaryDark} \r\n                                icon={faPalette} /> Themes\r\n                        </p>\r\n                        <ul>\r\n                            <li \r\n                                className={currentTheme === \"mohaka\" ? \"selected\" : null}\r\n                                onClick={setTheme.bind(this, \"mohaka\")}>\r\n                                <ThemeItem \r\n                                    name=\"Mohaka\" \r\n                                    primary={variables.mohaka.primary}\r\n                                    secondary={variables.mohaka.secondary}\r\n                                    tertiary={variables.mohaka.tertiary}\r\n                                />        \r\n                            </li>\r\n                            <li \r\n                                className={currentTheme === \"inn\" ? \"selected\" : null}\r\n                                onClick={setTheme.bind(this, \"inn\")}>\r\n                            <ThemeItem \r\n                                    name=\"Inn\" \r\n                                    primary={variables.inn.primary}\r\n                                    secondary={variables.inn.secondary}\r\n                                    tertiary={variables.inn.tertiary}\r\n                                />  \r\n                            </li>\r\n                            <li \r\n                                className={currentTheme === \"mataura\" ? \"selected\" : null}\r\n                                onClick={setTheme.bind(this, \"mataura\")}>\r\n                                <ThemeItem \r\n                                    name=\"Mataura\" \r\n                                    primary={variables.mataura.primary}\r\n                                    secondary={variables.mataura.secondary}\r\n                                    tertiary={variables.mataura.tertiary}\r\n                                />  \r\n                            </li>\r\n                            <li \r\n                                className={currentTheme === \"ngaruroro\" ? \"selected\" : null}\r\n                                onClick={setTheme.bind(this, \"ngaruroro\")}>\r\n                                <ThemeItem \r\n                                    name=\"Ngaruroro\" \r\n                                    primary={variables.ngaruroro.primary}\r\n                                    secondary={variables.ngaruroro.secondary}\r\n                                    tertiary={variables.ngaruroro.tertiary}\r\n                                />  \r\n                            </li>\r\n                            <li \r\n                                className={currentTheme === \"taieri\" ? \"selected\" : null}\r\n                                onClick={setTheme.bind(this, \"taieri\")}>\r\n                                <ThemeItem \r\n                                    name=\"Taieri\" \r\n                                    primary={variables.taieri.primary}\r\n                                    secondary={variables.taieri.secondary}\r\n                                    tertiary={variables.taieri.tertiary}\r\n                                />  \r\n                            </li>\r\n                        </ul>\r\n                    </NavSection>\r\n                    <small>Themes come from <a href=\"https://products.ls.graphics/paaatterns/\" target=\"_blank\" className=\"credit\">Paaatterns</a></small>\r\n                </div>\r\n            </div>\r\n        </NavBar>\r\n    )\r\n\r\n}\r\n\r\nNavigation.propTypes = {\r\n    nightMode: PropTypes.string,\r\n    toggleNightMode: PropTypes.func,\r\n    toggleTheme: PropTypes.func,\r\n    signout: PropTypes.func,\r\n    currentTheme: PropTypes.string,\r\n    isSignedIn: PropTypes.bool,\r\n    userImage: PropTypes.string,\r\n}\r\n\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const Container = styled.div`\r\n    height: 250px;\r\n    a {\r\n        text-decoration: none;\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    }\r\n    .card {\r\n        border: solid 1px lightgray;\r\n        border-radius: 1rem;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        min-height: 250px;\r\n        transition: 100ms ease-out;\r\n        box-shadow: 0px 0px 2px rgba(0,0,0,0.2);\r\n        &:hover {\r\n            box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 1.5rem;\r\n        padding: 0.5rem 0rem;\r\n        opacity: 0.9;\r\n        box-shadow: 0px 0px 2px rgba(0,0,0,0.2);\r\n        margin: 0;\r\n        width: 95%;\r\n        z-index: 9;\r\n        background-color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white }; \r\n    }\r\n    img {\r\n        position: absolute;\r\n        width: 95%;\r\n        height: 95%;\r\n        margin: auto;\r\n        position: absolute;\r\n        border-radius: 10px;\r\n        box-shadow: 0px 0px 2px rgba(0,0,0,0.2);\r\n        top: 50%;\r\n        object-fit: cover;\r\n        top: 50%; left: 50%;\r\n        -webkit-transform: translate(-50%,-50%);\r\n            -ms-transform: translate(-50%,-50%);\r\n                transform: translate(-50%,-50%);\r\n    }\r\n    \r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container } from './styles/components/wordSetCard';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function WordSetCard (props) {\r\n    const { name, imageURL } = props.wordSet;\r\n    return (\r\n        <Container>\r\n            <Link to={`/practice/${props.id}`}>\r\n                <div className=\"card\">\r\n                    <h2>{name}</h2>\r\n                    <img src={imageURL} alt={name} />\r\n                </div>\r\n            </Link>\r\n        </Container>\r\n    )\r\n    \r\n}\r\n\r\nWordSetCard.propTypes = {\r\n    wordSet: PropTypes.object\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div>\r\n            <p>Loading...</p> \r\n            <FontAwesomeIcon spin icon={faSpinner} size=\"lg\" />\r\n        </div>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const Section = styled.section`\r\n    padding: 0rem 2rem;\r\n    .title {\r\n        font-size: 2.5rem;\r\n        text-transform: uppercase;\r\n    }\r\n    .grid {\r\n        display: grid;\r\n        grid-template-rows: repeat(auto-fit, 250px);\r\n        grid-template-columns: repeat(auto-fit, minmax(250px, 300px));\r\n        justify-content: center;\r\n        grid-gap: 1.5rem;\r\n        margin: 3rem 3rem 10rem 3rem;\r\n        @media only screen and (max-width: ${variables.small}) {\r\n            margin: 2rem 0.5rem;\r\n        }\r\n    }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport WordSetCard from './WordSetCard';\r\nimport Loading from '../components/Loading';\r\nimport firebase from 'firebase/app';\r\nimport { Section } from './styles/components/practiceTests';\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\nexport default function PracticeTests() {\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ wordSets, setWordSets ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getWordSets();\r\n    }, [])\r\n\r\n    const getWordSets = () => {\r\n        db.collection('wordSet')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = [];\r\n            snapshot.docs.map(doc => {\r\n                return collection.push(doc);\r\n            })\r\n            setWordSets(collection);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Section>\r\n            <h2 className=\"title\">Practice Your Vocabulary</h2>\r\n            <p>Test your skills by reviewing flashcards and taking tests in any of the categories below</p>\r\n            <div className=\"grid\">\r\n                {isLoading \r\n                    ? <Loading/> \r\n                    : wordSets.length > 0 \r\n                    ? wordSets.map(set => {\r\n                        return <WordSetCard \r\n                            key={set.id} \r\n                            wordSet={set.data()} \r\n                            id={set.id} />}) \r\n                        : <p>Oh no! We couldn't find any word sets to practice</p>}\r\n\r\n            </div>\r\n        </Section>\r\n    )\r\n}\r\n","import { variables } from '../variables';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport const StyledFooter = styled.footer`\r\n    background-color: ${props =>\r\n    variables[props.theme.theme].primary };\r\n    color: ${props =>\r\n    variables[props.theme.theme].white };\r\n    width: 100vw;\r\n    position: relative;\r\n    .mainContent {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 2rem;\r\n    padding: 3rem;\r\n    @media only screen and (max-width: ${variables.small}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n    \r\n    .link {\r\n        display: block;\r\n        color: ${props =>\r\n        variables[props.theme.theme].white };\r\n        text-decoration: none;\r\n        padding: 0.4rem 0rem;\r\n        transition: 100ms linear;\r\n        &:hover {\r\n            transform: scale(1.1);\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n    h2 {\r\n        margin: 2rem 0rem;\r\n        padding: 0;\r\n    }\r\n    }\r\n    .bottom {\r\n        text-align: center;\r\n        background-color: ${props =>\r\n        variables[props.theme.theme].secondary };\r\n        width: 100%;\r\n        margin: 0;\r\n        padding: 2rem;\r\n        a {\r\n            color: ${props =>\r\n            variables[props.theme.theme].white };\r\n            text-decoration: none;\r\n\r\n        }\r\n    }\r\n    .info {\r\n        max-width: 500px;\r\n        margin: 0 auto;\r\n    }\r\n    img {\r\n        height: 50px;\r\n        width: 100vw;\r\n        object-fit: cover;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        background-color: white;\r\n    }\r\n    \r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { StyledFooter } from './styles/components/footer';\r\nimport { withTheme } from 'styled-components';\r\n\r\nfunction Footer(props) {\r\n    const { theme } = props;\r\n    \r\n    return (\r\n        <StyledFooter>\r\n                <img src={require(`../images/${theme.theme}.svg`)} alt=\"\" />\r\n                <div className=\"mainContent\">\r\n                    <div className=\"info\">\r\n                        <h2>Dictionary App</h2>\r\n                        <p>Improve your vocabulary with the Dictionary App!</p>\r\n                        <p>Search the dictionary and add words to your own collection to review and practice later as flashcards and vocab tests.</p>\r\n                    </div>\r\n                    <div className=\"navigation\">\r\n                        <h2>Navigation</h2>\r\n                        <div>\r\n                            <Link className=\"link\" to=\"/\">Search</Link>\r\n                            <Link className=\"link\" to=\"/collection\">Your Collection</Link>\r\n                            <Link className=\"link\" to=\"/practice\">Practice</Link>\r\n                            <Link className=\"link\" to=\"/create-account\">Create Account</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom\">&copy; Copyright {new Date().getFullYear()}: <a href=\"http://www.andrewjohnweiss.com\" target=\"_blank\">Andrew John Weiss</a></div>\r\n        </StyledFooter>\r\n    )\r\n}\r\n\r\nexport default withTheme(Footer);\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const InverseButton = styled.button`\r\n    font-size: 1rem;\r\n    height: 35px;\r\n    width: 110px;\r\n    font-family: ${variables.primaryFont};\r\n    color: ${props => variables[props.theme.theme].dark};\r\n    background: ${props => variables[props.theme.theme].white};\r\n    border-radius: 0.5rem;\r\n    transition: 300ms ease-in-out;\r\n    border: solid 2px ${props => variables[props.theme.theme].primary};\r\n    &:hover {\r\n        background: ${props => variables[props.theme.theme].primary};\r\n        color: ${props => variables[props.theme.theme].white};\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    font-size: 1rem;\r\n    height: 35px;\r\n    width: 100px;\r\n    font-family: ${variables.primaryFont};\r\n    color: ${props => variables[props.theme.theme].white};\r\n    background: ${props => variables[props.theme.theme].primary};\r\n    border-radius: 0.5rem;\r\n    transition: 300ms ease-in-out;\r\n    border: solid 2px ${props => variables[props.theme.theme].primary};\r\n    &:hover {\r\n        background: transparent;\r\n        color: ${props => \r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { InverseButton, StyledButton } from './styles/components/button';\r\n\r\nexport default function Button(props) {\r\n    if (props.inverse) {\r\n        return (\r\n            <InverseButton>\r\n                {props.children}\r\n            </InverseButton>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledButton onClick={props.handleClick ? props.handleClick.bind(this) : null }>\r\n                {props.children}\r\n            </StyledButton>\r\n        )\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    inverse: PropTypes.bool,\r\n    handleClick: PropTypes.func,\r\n}\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const Container = styled.div`\r\n    position: ${props => props.searched ? \"absolute\" : \"relative\"};\r\n    top: ${props => props.searched ? \"-50px\" : \"0\"};\r\n    left: ${props => props.searched ? \"0px\" : \"0\"};\r\n    max-width: ${props => props.searched ? \"100%\" : \"500px\"};\r\n    padding: 0;\r\n    margin: 0rem auto;\r\n    margin-bottom: ${props => props.searched ? \"2rem\" : \"0rem\"};\r\n    justify-content: center;\r\n    display: flex;\r\n    min-width: 300px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n    min-height: ${props => props.searched ? \"0px\" : \"calc(100vh - 100px)\"};\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: ${props => props.searched ? \"0rem\" : \"2rem 0rem\"};\r\n    transform: ${props => props.searched ? \"translate(0px, 0px)\" : \"none\"};\r\n    h1 {\r\n        font-size: 2.5rem;\r\n        text-transform: uppercase;\r\n        @media only screen and (max-width: ${variables.small}) {\r\n            font-size: 2rem;\r\n            margin: 0rem 1rem 2rem 1rem;\r\n        }\r\n    }\r\n    .subtext {\r\n        margin: 3rem 2rem;\r\n    }\r\n`;\r\n\r\n\r\nexport const SearchContainer = styled.div`\r\n    position: ${props => props.searched ? \"absolute\" : \"relative\"};\r\n    top: 0px;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].backgroundLight : variables[props.theme.theme].backgroundDark };\r\n    min-width: ${props => props.searched ? \"100%\" : \"300px\"};\r\n    max-width: ${props => props.searched ? \"100%\" : \"500px\"};\r\n    min-height: ${props => props.searched ? \"50px\" : \"300px\"};\r\n    max-height: ${props => props.searched ? \"50px\" : \"300px\"};\r\n    width: 90%;\r\n    height: 90%;\r\n    border-radius: ${props => props.searched ? \"0rem\" : \"1rem\"};;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: 300ms ease-in;\r\n    box-shadow: ${variables.boxShadow};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-radius: ${props => props.searched ? \"0rem\" : \"1rem\"};;\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n    z-index: 10;\r\n    display: flex;\r\n    width: 80%;\r\n    min-width: ${props => props.searched ? \"75px\" : \"250px\"};;\r\n    border-radius: 1rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: ${props => props.searched ? \"50px\" : \"200px\"};\r\n    max-height: ${props => props.searched ? \"50px\" : \"200px\"};\r\n    background-color: ${props =>\r\n    props.searched ? \"none\" : variables[props.theme.theme].white };\r\n    \r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    margin-right: 0.5rem;\r\n    height: 35px;\r\n    font-family: ${variables.primaryFont};\r\n    padding-left: 0.5rem;\r\n    width: 200px;\r\n    color: ${props => variables[props.theme.theme].dark};\r\n    background: ${props => variables[props.theme.theme].white};\r\n    border-radius: 0.5rem;\r\n    border: solid 2px ${props => variables[props.theme.theme].primary};\r\n    @media only screen and (max-width: ${variables.small}) {\r\n       width: 130px;\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport { SearchContainer, Section, Image, StyledForm, StyledInput, Container } from './styles/components/searchBar';\r\n\r\n\r\nexport default function SearchBar(props) {\r\n    const [ query, setQuery ] = useState('');\r\n    const [ isWordSearched, setIsWordSearched ] = useState(false);\r\n\r\n    const handleInputChange = (e) => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        props.handleSearch(query);\r\n        setIsWordSearched(true);\r\n        setQuery('');\r\n    }\r\n\r\n    const { theme } = props;\r\n    return (\r\n        <Section searched={isWordSearched}>\r\n            <div>\r\n                {isWordSearched ? null : <div>\r\n                    <h1 className=\"title\">Dictionary Search</h1>\r\n                </div>}\r\n                <Container searched={isWordSearched}>\r\n                    <SearchContainer searched={isWordSearched} >\r\n                        <Image \r\n                            src={require(`../images/${theme}.svg`)} \r\n                            alt=\"\" \r\n                            searched={isWordSearched}    \r\n                            />\r\n                        <StyledForm \r\n                            searched={isWordSearched}\r\n                            onSubmit={submitForm}>\r\n                            <StyledInput \r\n                                name=\"query\" \r\n                                type=\"text\" \r\n                                placeholder=\"Search for a word\"\r\n                                value={query}\r\n                                required\r\n                                onChange={handleInputChange}/>\r\n                            <Button inverse={true} type=\"submit\">Search</Button>\r\n                        </StyledForm>\r\n                    </SearchContainer>\r\n                </Container>\r\n                {isWordSearched ? null : <div className=\"subtext\">\r\n                    <p>Add words to your collection and review them as interactive flashcards</p>\r\n                    <p>Test your vocabulary skills by taking vocabulary tests</p>\r\n                </div>}\r\n            </div>\r\n        </Section>\r\n    )\r\n    \r\n}\r\n\r\nSearchBar.propTypes = {\r\n    handleSearch: PropTypes.func,\r\n    theme: PropTypes.string\r\n}","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const StyledHeader = styled.header`\r\nposition: relative;\r\nwidth: 100%;\r\nheight: 100px;\r\nbackground: ${props => variables[props.theme.theme].secondary};\r\nbox-shadow: ${variables.boxShadow};\r\n&:after {\r\nposition: absolute;\r\nborder-style: solid;\r\nborder-width: 0 0 100px 500px;\r\nborder-color: transparent transparent rgba(255, 255, 255, 0.3) transparent;\r\nright: 0;\r\ntop: 0;\r\ncontent: \"\";\r\n}\r\n&:before  {\r\nposition: absolute;\r\nborder-style: solid;\r\nborder-width: 50px 0 0 70px;\r\nborder-color: transparent transparent transparent rgba(255, 255, 255, 0.3);\r\nleft: 0;\r\nbottom: 0;\r\ncontent: \"\";\r\n}\r\n`\r\n","import React from 'react';\r\nimport { StyledHeader } from './styles/components/header';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <StyledHeader />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\n\r\nexport default class Home extends React.Component {\r\n    uiConfig = {\r\n        // Popup signin flow rather than redirect flow.\r\n        signInFlow: 'popup',\r\n        // Redirects once sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n        signInSuccessUrl: '/dictionaryApp#/',\r\n        // Displays Email, Google and Github as auth providers.\r\n        signInOptions: [\r\n          firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          firebase.auth.GithubAuthProvider.PROVIDER_ID\r\n        ]\r\n      };\r\n\r\n      render() {\r\n          return <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\r\n      }\r\n}","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const ModalContainer = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%,-50%);\r\n    max-height: 500px;\r\n    max-width: 700px;\r\n    width: 90%;\r\n    height: 90%;\r\n    border-radius: 1rem;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    border: ${props => \r\n    props.theme.nightMode === \"light\" ? `solid 1px ${variables[props.theme.theme].white}` : `solid 1px ${variables[props.theme.theme].dark}` };\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0px 0px 15px rgba(0,0,0,0.4);\r\n    z-index: 50;\r\n    .hide {\r\n        opacity: 0.5;\r\n    }\r\n    .icon {\r\n        position: absolute;\r\n        top: 1rem;\r\n        right: 1rem;\r\n        cursor: pointer;\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-radius: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    height: 90%;\r\n    width: 90%;\r\n    border-radius: 1rem;\r\n    z-index: 40;\r\n    position: fixed;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    border: ${props => \r\n    props.theme.nightMode === \"light\" ? `solid 1px ${variables[props.theme.theme].white}` : `solid 1px ${variables[props.theme.theme].dark}` };\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0rem 0.5rem;\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.4);\r\n    z-index: 10;\r\n`;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { ModalContainer, ContentContainer } from './styles/components/modal';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Modal(props) {\r\n    const modalRef = useRef();\r\n    const { showModal, heading, closeModal, showClose } = props;\r\n    \r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClick, false);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClick, false);\r\n        }\r\n    });\r\n\r\n    const handleClick = (e) => {\r\n        if(!modalRef.current.contains(e.target)) {\r\n            closeModal();            \r\n        }\r\n    }\r\n\r\n    if (showModal) {\r\n        return(\r\n            <ModalContainer ref={modalRef}>\r\n                <ContentContainer>\r\n                    <div>\r\n                        {showClose ? <FontAwesomeIcon className=\"icon\" data-dismiss=\"modal\" aria-label=\"Close\" icon={faTimesCircle} onClick={closeModal} /> : null }\r\n                        <h1>{heading}</h1>\r\n                        {props.children}\r\n                    </div>\r\n                </ContentContainer>\r\n            </ModalContainer>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nModal.propTypes = {\r\n    heading: PropTypes.string,\r\n    showModal: PropTypes.bool,\r\n    closeModal: PropTypes.func,\r\n    showClose: PropTypes.bool,\r\n}\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const DefinitionContainer = styled.div`\r\nwidth: 100%;\r\nmax-width: 500px;\r\nmin-width: 250px;\r\nheight: 100%;\r\ntext-align: left;\r\nposition: relative;\r\nbackground-color: ${props =>\r\nprops.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\ncolor: ${props =>\r\nprops.theme.nightMode === \"light\" ? variables[props.theme.theme].light : variables[props.theme.theme].dark };\r\npadding: 1.5rem;\r\nborder: ${props =>\r\nprops.theme.nightMode === \"light\" ? `solid 1px ${variables[props.theme.theme].light}` : `solid 1px ${variables[props.theme.theme].dark}` };\r\nmargin: 1rem;\r\nborder-radius: 1rem;\r\ntransition: 300ms ease-in;\r\nopacity: ${props => props.isVisible ? '1' : '0'};\r\ntransform: ${props => props.isVisible\r\n            ? 'translateX(0%)'\r\n            : 'translateX(10%)'};\r\ntransition-timing-function: ease-in-out;\r\ntransition-delay: ${props => 200 * props.index}ms;\r\n& img {\r\n    position: absolute;\r\n    top: 1.5rem;\r\n    right: 4.5rem;\r\n    height: 75px;\r\n    width: 75px;\r\n    border-radius: 50%;\r\n    border: ${props =>\r\n    props.theme.nightMode === \"light\" ? `solid 1px ${variables[props.theme.theme].light}` : `solid 1px ${variables[props.theme.theme].dark}` };\r\n}\r\n& h2 {\r\n    font-size: 2rem;\r\n    padding: 0rem;\r\n    margin: 0rem;\r\n}\r\n& hr {\r\n    text-align: center;\r\n}\r\n& sup {\r\n    font-size: 0.8rem;\r\n    color: grey;\r\n    margin-left: 0.5rem;\r\n}\r\n& .example {\r\n    font-style: italic;\r\n    font-size: 0.9rem;\r\n}\r\n&:hover {\r\n    box-shadow: 2px 2px 5px rgba(0,0,0,0.5);\r\n}\r\n.cardHeading {\r\n    min-height: 80px;\r\n}\r\n.grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr 75px;\r\n    grid-gap: 1rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\nbutton {\r\n    background: transparent;\r\n    border: none;\r\n    position: absolute;\r\n    top: 1rem;\r\n    right: 1rem;\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark }; \r\n    transition: 200ms ease-in-out;\r\n    &:hover {\r\n        transform: scale(1.3);\r\n    }\r\n    .icon {\r\n        font-size: 2rem;\r\n        color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark }; \r\n    }\r\n\r\n}\r\n`;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\nimport Modal from '../components/Modal';\r\nimport { DefinitionContainer } from './styles/components/definitionCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBookmark } from '@fortawesome/free-solid-svg-icons'\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default function DefinitionCard(props) {\r\n    const [ showErrorModal, setShowErrorModal ] = useState(false);\r\n    const [ showConfirmationModal, setShowConfirmationModal ] = useState(false);\r\n\r\n    const closeModal = () => {\r\n        setShowErrorModal(false);\r\n        setShowConfirmationModal(false);\r\n    }\r\n\r\n    const addToCollection = () => {\r\n        if(props.isSignedIn) {\r\n            const uid = firebase.auth().currentUser.uid;\r\n            const { word, pronunciation } = props;\r\n            const { type, definition, example, image_url } = props.def;\r\n                db.collection('users')\r\n                .doc(uid)\r\n                .collection(\"wordCollection\")\r\n                    .add({\r\n                        word,\r\n                        pronunciation,\r\n                        type,\r\n                        definition,\r\n                        example, \r\n                        image_url,\r\n                        dateAdded: new Date()\r\n                    })\r\n            setShowConfirmationModal(true);\r\n        } else {\r\n            setShowErrorModal(true);\r\n        }\r\n    }\r\n\r\n    const { word, pronunciation, index, isVisible } = props;\r\n    const { type, definition, example, image_url } = props.def;\r\n    return (\r\n        <React.Fragment>\r\n            <ReactTooltip />\r\n            <DefinitionContainer isVisible={isVisible} index={index}>\r\n                <div className=\"cardHeading\">\r\n                    <h2>{word}<sup>{type}</sup></h2>\r\n                    {image_url ? <img src={image_url} alt=\"word\" /> : null }\r\n                    <p>{pronunciation ? `/${pronunciation}/` : \"\"}</p>\r\n                    <button data-tip=\"Add word to your collection\" onClick={addToCollection}><FontAwesomeIcon icon={faBookmark} className=\"icon\" /></button>\r\n                </div>\r\n                <hr/>\r\n                <p>{definition}</p>\r\n                <p className=\"example\">{example}</p>\r\n            </DefinitionContainer>\r\n            {showErrorModal ? \r\n                    <Modal \r\n                        showModal={showErrorModal}\r\n                        showClose={true}\r\n                        closeModal={closeModal}\r\n                        heading=\"Please Create an Account to Add Words to Your Collection\" \r\n                            >\r\n                        <FirebaseAuth />\r\n                    </Modal>\r\n                    : null\r\n            }\r\n            {showConfirmationModal ? \r\n                    <Modal \r\n                        showModal={showConfirmationModal}\r\n                        showClose={true}\r\n                        closeModal={closeModal}\r\n                        heading=\"Word Added to your Collection\" \r\n                            >\r\n                    </Modal>\r\n                    : null\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nDefinitionCard.propTypes = {\r\n    def: PropTypes.object,\r\n    word: PropTypes.string,\r\n    pronunciation: PropTypes.string,\r\n    isSignedIn: PropTypes.bool,\r\n    theme: PropTypes.string,\r\n    index: PropTypes.number,\r\n    isVisible: PropTypes.bool,\r\n}","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const Container = styled.div`\r\nmargin: 0rem 0rem 5rem 0rem;\r\nwidth: 100vw;\r\ndisplay: flex;\r\njustify-content: center;\r\npadding: 3rem 0rem;\r\nborder-radius: 5rem 5rem 0rem 0rem;\r\nbackground-color: ${props => props.nightMode === 'light' ? \"rgba(255,255,255,0.1)\" : \"rgba(0,0,0,0.1)\"};\r\n@media only screen and (max-width: ${variables.small}) {\r\n        border-radius: 0rem;\r\n    }\r\n.wordDay {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    width: 90%;\r\n    max-width: 1200px;\r\n    \r\n}\r\n.heading {\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    border-radius: 2rem 2rem 0rem 0rem;\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    text-align: center;\r\n    padding: 1rem;\r\n    height: 120px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    h2 {\r\n        font-size: 2.5rem;\r\n        text-transform: uppercase;\r\n        margin: 0;\r\n        padding: 0;\r\n        @media only screen and (max-width: ${variables.small}) {\r\n            font-size: 1.5rem;\r\n    \r\n    }\r\n    }\r\n}\r\n.top {\r\n    height: calc(100% - 120px);\r\n}\r\n.body {\r\n    border: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    border-right: none;\r\n    border-radius: 0rem 0rem 0rem 2rem;\r\n    height: 100%;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    \r\n}\r\n.bottom {\r\n    border: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    border-radius: 0rem 2rem 2rem 0rem;\r\n    margin-top: 120px;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n}\r\nh3 {\r\n    font-size: 3rem;\r\n    padding: 0rem 3rem;\r\n    @media only screen and (max-width: ${variables.small}) {\r\n        font-size: 2rem;\r\n        padding: 0rem 1rem;\r\n    }\r\n}\r\n.definition {\r\n    padding: 0rem 3rem;\r\n    font-size: 1.2rem;\r\n}\r\n.note {\r\n    padding: 0rem 3rem 1rem 3rem;\r\n    font-style: italic;\r\n    font-size: 0.9rem;\r\n}\r\nsup {\r\n    font-size: 1rem;\r\n}\r\nul {\r\n    list-style: none;\r\n    text-align: center;\r\n    padding: 0;\r\n    margin: 0;\r\n    li {\r\n        padding: 1rem;\r\n    }\r\n    li:first-of-type {\r\n        border-radius: 0rem 2rem 0rem 0rem;\r\n    }\r\n    li:nth-child(odd) {\r\n        background: ${props =>\r\n        props.theme.nightMode === \"light\" ? \"rgba(255,255,255,0.2)\" : \"rgba(0,0,0,0.2)\"};\r\n    }\r\n    li:last-of-type {\r\n        border-radius: 0rem 0rem 2rem 0rem;\r\n    }\r\n    p {\r\n        padding: 0rem 1rem;\r\n    }\r\n    blockquote {\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n}\r\nsmall {\r\n    font-style: italic;\r\n}\r\n@media only screen and (max-width: ${variables.large}) {\r\n    .wordDay {\r\n    grid-template-columns: 1fr;\r\n    width: 90%;\r\n    max-width: 1200px;\r\n    }\r\n    .top {\r\n    height: 100%;\r\n    }\r\n    .body {\r\n        border: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        border-bottom: none;\r\n        height: 100%;\r\n        border-radius: 0rem;\r\n    }\r\n    .bottom {\r\n        border: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        border-radius: 0rem 0rem 2rem 2rem;\r\n        margin-top: 0px;\r\n    }\r\n    ul {\r\n        li:first-of-type {\r\n            border-radius: 0rem;\r\n        }\r\n        li:last-of-type {\r\n            border-radius: 0rem 0rem 2rem 2rem;\r\n        }\r\n    }\r\n\r\n}\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { Container } from './styles/components/wordOfDay';\r\n\r\nexport default function WordOfDay(props) {\r\n    const { word, note, examples } = props.word;\r\n    const { text, partOfSpeech } = props.word.definitions[0];    \r\n    \r\n    return (\r\n        <Container nightMode={props.nightMode}>\r\n            <div className=\"wordDay\">\r\n                <div className=\"top\">\r\n                    <div className=\"heading\">\r\n                        <div>\r\n                            <h2>Word of the Day</h2>\r\n                            <p>{moment(Date.now()).format('MMMM Do YYYY')}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"body\">\r\n                        <h3>{word}<sup>{partOfSpeech}</sup></h3>\r\n                        <p className=\"definition\">{text}</p>\r\n                        <p className=\"note\">({note})</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <ul>\r\n                        {examples.filter((word, i) => i < 3).map(example => {\r\n                            return (\r\n                                <li key={example.id}>\r\n                                <blockquote cite={example.url}>\r\n                                    <p>{example.text}</p>\r\n                                    <small>- {example.title}</small>\r\n                                </blockquote>\r\n                            </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nWordOfDay.propTypes = {\r\n    word: PropTypes.object,\r\n    nightMode: PropTypes.string\r\n}\r\n","import React, { Component } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport Navigation from '../components/Navigation';\r\nimport PracticeTests from '../components/PracticeTests';\r\nimport Footer from '../components/Footer';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Header from '../components/Header';\r\nimport DefinitionCard from '../components/DefinitionCard';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport WordOfDay from '../components/WordOfDay';\r\nimport { withRouter } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        data: [],\r\n        word: '',\r\n        pronunciation: '',\r\n        isLoading: true,\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        badSearch: false,\r\n        wordOfTheDay: {},\r\n        isVisible: false,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false });\r\n                }\r\n            });\r\n        this.getWordOfTheDay();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    handleSearch = (query) => {\r\n        this.setState({ isVisible: false, isLoading: true, badSearch: false })\r\n        fetch(\"https://owlbot.info/api/v4/dictionary/\" + query, {\r\n        headers: {\r\n            Authorization: `Token ${process.env.REACT_APP_OWLBOT_API}`\r\n        }\r\n        }).then(res => res.status > 400 ? this.setState({ badSearch: true, isLoading: false }) : res.json())\r\n        .then(data => {\r\n            this.setState({ isLoading: false, data: data.definitions, word: data.word, pronunciation: data.pronunciation });\r\n            setTimeout(() => { this.setState({ isVisible: true })}, 300)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    getWordOfTheDay = () => {\r\n        const now = new Date();\r\n        const year = now.getFullYear();\r\n        const month = now.getMonth() + 1;\r\n        const day = now.getDate();\r\n        const todayDate = `${year}-${month}-${day}`\r\n        fetch(`https://api.wordnik.com/v4/words.json/wordOfTheDay?date=${todayDate}&api_key=${process.env.REACT_APP_WORDNIK_API}`, {\r\n            headers: {\r\n                Accept: \"application/json\"\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({ wordOfTheDay: data, isLoading: false })\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Header />\r\n                <Navigation \r\n                    toggleNightMode={this.props.toggleNightMode} \r\n                    nightMode={this.props.nightMode}\r\n                    signout={this.signout}\r\n                    toggleTheme={this.props.toggleTheme}\r\n                    currentTheme={this.props.theme}\r\n                    isSignedIn={this.state.isSignedIn}\r\n                    userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                     />\r\n                <Container>\r\n                    <SearchBar \r\n                        handleSearch={this.handleSearch}\r\n                        theme={this.props.theme}\r\n                    />\r\n                    <FlexContainer>\r\n                        {this.state.isLoading ? <Loading /> : null}\r\n                        {!this.state.isLoading && this.state.word ? this.state.data.map((definition, i) => {\r\n                            return (\r\n                                <DefinitionCard \r\n                                    key={i}\r\n                                    isSignedIn={this.state.isSignedIn}\r\n                                    def={definition}\r\n                                    word={this.state.word}\r\n                                    theme={this.props.theme}\r\n                                    index={i}\r\n                                    isVisible={this.state.isVisible}\r\n                                    pronunciation={this.state.pronunciation}\r\n                                />\r\n                            )\r\n                        }) : null}\r\n                        {this.state.badSearch ? <h3>No Results Found</h3> : null}\r\n                    </FlexContainer>\r\n                </Container>\r\n                {this.state.isLoading ? <Loading /> : <WordOfDay nightMode={this.props.nightMode} word={this.state.wordOfTheDay} />}\r\n                <PracticeTests/>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Had to wrap all my pages in the withRouter to get access to this.props.history for redirecting\r\nexport default withRouter(Home);\r\n\r\nconst FlexContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 1.2rem;\r\n    justify-items: center;\r\n    align-items: center;\r\n    margin: 2rem 0rem;\r\n`;\r\n\r\nconst Container = styled.main`\r\n    min-height: calc(100vh - 100px);\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(190px, 1fr));\r\n    border-bottom: 1px solid ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    border-top: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 2rem;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    @media only screen and (max-width: ${variables.small}) {\r\n                grid-template-columns: 1fr;\r\n            }\r\n    a {\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        padding: 1rem;\r\n        border-right: solid 1px black;\r\n        text-decoration: none;\r\n        @media only screen and (max-width: ${variables.small}) {\r\n                border-bottom: solid 1px ${props =>\r\n                props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n                &:last-of-type {\r\n                    border-bottom: none;\r\n                }\r\n            }\r\n        &:last-of-type {\r\n            border-right: none;\r\n        }\r\n    }\r\n    .selected {\r\n        color: ${props => \r\n        variables[props.theme.theme].white};\r\n        background-color: ${props =>\r\n        variables[props.theme.theme].primary};\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport ReactTooltip from \"react-tooltip\"; \r\nimport { Container } from './styles/components/activityNavigation';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ActivityNavigation(props) { \r\n    const { id, practice } = props;\r\n    if(!practice) {\r\n        return (\r\n            <Container>\r\n            <ReactTooltip />\r\n            <NavLink activeClassName=\"selected\" to=\"/collection\" data-tip=\"View the words in your collection\">Collection</NavLink>\r\n            <NavLink activeClassName=\"selected\" to=\"/review\" data-tip=\"Review the words from your collection as interactive flashcards\" >Review</NavLink>\r\n            <NavLink activeClassName=\"selected\" to=\"/test\" data-tip=\"Test your skills by taking a vocabulary test with the words from your collection\" >Test</NavLink>\r\n            </Container>\r\n        )\r\n    } else {\r\n        return (\r\n            <Container>\r\n            <ReactTooltip />\r\n            <NavLink activeClassName=\"selected\" to={`/practice/${id}`} data-tip=\"View the words in your collection\">Collection</NavLink>\r\n            <NavLink activeClassName=\"selected\" to={`/practice-review/${id}`} data-tip=\"Review the words from your collection as interactive flashcards\" >Review</NavLink>\r\n            <NavLink activeClassName=\"selected\" to={`/practice-test/${id}`} data-tip=\"Test your skills by taking a vocabulary test with the words from your collection\" >Test</NavLink>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nActivityNavigation.propTypes = {\r\n    practice: PropTypes.bool,\r\n    id: PropTypes.string\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Controls = styled.div`\r\ndisplay: flex;\r\nwidth: 95%;\r\nmax-width: 300px;\r\nmargin: 0 auto;\r\njustify-content: center;\r\n.icon {\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    margin: 0.5rem 1rem;\r\n}\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Controls } from './styles/components/flashcardControls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faArrowLeft, faAngleDoubleLeft, faAngleDoubleRight, faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function FlashcardControls(props) {\r\n    const { totalNumber, currentNumber, moveNext, movePrev, moveFirst, moveLast, toggleOrder } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <Controls>\r\n                <FontAwesomeIcon \r\n                    onClick={moveFirst} \r\n                    icon={faAngleDoubleLeft} \r\n                    className=\"icon\" />\r\n                <FontAwesomeIcon \r\n                    onClick={movePrev} \r\n                    icon={faArrowLeft} \r\n                    className=\"icon\" />\r\n                <FontAwesomeIcon \r\n                    onClick={toggleOrder} \r\n                    icon={faSync} \r\n                    className=\"icon\" />\r\n                <FontAwesomeIcon \r\n                    onClick={moveNext} \r\n                    icon={faArrowRight} \r\n                    className=\"icon\" />\r\n                <FontAwesomeIcon \r\n                    onClick={moveLast} \r\n                    icon={faAngleDoubleRight} \r\n                    className=\"icon\" />\r\n            </Controls>\r\n            <p>{currentNumber}/{totalNumber}</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nFlashcardControls.propTypes = {\r\n    toggleOrder: PropTypes.func,\r\n    currentNumber: PropTypes.number,\r\n    totalNumber: PropTypes.number,\r\n    moveNext: PropTypes.func,\r\n    movePrev: PropTypes.func,\r\n    moveFirst: PropTypes.func,\r\n    moveLast: PropTypes.func\r\n\r\n}\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const Container = styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin-bottom: 5rem;\r\n`;\r\nexport const FlashCard = styled.div`\r\nmax-height: 450px;\r\nheight: 450px;\r\nmax-width: 600px;\r\nwidth: 100vw;\r\nperspective: 9000px;\r\npadding: 2rem;\r\ndisplay: flex;\r\nposition: relative;\r\ncursor: pointer;\r\nborder-radius: 5px;\r\ntext-align: center;\r\nh1 {\r\n    font-size: 2.5rem;\r\n}\r\n.content {\r\n    display: flex;\r\n    justify-items: center;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    border: solid lightgray 2px;\r\n    transition: transform 0.8s;\r\n    transform-style: preserve-3d;\r\n    box-shadow: 2px 2px 5px rgba(0,0,0,0.5);\r\n    position: relative;\r\n    border-radius: 5px; \r\n}\r\n.front, .back {\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    padding: 0rem 2rem;\r\n    border-radius: 5px;\r\n    backface-visibility: hidden;\r\n    -webkit-backface-visibility: hidden; /* Safari */\r\n}\r\n.front {\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n}\r\n\r\n.back {\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    transform: rotateX(180deg);\r\n}\r\n.rotate{\r\n    transform: rotateX(180deg);\r\n}\r\n.definition {\r\n    font-size: 1.5rem;\r\n}\r\n`;\r\n","import React, { useState } from 'react';\r\nimport FlashcardControls from './FlashcardControls';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, FlashCard } from './styles/components/flashcard';\r\n\r\nexport default function Flashcard(props) {\r\n    const [showBack, setShowBack] = useState(false);\r\n    const [showWordFirst, setShowWordFirst] = useState(true);\r\n    \r\n    const flipCard = () => {setShowBack(!showBack)};\r\n    const toggleOrder = () => {setShowWordFirst(!showWordFirst)};\r\n\r\n   \r\n    const { word, definition, moveFirst, moveLast, currentNumber, totalNumber, movePrev, moveNext } = props;\r\n    return (\r\n        <Container>\r\n            <div>\r\n                <FlashCard onClick={flipCard} >\r\n                    <div className={showBack ? \"content rotate\" : \"content\"}>\r\n                        <div className=\"front\">\r\n                        {showWordFirst ? <h1>{word}</h1> : <p className=\"definition\">{definition}</p>}\r\n                        </div>\r\n                        <div className=\"back\">\r\n                        {showWordFirst ? <p className=\"definition\">{definition}</p> : <h1>{word}</h1>}\r\n                        </div>\r\n                    </div>\r\n                </FlashCard>\r\n                <FlashcardControls \r\n                    moveFirst={moveFirst}\r\n                    moveLast={moveLast}\r\n                    movePrev={movePrev}\r\n                    moveNext={moveNext}\r\n                    currentNumber={currentNumber + 1}\r\n                    totalNumber={totalNumber}\r\n                    toggleOrder={toggleOrder}/>\r\n            </div>\r\n        </Container>\r\n    )   \r\n}\r\n\r\n\r\nFlashcard.propTypes = {\r\n    word: PropTypes.string,\r\n    definition: PropTypes.string,\r\n    id: PropTypes.string,\r\n    totalNumber: PropTypes.number,\r\n    currentNumber: PropTypes.number,\r\n    moveNext: PropTypes.func,\r\n    movePrev: PropTypes.func,\r\n    moveFirst: PropTypes.func,\r\n    moveLast: PropTypes.func\r\n\r\n}","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport Loading from '../components/Loading';\r\nimport Flashcard from '../components/Flashcard';\r\nimport PropTypes from 'prop-types';\r\nimport Footer from '../components/Footer';\r\nimport { withRouter } from 'react-router';\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Review extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        userCollection: [],\r\n        isLoading: true,\r\n        currentNumber: 0,\r\n        totalNumber: 0,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false })\r\n                } else {\r\n                    this.getUserCollection(this.state.userInfo.uid)\r\n                }\r\n            });\r\n    }\r\n\r\n    getUserCollection = uid => {\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .collection('wordCollection')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                collection.push(doc);\r\n            })\r\n            this.setState({ userCollection: collection, isLoading: false, totalNumber: collection.length })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    moveNext = () => {\r\n        if(this.state.currentNumber + 1 !== this.state.totalNumber) {\r\n            this.setState({ currentNumber: this.state.currentNumber + 1 });\r\n        } else {\r\n            this.setState({ currentNumber: 0 })\r\n        }\r\n    }\r\n\r\n    movePrev = () => {\r\n        if(this.state.currentNumber === 0) {\r\n            this.setState({ currentNumber: this.state.totalNumber - 1 });\r\n        } else {\r\n            this.setState({ currentNumber: this.state.currentNumber - 1 })\r\n        }\r\n    }\r\n\r\n    moveLast = () => {\r\n        this.setState({ currentNumber: this.state.totalNumber - 1 });\r\n    }\r\n\r\n    moveFirst = () => {\r\n        this.setState({ currentNumber: 0 })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Navigation \r\n                    toggleNightMode={this.props.toggleNightMode} \r\n                    nightMode={this.props.nightMode}\r\n                    signout={this.signout}\r\n                    toggleTheme={this.props.toggleTheme}\r\n                    currentTheme={this.props.theme}\r\n                    isSignedIn={this.state.isSignedIn}\r\n                    userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                />\r\n                <ActivityNavigation practice={false}/>\r\n                {this.state.isLoading ? <Loading /> : null}\r\n                {!this.state.isLoading && this.state.userCollection.length > 0 ? <Flashcard\r\n                    moveFirst={this.moveFirst}\r\n                    moveLast={this.moveLast}\r\n                    movePrev={this.movePrev}\r\n                    moveNext={this.moveNext} \r\n                    currentNumber={this.state.currentNumber}\r\n                    totalNumber={this.state.totalNumber}\r\n                    word={this.state.userCollection[this.state.currentNumber].data().word} \r\n                    definition={this.state.userCollection[this.state.currentNumber].data().definition} id={this.state.userCollection[0].id} /> : null }\r\n                {!this.state.isLoading && this.state.userCollection.length === 0 ? <p>You have no words in your collection to review</p> : null}\r\n                {this.state.isLoading ? null : <Footer/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Review);\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const SingleDefinition = styled.li`\r\n    display: grid;\r\n    position: relative;\r\n    opacity: ${props => props.isVisible ? '1' : '0'};\r\n    grid-template-columns: repeat( auto-fit, 300px minmax(300px, 1fr) 50px );\r\n    justify-content: center;\r\n    grid-gap: 1rem;\r\n    padding: 0.25rem 1rem;\r\n    align-items: center;\r\n    border-bottom: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    transform: ${props => props.isVisible\r\n                ? 'translateY(0%)'\r\n                : 'translateY(10%)'};\t\r\n    transition-timing-function: ease-in-out; \r\n    transition-duration: 300ms;\r\n    transition-property: box-shadow, transform, opacity;\r\n    transition-delay: 0ms, ${props => 200 * props.index}ms, ${props => 200 * props.index}ms;\r\n    @media only screen and (max-width: ${variables.medium}) {\r\n        grid-template-columns: 1fr;\r\n        .word {\r\n            text-align: left;\r\n        }\r\n        .remove {\r\n            position: absolute;\r\n            top: 1rem;\r\n            right: 1rem;\r\n        }\r\n    }\r\n    .definition {\r\n        text-align: left;\r\n    }\r\n    .icon {\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        transition: 200ms ease-in-out;\r\n        cursor: pointer;\r\n        &:hover {\r\n            transform: scale(1.3);\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 2.5rem;\r\n        margin: 0rem;\r\n    }\r\n    sup {\r\n        font-size: 0.8rem;\r\n        margin-left: 0.5rem;\r\n    }\r\n    .example {\r\n        font-style: italic;\r\n        font-size: 0.9rem;\r\n    }\r\n    &:first-of-type {\r\n        border-top: solid 1px ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    }\r\n    &:last-of-type {\r\n        border-bottom: none;\r\n    }\r\n    &:hover {\r\n        box-shadow: 0px 0px 10px rgba(0,0,0,0.3);\r\n    }\r\n    &:nth-child(odd) {\r\n        background: ${props =>\r\n            props.theme.nightMode === \"light\" ? \"rgba(255,255,255,0.1)\" : \"rgba(0,0,0,0.1)\"};\r\n    }\r\n    &:last-of-type {\r\n        margin-bottom: -1rem;\r\n        border-radius: 0rem 0rem 1rem 1rem;\r\n    }\r\n\r\n    `;\r\n\r\n    export const Container = styled.div`\r\n    width: 90%;\r\n    max-width: 800px;\r\n    min-width: 300px;\r\n    min-height: 400px;\r\n    position: relative;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    font-family: ${variables.primaryFont};\r\n    border: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    border-radius: 1rem;\r\n    h2 {\r\n        margin-bottom: 1.5rem;\r\n\r\n    }\r\n    .addicon {\r\n        position: absolute;\r\n        top: 1rem;\r\n        right: 2rem;\r\n        font-size: 2rem;\r\n        color: lightgray;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const Form = styled.div`\r\nh2 {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n.showForm {\r\n    transition: 300ms ease-in-out;\r\n    z-index: 100;\r\n    transform: translateY(0);\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    border: ${props =>\r\n    props.theme.nightMode === \"light\" ? `solid 1px ${variables[props.theme.theme].white}` : `solid 1px ${variables[props.theme.theme].dark}` };\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    max-width: 450px;\r\n    padding: 0;\r\n    margin: 0;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: flex;\r\n    min-width: 300px;\r\n    width: 100%;\r\n    border-radius: 2rem;\r\n\r\n}\r\n.hideForm {\r\n    transition: 300ms ease-in-out;\r\n    z-index: -10;\r\n    transform: translateY(0);\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    border: ${props =>\r\n    props.theme.nightMode === \"light\" ? `solid 1px ${variables[props.theme.theme].white}` : `solid 1px ${variables[props.theme.theme].dark}` };\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -55%);\r\n    max-width: 450px;\r\n    padding: 0;\r\n    margin: 0;\r\n    opacity: 0;\r\n    display: hidden;\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: flex;\r\n    min-width: 300px;\r\n    width: 100%;\r\n    border-radius: 2rem;\r\n}\r\n.icon {\r\n    position: absolute;\r\n    top: 1.5rem;\r\n    right: 1.5rem;\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n}\r\nform {\r\n    text-align: left;\r\n    input, select, textarea {\r\n        display: block;\r\n        margin: 1.5rem 0rem;\r\n        width: 100%;\r\n        padding-left: 0.5rem;\r\n        font-family: ${variables.primaryFont};\r\n        color: ${props => variables[props.theme.theme].dark};\r\n        background: ${props => variables[props.theme.theme].white};\r\n        border-radius: 0.5rem;\r\n        border: solid 2px ${props => variables[props.theme.theme].primary};\r\n    }\r\n    input, select {\r\n        height: 35px;\r\n        background-color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n        color: ${props =>\r\n        props.theme.nightMode === \"dark\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    }\r\n    textarea {\r\n        padding-top: 0.5rem;\r\n        height: 100px;\r\n        background-color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n        color: ${props =>\r\n        props.theme.nightMode === \"dark\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    }\r\n    #hideHints, #showTimer {\r\n        display: inline;\r\n        height: 25px;\r\n        width: 25px;\r\n\r\n    }\r\n    label {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: 0rem 0.25rem;\r\n        font-size: 0.9rem;\r\n    }\r\n\r\n}\r\n.formContainer {\r\n    padding: 3rem 2rem;\r\n    width: 100%;\r\n}\r\n`;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from '../components/Button';\r\nimport { Form } from './styles/components/addWordForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default function AddWordForm(props) {\r\n    const formRef = useRef();\r\n    const [ values, setValues ] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        e.persist();\r\n        setValues(values => ({ ...values, [e.target.name]: e.target.value }));\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClick, false);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClick, false);\r\n        }\r\n    });\r\n    \r\n    const handleClick = (e) => {\r\n        if(!formRef.current.contains(e.target)) {\r\n            props.closeForm();            \r\n        }\r\n    }\r\n\r\n    const addWord = (e) => {\r\n        e.preventDefault();\r\n        const { uid, toggleForm, addWordToCollection } = props;\r\n        const newWord = {\r\n            dateAdded: new Date(),\r\n            definition: values.definition,\r\n            example: values.example,\r\n            type: values.type,\r\n            word: values.word,\r\n        }\r\n        db.collection('users')\r\n            .doc(uid)\r\n            .collection(\"wordCollection\")\r\n            .add(newWord);\r\n        setValues({});\r\n        toggleForm();\r\n        addWordToCollection(uid);\r\n    }\r\n\r\n    const { showForm, toggleForm } = props;\r\n    return (\r\n        <Form>\r\n            <div ref={formRef} className={showForm ? \"showForm\" : \"hideForm\"}>\r\n                <div className=\"formContainer\">\r\n                    <FontAwesomeIcon \r\n                        icon={faTimes} \r\n                        className=\"icon\" \r\n                        onClick={toggleForm} />\r\n                    <h2>Add a Word to Your Collection</h2>\r\n                    <form>\r\n                        <input \r\n                            value={values.word}\r\n                            onChange={handleChange}\r\n                            type=\"text\" \r\n                            name=\"word\" \r\n                            placeholder=\"Type the word you'd like to add...\"\r\n                            required\r\n                            id=\"word\"></input>\r\n                        <select \r\n                            value={values.type} \r\n                            onChange={handleChange}\r\n                            name=\"type\" \r\n                            required\r\n                            id=\"type\">\r\n                            <option>Select Part of Speech</option>\r\n                            <option value=\"noun\">Noun</option>\r\n                            <option value=\"adjective\">Adjective</option>\r\n                            <option value=\"verb\">Verb</option>\r\n                            <option value=\"adverb\">Adverb</option>\r\n                            <option value=\"preposition\">Preposition</option>\r\n                            <option value=\"idiom\">Idiom</option>\r\n                        </select>\r\n                        <textarea \r\n                            required\r\n                            placeholder=\"Write the word's definition...\"\r\n                            value={values.definition}\r\n                            onChange={handleChange}\r\n                            name=\"definition\" \r\n                            id=\"definition\"></textarea>\r\n                        <textarea \r\n                            name=\"example\"\r\n                            id=\"example\"\r\n                            placeholder=\"Write an example sentence (optional)\"\r\n                            onChange={handleChange}\r\n                            value={values.example}></textarea>\r\n                        <Button handleClick={addWord}>Add Word</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nAddWordForm.propTypes = {\r\n    showForm: PropTypes.bool,\r\n    toggleForm: PropTypes.func,\r\n    closeForm: PropTypes.func,\r\n    uid: PropTypes.string,\r\n    addWordToCollection: PropTypes.func,\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SingleDefinition, Container } from './styles/components/collectionContainer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport AddWordForm from '../components/AddWordForm';\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\n\r\nexport default function CollectionContainer(props) {\r\n    const [ showForm, setShowForm ] = useState(false);\r\n\r\n    const toggleForm = () => {\r\n        setShowForm(!showForm);\r\n    };\r\n\r\n    const closeForm = () => {\r\n        setShowForm(false);\r\n    };\r\n\r\n    const { getUserCollection, collection, removeItem, isVisible, showRemove, uid, showAddWordForm } = props;\r\n    return (\r\n        <div style={{ marginBottom: \"5rem\", width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\r\n            {showAddWordForm ? <AddWordForm \r\n                toggleForm={toggleForm} \r\n                closeForm={closeForm}\r\n                uid={uid}\r\n                addWordToCollection={getUserCollection}\r\n                showForm={showForm} /> : null}\r\n            <Container>\r\n                <ReactTooltip />\r\n                <h2>Vocabulary List</h2>\r\n                {showAddWordForm ? <FontAwesomeIcon \r\n                    onClick={() => setShowForm(!showForm)}\r\n                    data-tip=\"Add new word to your collection\" \r\n                    className=\"addicon\" \r\n                    icon={faPlusSquare} /> : null }\r\n                <ul style={{ padding: \"0\" }}>\r\n                {collection.map((word, index) => {\r\n                    return(\r\n                        <SingleDefinition index={index} isVisible={isVisible} key={word.data().word + index} >\r\n                            <div className=\"word\">\r\n                                <h2>{word.data().word}<sup>{word.data().type}</sup></h2>\r\n                            </div>\r\n                            <div className=\"definition\">\r\n                                <p>{word.data().definition}</p>\r\n                                <p className=\"example\" >{word.data().example && `\"${word.data().example}\"`}</p>\r\n                            </div>\r\n                            {showRemove ? <div \r\n                                onClick={removeItem.bind(this, word.id)}\r\n                                data-tip=\"Remove word from your collection\" \r\n                                className=\"remove\">\r\n                                <FontAwesomeIcon className=\"icon\" icon={faTrash} />\r\n                            </div> : null }\r\n                        </SingleDefinition>\r\n                    )\r\n                })}\r\n                </ul>\r\n            </Container>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nCollectionContainer.propTypes = {\r\n    collection: PropTypes.array,\r\n    removeItem: PropTypes.func,\r\n    showRemove: PropTypes.bool,\r\n    uid: PropTypes.string,\r\n    showAddWordForm: PropTypes.bool,\r\n    getUserCollection: PropTypes.func,\r\n    isVisible: PropTypes.bool,\r\n}","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport CollectionContainer from '../components/CollectionContainer';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport Footer from '../components/Footer';\r\nimport firebase from 'firebase/app';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass WordCollection extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        wordCollection: [],\r\n        isLoading: true,\r\n        isShowing: true,\r\n        showModal: true,\r\n        isVisible: false,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.getWordsFromCollection();\r\n                    this.setState({ isSignedIn: false });\r\n                } else {\r\n                    this.getWordsFromCollection();\r\n                }\r\n            });\r\n    }\r\n\r\n    getWordsFromCollection = () => {\r\n        this.setState({ isVisible: false })\r\n        const id = this.props.match.params.id\r\n        db.collection('wordSet')\r\n        .doc(id)\r\n        .collection('words')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                collection.push(doc);\r\n            })\r\n            this.setState({ wordCollection: collection, isLoading: false });\r\n            setTimeout(() => { this.setState({ isVisible: true })}, 300)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        const id = this.props.match.params.id\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={true} id={id} />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={true} id={id}/>\r\n                    {this.state.isLoading ? <Loading /> : null }\r\n                    {this.state.wordCollection.length > 0 ? <CollectionContainer \r\n                        showAddWordForm={false} \r\n                        isVisible={this.state.isVisible}\r\n                        showRemove={false} \r\n                        collection={this.state.wordCollection} /> \r\n                        : <p>Oops, there are no words in this collection</p>}\r\n                    <Footer/>\r\n                </React.Fragment>\r\n            )\r\n        } \r\n    }\r\n}\r\n\r\nexport default withRouter(WordCollection);\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    height: ${props => props.showResults ? \"100%\" : \"0px\"};\r\n    opacity: ${props => props.showResults ? \"1\" : \"0\"};\r\n    visibility: ${props => props.showResults ? \"visible\" : \"hidden\"};\r\n    transition: 400ms ease-in;\r\n    text-align: left;\r\n    margin: 0px;\r\n    padding: ${props => props.showResults ? \"2rem 3rem\" : \"0rem 3rem\"};\r\n    .resultsAnswer {\r\n        height: ${props => props.showResults ? \"100%\" : \"0px\"}; \r\n        opacity: ${props => props.showResults ? \"1\" : \"0\"};\r\n        display: ${props => props.showResults ? \"block\" : \"none\"};\r\n        visibility: ${props => props.showResults ? \"visible\" : \"hidden\"};  \r\n    }\r\n    .answers {\r\n        padding: 0rem 2rem;\r\n    }\r\n    .fade {\r\n        color: lightgray;\r\n    }\r\n    .iconGood {\r\n        color: green;\r\n    }\r\n    .iconBad {\r\n        color: red;\r\n    }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Container } from './styles/components/showResults';\r\n\r\nexport default function ShowResults(props) {\r\n        const { wordCollection, answers, showResults } = props;\r\n        return (\r\n            <Container showResults={showResults}>\r\n               { wordCollection.map((individualWord, i) => {\r\n                   const { word, definition, type } = individualWord.data();\r\n                   const answer = answers[i] ? answers[i].toLowerCase() : answers[i];\r\n                   if (word.toLowerCase() === answer) {\r\n                       return (\r\n                           <div className=\"resultsAnswer\" key={i}>\r\n                                <p>{i + 1}. {definition} ({type})</p>\r\n                                <div className=\"answers\">\r\n                                    <p className=\"fade\">Correct</p>\r\n                                    <p><FontAwesomeIcon className=\"iconGood\" icon={faCheckCircle} /> {word}</p>\r\n                                </div>\r\n                                <hr/>\r\n                           </div>\r\n                       )\r\n                   } else {\r\n                        return (\r\n                            <div className=\"resultsAnswer\" key={i}>\r\n                                <p>{i + 1}. {definition} ({type})</p>\r\n                                <div className=\"answers\">\r\n                                    <p className=\"fade\">Incorrect</p>\r\n                                    <p><FontAwesomeIcon className=\"iconBad\" icon={faTimesCircle} /> {answers[i]}</p>\r\n                                    <p className=\"fade\">Correct Answer</p>\r\n                                    <p>{word}</p>\r\n                                </div>\r\n                                <hr/>\r\n                            </div>\r\n                        )\r\n                   }\r\n               })}\r\n            </Container>\r\n        )\r\n    \r\n}\r\n\r\nShowResults.propTypes = {\r\n    wordCollection: PropTypes.array,\r\n    answers: PropTypes.array,\r\n    showResults: PropTypes.bool\r\n }","import React, { useState, useEffect, useRef } from 'react';\r\nimport Button from '../components/Button';\r\nimport { Form } from './styles/components/addWordForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function SettingsForm(props) {\r\n    const formRef = useRef();\r\n    const [ values, setValues ] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        e.persist();\r\n        setValues(values => ({ ...values, [e.target.name]: e.target.value }));\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClick, false);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClick, false);\r\n        }\r\n    });\r\n    \r\n    const handleClick = (e) => {\r\n        if(!formRef.current.contains(e.target)) {\r\n            props.closeForm();            \r\n        }\r\n    }\r\n\r\n    const handleCheckBox = (e) => {\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        setValues(values => ({ ...values, [name]: value }));\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        props.closeForm();\r\n        const settings = {\r\n            testLength: parseInt(values.testLength) || 5,\r\n            hideHints: values.hideHints || false,\r\n            showTimer: values.showTimer || false,\r\n            timerLength: parseInt(values.timerLength) || 0\r\n        }\r\n        props.changeSettings(settings);\r\n    }\r\n\r\n    const { showForm, closeForm, wordCount } = props;\r\n    return (\r\n        <Form onSubmit={submitForm}>\r\n            <div ref={formRef} className={showForm ? \"showForm\" : \"hideForm\"}>\r\n                <div className=\"formContainer\">\r\n                    <FontAwesomeIcon \r\n                        icon={faTimes} \r\n                        className=\"icon\" \r\n                        onClick={closeForm} />\r\n                    <h2>Test Settings</h2>\r\n                    <form>\r\n                        <select \r\n                            value={values.testLength} \r\n                            onChange={handleChange}\r\n                            name=\"testLength\" \r\n                            required\r\n                            id=\"testLength\">\r\n                            <option>Number of Questions</option>\r\n                            {wordCount.filter((item, i) => (i + 1) % 5 === 0).map((num, i) => {\r\n                                return (\r\n                                    <option key={i} value={(i + 1) * 5}>{(i + 1) * 5}</option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                        <label\r\n                            htmlFor=\"hideHints\"\r\n                        >Hide Hints:\r\n                        <input \r\n                            name=\"hideHints\"\r\n                            type=\"checkbox\"\r\n                            id=\"hideHints\"\r\n                            value={values.hideHints}\r\n                            onChange={handleCheckBox}\r\n                        />\r\n                        </label>\r\n                        <label\r\n                            htmlFor=\"showTimer\"\r\n                        >Show Timer:\r\n                        <input \r\n                            name=\"showTimer\"\r\n                            type=\"checkbox\"\r\n                            id=\"showTimer\"\r\n                            value={values.showTimer}\r\n                            onChange={handleCheckBox}\r\n                        />\r\n                        </label>\r\n                        {values.showTimer \r\n                        ? <select \r\n                            value={values.timerLength} \r\n                            onChange={handleChange}\r\n                            name=\"timerLength\" \r\n                            required\r\n                            id=\"timerLength\">\r\n                            <option>Length of Timer</option>\r\n                            <option value=\"30\">30 Seconds</option>\r\n                            <option value=\"45\">45 Seconds</option>\r\n                            <option value=\"60\">60 Seconds</option>\r\n                            <option value=\"75\">75 Seconds</option>\r\n                            <option value=\"90\">90 Seconds</option>\r\n                            <option value=\"120\">120 Seconds</option>\r\n                        </select> \r\n                        : null}\r\n                        <Button>Begin Test</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nSettingsForm.propTypes = {\r\n    showForm: PropTypes.bool,\r\n    openForm: PropTypes.func,\r\n    closeForm: PropTypes.func,\r\n    wordCount: PropTypes.array,\r\n    changeSettings: PropTypes.func,\r\n}\r\n\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const Input = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 25px;\r\n    position: relative;\r\n    opacity: ${props => props.isVisible ? '1' : '0'};\r\n    transform: ${props => props.isVisible\r\n                ? 'translateY(0%)'\r\n                : 'translateY(10%)'};\t\r\n    transition-timing-function: ease-in-out; \r\n    transition-duration: 300ms;\r\n    transition-property: transform, opacity;\r\n    transition-delay: ${props => 200 * props.index}ms, ${props => 200 * props.index}ms;\r\n\r\n    input {\r\n        display: block;\r\n    }\r\n    .icon {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: lightgray;\r\n    }\r\n`;\r\n\r\nexport const CongratulationsContainer = styled.div`\r\nwidth: 90%;\r\nmax-width: 700px;\r\nmin-width: 300px;\r\ntext-align: left;\r\nborder-radius: 2rem;\r\ntext-align: center;\r\nposition: relative;\r\nbox-shadow: 0px 0px 10px rgba(0,0,0,0.2);\r\nborder: solid 2px ${props =>\r\nprops.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].white };\r\nbackground-color: ${props =>\r\nprops.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\ncolor: ${props =>\r\nprops.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n.iconContainer {\r\n    display: block;\r\n    text-align: center;\r\n    color: lightgray;\r\n    cursor: pointer;\r\n    margin-top: 2rem;\r\n}\r\n.flexContainer {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @media only screen and (max-width: ${variables.small}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n        border-radius: 2rem 0rem 0rem 2rem;\r\n        @media only screen and (max-width: ${variables.small}) {\r\n        height: 60px;\r\n        border-radius: 2rem 2rem 0rem 0rem;\r\n\r\n    }\r\n    }\r\n}\r\n.message {\r\n    padding: 2rem;\r\n}\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\nwidth: 90%;\r\nmax-width: 700px;\r\nmin-width: 300px;\r\ntext-align: left;\r\nposition: relative;\r\npadding: 4rem 3rem;\r\nborder-radius: 2rem;\r\nborder: solid 2px ${props =>\r\nprops.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].white };\r\nbox-shadow: 0px 0px 10px rgba(0,0,0,0.2);\r\nbackground-color: ${props =>\r\nprops.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\ncolor: ${props =>\r\nprops.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\ninput, label {\r\n    display: block;\r\n    margin: 1rem 0rem;\r\n    line-height: 1.8rem;\r\n    font-size: 1.2rem;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n}\r\ninput {\r\n    border: none;\r\n    transition: 150ms ease-in-out;\r\n    border-bottom: solid 2px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    :focus {\r\n        outline: none;\r\n        transform: scale(1.05);\r\n    }\r\n}\r\nspan {\r\n    color: lightgray;\r\n    font-size: 0.8rem;\r\n    padding-left: 1rem;\r\n}\r\n.settings {\r\n    position: absolute;\r\n    top: 1.5rem;\r\n    right: 2rem;\r\n    color: lightgray;\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n}\r\n`;\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\nwidth: 100%;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin-bottom: 5rem;\r\n`;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loading from './Loading';\r\nimport ShowResults from './ShowResults';\r\nimport Button from './Button';\r\nimport SettingsForm from './SettingsForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInfoCircle, faAngleDown, faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Input, CongratulationsContainer, StyledForm, Container } from './styles/components/formComponent';\r\n\r\nexport default class FormComponent extends Component {\r\n    //Yeah, state definitely got out of hand in this component\r\n    state = {\r\n        answers: [],\r\n        formSubmitted: false,\r\n        totalScore: 0,\r\n        isLoading: true,\r\n        showResults: false,\r\n        message: '',\r\n        subtitle: '',\r\n        testLength: 5,\r\n        showForm: false,\r\n        hideHints: false,\r\n        showTimer: false,\r\n        timerLength: 0,    \r\n        isVisible: false,     \r\n    }\r\n    static propTypes = {\r\n        wordCollection: PropTypes.array,\r\n        theme: PropTypes.string,\r\n    }\r\n\r\n    handleChange = (e, index) => {\r\n        const answers = [...this.state.answers];\r\n        answers[index] = e.target.value;\r\n        this.setState({ answers })\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({ showForm: true});\r\n    }\r\n\r\n    closeForm = () => {\r\n        this.setState({ showForm: false });\r\n    }\r\n\r\n    checkAnswers = (e) => {\r\n        e.preventDefault();\r\n        window.scrollTo(0, 0);\r\n        const lowerCaseAnswers = this.state.answers.map(answer => answer ? answer.toLowerCase() : '');\r\n        const answersArray = []\r\n        this.state.wordCollection.map(individualWord => {\r\n            const { word } = individualWord.data();\r\n            answersArray.push(word)\r\n        });\r\n        let totalCorrect = 0;\r\n        answersArray.forEach((word, i) => {\r\n            if(word.toLowerCase() === lowerCaseAnswers[i]){\r\n                totalCorrect++;\r\n            }\r\n        })\r\n        this.setState({ totalScore: totalCorrect }, () => {\r\n            this.getMessage(totalCorrect);\r\n        });\r\n\r\n    }\r\n\r\n    getMessage = (total) => {\r\n        const score = total / this.state.testLength * 100; \r\n        if(score === 100) {\r\n            this.setState({ formSubmitted: true, message: \"Perfect Score!\", subtitle: 'You must be a genius' })\r\n        } else if (score > 75) {\r\n            this.setState({ formSubmitted: true, message: \"Congratulations!\", subtitle: 'You have nearly mastered these words' })\r\n        } else if (score > 50) {\r\n            this.setState({ formSubmitted: true, message: \"Good Effort\", subtitle: 'With more practice you can do better' })\r\n        } else if (score > 25) {\r\n            this.setState({ formSubmitted: true, message: \"Good Try!\", subtitle: 'But you need to study some more' })\r\n        } else if (score > 0) {\r\n            this.setState({ formSubmitted: true, message: \"Oh No!\", subtitle: 'You need to review a few more times' })\r\n        } else {\r\n            this.setState({ formSubmitted: true, message: \"Oh No!\", subtitle: \"You didn't get any correct!\" })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { wordCollection } = this.props;\r\n        this.getRandom(wordCollection, this.state.testLength);\r\n    }\r\n\r\n    getRandom = (arr, n) => {\r\n        this.setState({ isVisible: false })\r\n        let result = new Array(n),\r\n            len = arr.length,\r\n            taken = new Array(len);\r\n        if (n > len)\r\n            throw new RangeError(\"getRandom: more elements taken than available\");\r\n        while (n--) {\r\n            let x = Math.floor(Math.random() * len);\r\n            result[n] = arr[x in taken ? taken[x] : x];\r\n            taken[x] = --len in taken ? taken[len] : len;\r\n        }\r\n        this.setState({ wordCollection: result, isLoading: false }, () => {\r\n            setTimeout(() => { this.setState({ isVisible: true })}, 300)\r\n        });\r\n    }\r\n\r\n    resetTest = () => {\r\n        const { wordCollection } = this.props;\r\n        this.setState({ answers: [], formSubmitted: false, totalScore: 0, isLoading: true, showResults: false });\r\n        this.getRandom(wordCollection, this.state.testLength);\r\n    }\r\n\r\n    changeSettings = (values) => {\r\n        this.setState({ testLength: values.testLength, hideHints: values.hideHints, showTimer: values.showTimer, timerLength: values.timerLength }, () => {\r\n            this.resetTest();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { theme } = this.props;\r\n        if (this.state.formSubmitted) {\r\n            return (\r\n                <Container>\r\n                    <CongratulationsContainer>\r\n                        <div className=\"flexContainer\">\r\n                            <img src={require(`../images/${theme}.svg`)} />\r\n                            <div className=\"message\">\r\n                                <h1>{this.state.message}</h1>\r\n                                <p>{this.state.subtitle}</p>\r\n                                <p>Your Scored is: {this.state.totalScore} out of {this.state.wordCollection.length}</p>\r\n                                <Button handleClick={this.resetTest}>Try Again!</Button>\r\n                                <div \r\n                                    onClick={() => this.setState({ showResults: !this.state.showResults })}\r\n                                    className=\"iconContainer\">\r\n                                    <p>{this.state.showResults ? \"Hide Results\" : \"Show Results\"}</p>\r\n                                    <FontAwesomeIcon \r\n                                        icon={faAngleDown}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ShowResults showResults={this.state.showResults} wordCollection={this.state.wordCollection} answers={this.state.answers} />\r\n                    </CongratulationsContainer>\r\n                </Container>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.state.showForm ? <SettingsForm \r\n                        changeSettings={this.changeSettings}\r\n                        openForm={this.openForm} \r\n                        showForm={this.state.showForm} \r\n                        wordCount={this.props.wordCollection}\r\n                        closeForm={this.closeForm} /> : null}\r\n                    <Container>\r\n                        <StyledForm onSubmit={this.checkAnswers}>\r\n                        <FontAwesomeIcon \r\n                            data-tip=\"Change the test settings\" \r\n                            icon={faCog} \r\n                            className=\"settings\" \r\n                            onClick={this.openForm} />\r\n                            <h2>Vocabulary Test</h2>\r\n\r\n                            {this.state.isLoading ? <Loading /> : this.state.wordCollection.map((individualWord, index) => {\r\n                                const {word, definition,type } = individualWord.data();\r\n                                return (\r\n                                    <React.Fragment key={word}>\r\n                                        <ReactTooltip />\r\n                                        <Input index={index} isVisible={this.state.isVisible}>\r\n                                            <div>\r\n                                                <label htmlFor={word}>{`${index + 1}. ${definition[0].toUpperCase() + definition.slice(1)}`}<span className=\"type\">({type})</span></label>\r\n                                                <input id={word} type=\"text\" data-id={index} onChange={(e) => this.handleChange(e, index)} value={this.state.answers[index] || ''} name={word} className=\"guess\"/>\r\n                                            </div>\r\n                                            {this.state.hideHints ? null : <div className=\"icon\">\r\n                                                <FontAwesomeIcon \r\n                                                    data-tip={`This word begins with the letter: ${word[0].toUpperCase()}`}\r\n                                                    icon={faInfoCircle} \r\n                                                    />\r\n                                            </div>}\r\n                                        </Input>\r\n                                    </React.Fragment>\r\n                                    )\r\n                            })}\r\n                            <Button>Submit</Button>\r\n                        </StyledForm>\r\n                    </Container>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport Modal from '../components/Modal';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport Footer from '../components/Footer';\r\nimport FormComponent from '../components/FormComponent';\r\nimport firebase from 'firebase/app';\r\nimport { withRouter } from 'react-router';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        isLoading: true,\r\n        userInfo: '',\r\n        userCollection: [],\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false, isLoading: false, showModal: true })\r\n                } else {\r\n                    this.getUserCollection(this.state.userInfo.uid)\r\n                }\r\n            });\r\n    }\r\n\r\n    getUserCollection = uid => {\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .collection('wordCollection')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                collection.push(doc);\r\n            })\r\n            this.setState({ userCollection: collection, isLoading: false })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={false} />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            if (this.state.isSignedIn) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Header />\r\n                        <Navigation \r\n                            toggleNightMode={this.props.toggleNightMode} \r\n                            nightMode={this.props.nightMode}\r\n                            signout={this.signout}\r\n                            toggleTheme={this.props.toggleTheme}\r\n                            currentTheme={this.props.theme}\r\n                            isSignedIn={this.state.isSignedIn}\r\n                            userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                        />\r\n                        <ActivityNavigation practice={false} />\r\n                        {this.state.isLoading ? <Loading /> : null }\r\n                        {this.state.userCollection.length < 5 \r\n                                ? <><p>You must have 5 or more words in your collection to take a test</p>\r\n                                    <p>You currently have {this.state.userCollection.length} {this.state.userCollection.length === 1 ? \"word\" : \"words\"} in your collection</p></> \r\n                                    : <FormComponent \r\n                                        theme={this.props.theme} \r\n                                        wordCollection={this.state.userCollection} /> }\r\n                        <Footer />\r\n                    </React.Fragment>\r\n            )\r\n            \r\n            } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={false} />\r\n                    <Modal heading=\"Please Create an Account\" \r\n                        showClose={false} \r\n                        showModal={this.state.showModal} \r\n                        closeModal={this.closeModal}>\r\n                        <p>You must first create an account and add words to your collection</p>\r\n                        <FirebaseAuth />\r\n                    </Modal>\r\n                    <Footer />\r\n                </React.Fragment>\r\n            )\r\n\r\n        }\r\n    \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Test);\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport Footer from '../components/Footer';\r\nimport FormComponent from '../components/FormComponent';\r\nimport firebase from 'firebase/app';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        isLoading: true,\r\n        userInfo: '',\r\n        wordCollection: [],\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.getWordsFromCollection();\r\n                    this.setState({ isSignedIn: false })\r\n                } else {\r\n                    this.getWordsFromCollection();\r\n                }\r\n            });\r\n    }\r\n\r\n    getWordsFromCollection = () => {\r\n        const id = this.props.match.params.id\r\n        db.collection('wordSet')\r\n        .doc(id)\r\n        .collection('words')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                collection.push(doc);\r\n            })\r\n            this.setState({ wordCollection: collection, isLoading: false })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const id = this.props.match.params.id\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={true} id={id} />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={true} id={id} />\r\n                    {this.state.isLoading ? <Loading /> : null }\r\n                    {this.state.wordCollection.length < 5 \r\n                            ? <><p>You must have 5 or more words in your collection to take a test</p>\r\n                            <p>You currently have {this.state.wordCollection.length} {this.state.wordCollection.length === 1 ? \"word\" : \"words\"} in your collection</p></> \r\n                            : <FormComponent \r\n                                theme={this.props.theme} \r\n                                wordCollection={this.state.wordCollection} /> }\r\n                    <Footer />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Test);\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport Loading from '../components/Loading';\r\nimport Flashcard from '../components/Flashcard';\r\nimport Footer from '../components/Footer';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router';\r\nimport firebase from 'firebase/app';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Review extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        wordCollection: [],\r\n        isLoading: true,\r\n        currentNumber: 0,\r\n        totalNumber: 0,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false });\r\n                    this.getWordsFromCollection();\r\n                } else {\r\n                    this.getWordsFromCollection();\r\n                }\r\n            });\r\n    }\r\n\r\n    getWordsFromCollection = () => {\r\n        const id = this.props.match.params.id\r\n        db.collection('wordSet')\r\n        .doc(id)\r\n        .collection('words')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                collection.push(doc);\r\n            })\r\n            this.setState({ wordCollection: collection, isLoading: false, totalNumber: collection.length })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    moveNext = () => {\r\n        console.log(\"you click the next arrow\")\r\n        if(this.state.currentNumber + 1 !== this.state.totalNumber) {\r\n            this.setState({ currentNumber: this.state.currentNumber + 1 });\r\n        } else {\r\n            this.setState({ currentNumber: 0 })\r\n        }\r\n    }\r\n\r\n    movePrev = () => {\r\n        if(this.state.currentNumber === 0) {\r\n            this.setState({ currentNumber: this.state.totalNumber - 1 });\r\n        } else {\r\n            this.setState({ currentNumber: this.state.currentNumber - 1 })\r\n        }\r\n    }\r\n\r\n    moveLast = () => {\r\n        this.setState({ currentNumber: this.state.totalNumber - 1 });\r\n    }\r\n\r\n    moveFirst = () => {\r\n        this.setState({ currentNumber: 0 })\r\n    }\r\n\r\n    render() {\r\n        const id = this.props.match.params.id\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Navigation \r\n                    toggleNightMode={this.props.toggleNightMode} \r\n                    nightMode={this.props.nightMode}\r\n                    signout={this.signout}\r\n                    toggleTheme={this.props.toggleTheme}\r\n                    currentTheme={this.props.theme}\r\n                    isSignedIn={this.state.isSignedIn}\r\n                    userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                />\r\n                <ActivityNavigation practice={true} id={id} />\r\n                {this.state.isLoading ? <Loading /> : null}\r\n                {!this.state.isLoading && this.state.wordCollection.length > 0 ? <Flashcard\r\n                    moveFirst={this.moveFirst}\r\n                    moveLast={this.moveLast}\r\n                    movePrev={this.movePrev}\r\n                    moveNext={this.moveNext} \r\n                    currentNumber={this.state.currentNumber}\r\n                    totalNumber={this.state.totalNumber}\r\n                    word={this.state.wordCollection[this.state.currentNumber].data().word} \r\n                    definition={this.state.wordCollection[this.state.currentNumber].data().definition} id={this.state.wordCollection[0].id} /> : null }\r\n                {!this.state.isLoading && this.state.wordCollection.length === 0 ? <p>You have no words in your collection to review</p> : null}\r\n                {this.state.isLoading ? null : <Footer />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Review);\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport WordSetCard from '../components/WordSetCard';\r\nimport Loading from '../components/Loading';\r\nimport Footer from '../components/Footer';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase/app';\r\nimport { withRouter } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { variables } from '../components/styles/variables';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Practice extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        wordSets: [],\r\n        isLoading: true,\r\n        isShowing: true,\r\n        showModal: true,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false })\r\n                    this.getWordSets();\r\n\r\n                } else {\r\n                    this.getWordSets();\r\n                }\r\n            });\r\n    }\r\n\r\n    getWordSets = () => {\r\n        db.collection('wordSet')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = [];\r\n            snapshot.docs.map(doc => {\r\n                collection.push(doc);\r\n            })\r\n            this.setState({ wordSets: collection, isLoading: false })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    {this.state.isLoading ? <Loading /> : null }\r\n                    <Container>\r\n                    {this.state.isLoading ? null : this.state.wordSets.length > 0 ? this.state.wordSets.map(set => <WordSetCard key={set.id} wordSet={set.data()} id={set.id} />) : <p>Oh no! We couldn't find any word sets to practice</p>}\r\n                    </Container>\r\n                    <Footer />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Practice);\r\n\r\nconst Container = styled.div`\r\n    display: grid;\r\n    min-height: calc(100vh - 100px);\r\n    grid-template-rows: repeat(auto-fit, 250px);\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 300px));\r\n    justify-content: center;\r\n    grid-gap: 1.5rem;\r\n    margin: 2rem 3rem;\r\n    @media only screen and (max-width: ${variables.small}) {\r\n        margin: 2rem 0.5rem;\r\n    }\r\n`;\r\n\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport Modal from '../components/Modal';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport CollectionContainer from '../components/CollectionContainer';\r\nimport Loading from '../components/Loading';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase/app';\r\nimport Footer from '../components/Footer';\r\nimport styled from 'styled-components';\r\nimport { withRouter } from 'react-router';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst Container = styled.div`\r\n    min-height: calc(100vh - 120px);\r\n    text-align: center;\r\n    .message {\r\n        font-size: 1.5rem;\r\n        padding: 2rem 1rem;\r\n    }\r\n    p {\r\n        font-size: 1.1rem;\r\n        \r\n    }\r\n`;\r\n\r\nclass Collection extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        userCollection: [],\r\n        isLoading: true,\r\n        isShowing: true,\r\n        showModal: true,\r\n        isVisible: false,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false, isLoading: false, showModal: true })\r\n                } else {\r\n                    this.getUserCollection(this.state.userInfo.uid)\r\n                }\r\n            });\r\n    }\r\n\r\n    getUserCollection = uid => {\r\n        this.setState({ isVisible: false });\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .collection('wordCollection')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                collection.push(doc);\r\n            })\r\n            this.setState({ userCollection: collection, isLoading: false })\r\n            // It's kind of hacky, but I couldn't figure out a better way to get the animations working\r\n            setTimeout(() => { this.setState({ isVisible: true })}, 300)\r\n\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    removeItem = id => {\r\n        const uid = this.state.userInfo.uid;\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .collection('wordCollection')\r\n        .doc(id)\r\n        .delete();\r\n        setTimeout(() => {this.getUserCollection(uid)}, 500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={false} />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            if (this.state.isSignedIn) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Header />\r\n                        <Navigation \r\n                            toggleNightMode={this.props.toggleNightMode} \r\n                            nightMode={this.props.nightMode}\r\n                            signout={this.signout}\r\n                            toggleTheme={this.props.toggleTheme}\r\n                            currentTheme={this.props.theme}\r\n                            isSignedIn={this.state.isSignedIn}\r\n                            userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                        />\r\n                        <ActivityNavigation practice={false}/>\r\n                        {this.state.isLoading ? <Loading /> : null }\r\n                        {this.state.userCollection.length > 0 \r\n                        ? <CollectionContainer \r\n                            isVisible={this.state.isVisible} \r\n                            getUserCollection={this.getUserCollection} \r\n                            showAddWordForm={true} removeItem={this.removeItem} \r\n                            showRemove={true} collection={this.state.userCollection} \r\n                            uid={this.state.userInfo.uid} /> \r\n                            : <p>You have no words in your collection</p>}\r\n                        <Footer />\r\n                    </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <Container>\r\n                        <p className=\"message\">You must have an account in order to create a word collection</p>\r\n                        <p>Sign Up for an Account <Link to=\"/create-account\">Here</Link></p>\r\n                        {this.state.showModal ? <Modal heading=\"Please Create an Account\" showClose={true} showModal={this.state.showModal} closeModal={this.closeModal}>\r\n                            <p>You must have an account in order to create a word collection</p>\r\n                            <FirebaseAuth />\r\n                        </Modal> : null }\r\n                    </Container>\r\n                    <Footer />\r\n                </React.Fragment>\r\n            )\r\n\r\n        }\r\n        \r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Collection);\r\n\r\n","import React, { Component } from 'react';\r\nimport Modal from '../components/Modal';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\nimport PropTypes from 'prop-types';\r\nimport { variables } from '../components/styles/variables';\r\nimport styled from 'styled-components';\r\n\r\nexport default class SignIn extends Component {\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        signout: PropTypes.func,\r\n        currentTheme: PropTypes.string\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Background />\r\n                <SecondBackground />\r\n                <ThirdBackground />\r\n                    <Modal showModal={true} showClose={false} heading=\"Create an Account or Log In\" >\r\n                        <FirebaseAuth />\r\n                    </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst Background = styled.div` \r\n    background-color: ${props =>\r\n    variables[props.theme.theme].primary};\r\n    width: 100vw;\r\n    height: 100vh;\r\n    clip-path: polygon(0 0, 100% 0, 100% 29%, 0 51%);\r\n    position: relative;\r\n    z-index: 9;\r\n`;\r\n\r\nconst SecondBackground = styled.div`\r\n    background-color: ${props =>\r\n    variables[props.theme.theme].secondary};\r\n    width: 100vw;\r\n    height: 100vh;\r\n    clip-path: polygon(0 0, 100% 0, 100% 29%, 0 51%);\r\n    position: absolute;\r\n    top: 25px;\r\n    z-index: 5;\r\n`;\r\n\r\nconst ThirdBackground = styled.div`\r\n    background-color: ${props =>\r\n    variables[props.theme.theme].tertiary};\r\n    width: 100vw;\r\n    height: 100vh;\r\n    clip-path: polygon(0 0, 100% 0, 100% 29%, 0 51%);\r\n    position: absolute;\r\n    top: 50px;\r\n    z-index: 2;\r\n`;","import React, { useState } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './components/styles/GlobalStyle';\nimport storage from 'local-storage-fallback';\nimport Home from './pages/Home';\nimport Review from './pages/Review';\nimport WordCollection from './pages/WordCollection';\nimport Test from './pages/Test';\nimport PracticeTest from './pages/PracticeTest';\nimport PracticeFlashCards from './pages/PracticeFlashCards';\nimport Practice from './pages/Practice';\nimport Collection from './pages/Collection';\nimport SignIn from './pages/SignIn';\n\nfunction App() {\n  const [ nightMode, setNightMode ] = useState(storage.getItem(\"nightMode\") ? storage.getItem(\"nightMode\") : \"light\");\n  const [ theme, setTheme ] = useState(storage.getItem(\"theme\") ? storage.getItem(\"theme\") : \"mataura\");\n\n  const toggleNightMode = () => {\n    if(nightMode === \"light\"){\n      setNightMode(\"dark\");\n      storage.setItem(\"nightMode\", \"dark\");\n    } else {\n      setNightMode(\"light\");\n      storage.setItem(\"nightMode\", \"light\");\n    }\n  }\n\n  const toggleTheme = (theme) => {\n    setTheme(theme);\n    storage.setItem(\"theme\", theme)\n  }\n\n  const getInitalTheme = () => {\n    const savedNightMode = storage.getItem(\"nightMode\");\n    return savedNightMode ? JSON.parse(savedNightMode) : false;\n  }\n\n    return (\n      <Router basename=\"/dictionaryApp/\">\n        <Switch>\n            <ThemeProvider theme={{ nightMode: nightMode, theme: theme }}>\n              <Route exact path=\"/\">\n                <Home \n                  toggleNightMode={toggleNightMode} \n                  nightMode={nightMode}\n                  toggleTheme={toggleTheme}\n                  theme={theme}\n                    />\n              </Route>\n              <Route path=\"/collection\">\n                <Collection\n                  toggleNightMode={toggleNightMode} \n                  nightMode={nightMode}\n                  toggleTheme={toggleTheme}\n                  theme={theme}\n                  />\n              </Route>\n              <Route path=\"/create-account\">\n                <SignIn \n                  toggleNightMode={toggleNightMode} \n                  nightMode={nightMode}\n                  toggleTheme={toggleTheme}\n                  theme={theme} \n                  />\n              </Route>\n              <Route path=\"/review\">\n                <Review \n                  toggleNightMode={toggleNightMode} \n                  nightMode={nightMode}\n                  toggleTheme={toggleTheme}\n                  theme={theme} \n                  />\n              </Route>\n              <Route path=\"/test\">\n                <Test \n                  toggleNightMode={toggleNightMode} \n                  nightMode={nightMode}\n                  toggleTheme={toggleTheme}\n                  theme={theme} \n                  />\n              </Route>\n              <Route exact path=\"/practice\">\n                <Practice \n                  toggleNightMode={toggleNightMode} \n                  nightMode={nightMode}\n                  toggleTheme={toggleTheme}\n                  theme={theme} \n                  />\n              </Route>\n              <Route exact path=\"/practice/:id\">\n                <WordCollection \n                  toggleNightMode={toggleNightMode} \n                  nightMode={nightMode}\n                  toggleTheme={toggleTheme}\n                  theme={theme} \n                  />\n              </Route>\n              <Route exact path=\"/practice-test/:id\">\n                <PracticeTest \n                  toggleNightMode={toggleNightMode} \n                  nightMode={nightMode}\n                  toggleTheme={toggleTheme}\n                  theme={theme} \n                  />\n              </Route>\n              <Route exact path=\"/practice-review/:id\">\n                <PracticeFlashCards \n                  toggleNightMode={toggleNightMode} \n                  nightMode={nightMode}\n                  toggleTheme={toggleTheme}\n                  theme={theme} \n                  />\n              </Route>\n              <GlobalStyle />\n            </ThemeProvider>\n        </Switch>\n    </Router>\n  );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './setupFirebase';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}