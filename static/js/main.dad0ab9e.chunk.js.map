{"version":3,"sources":["images sync /^/.*/.svg$","images/inn.svg","images/mataura.svg","images/mohaka.svg","images/ngaruroro.svg","images/taieri.svg","setupFirebase.js","components/styles/variables.js","components/styles/GlobalStyle.js","components/ThemeItem.js","components/Logo.js","components/Navigation.js","components/Button.js","components/styles/components/searchBar.js","components/SearchBar.js","components/Header.js","components/FirebaseAuth.js","components/styles/components/modal.js","components/Modal.js","components/DefinitionCard.js","components/Loading.js","components/WordOfDay.js","pages/Home.js","components/ActivityNavigation.js","components/FlashcardControls.js","components/Flashcard.js","pages/Review.js","components/CollectionContainer.js","pages/WordCollection.js","components/ShowResults.js","components/FormComponent.js","pages/Test.js","pages/PracticeTest.js","pages/PracticeFlashCards.js","components/WordSetCard.js","pages/Practice.js","pages/Collection.js","pages/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","firebase","initializeApp","apiKey","process","authDomain","projectId","variables","primaryDark","primaryLight","primaryWhite","inn","primary","secondary","tertiary","dark","light","white","backgroundLight","backgroundDark","mataura","mohaka","ngaruroro","taieri","primaryFont","headingFont","boxShadow","small","medium","large","desktop","GlobalStyle","createGlobalStyle","props","theme","nightMode","Item","styled","div","ThemeItem","className","style","height","width","borderRadius","marginRight","backgroundColor","name","StyledImage","img","LogoContainer","Logo","src","require","alt","to","NavBar","LoggedIn","NavSection","nav","Navigation","state","themeValue","drawerOpen","handleClick","node","contains","target","setState","setTheme","toggleTheme","toggleDrawer","closeDrawer","document","addEventListener","this","removeEventListener","ref","currentTheme","activeStyle","borderBottom","exact","isSignedIn","userImage","userName","icon","faBars","color","onClick","margin","fontSize","faArrowRight","signout","faSignOutAlt","toggleNightMode","faAdjust","faPalette","bind","Component","InverseButton","button","StyledButton","Button","inverse","children","Container","SearchContainer","searched","Image","StyledForm","form","StyledInput","input","SearchBar","query","isWordSearched","handleInputChange","value","submitForm","preventDefault","handleSearch","onSubmit","type","placeholder","onChange","StyledHeader","header","Header","Home","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","GithubAuthProvider","firebaseAuth","React","ModalContainer","ContentContainer","Modal","showModal","heading","closeModal","showClose","data-dismiss","aria-label","faTimesCircle","db","firestore","DefinitionContainer","DefinitionCard","showErrorModal","showCOnfirmationModal","addToCollection","uid","currentUser","word","pronunciation","def","definition","example","image_url","collection","doc","add","dateAdded","Date","console","log","Fragment","data-tip","faBookmark","Loading","spin","faSpinner","size","WordOfDay","note","examples","pdd","definitions","text","partOfSpeech","moment","format","key","cite","url","title","FlexContainer","main","data","isLoading","userInfo","badSearch","wordOfTheDay","signOut","history","push","fetch","headers","Authorization","then","res","status","json","catch","err","getWordOfTheDay","now","year","getFullYear","month","getMonth","day","getDate","todayDate","Accept","unregisterAuthObserver","onAuthStateChanged","user","photoURL","i","withRouter","ActivityNavigation","practice","activeClassName","Controls","FlashcardControls","totalNumber","currentNumber","moveNext","movePrev","moveFirst","moveLast","toggleOrder","faAngleDoubleLeft","faArrowLeft","faSync","faAngleDoubleRight","FlashCard","Flashcard","showBack","showWordFirst","flipCard","Review","userCollection","getUserCollection","get","snapshot","docs","length","SingleDefinition","li","CollectionContainer","marginBottom","display","justifyContent","padding","showRemove","removeItem","faTrash","WordCollection","wordCollection","isShowing","getWordsFromCollection","match","params","ShowResults","answers","individualWord","answer","toLowerCase","faCheckCircle","Input","CongratulationsContainer","FormComponent","formSubmitted","totalScore","showResults","message","subtitle","handleChange","index","checkAnswers","lowerCaseAnswers","answersArray","totalCorrect","forEach","getMessage","total","score","getRandom","arr","n","result","Array","len","taken","RangeError","x","Math","floor","random","resetTest","faAngleDown","htmlFor","toUpperCase","slice","data-id","faInfoCircle","Test","WordSetCard","wordSet","imageURL","Practice","wordSets","getWordSets","set","Collection","delete","Background","SecondBackground","ThirdBackground","SignIn","App","storage","getItem","setItem","getInitalTheme","savedNightMode","JSON","parse","basename","path","PracticeTest","PracticeFlashCards","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"kGAAA,IAAIA,EAAM,CACT,YAAa,GACb,gBAAiB,GACjB,eAAgB,GAChB,kBAAmB,GACnB,eAAgB,IAIjB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,4EC1BpBU,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,iECG3CC,IAASC,cAAc,CACnBC,OAAQC,0CACRC,WAAYD,uCACZE,UAAWF,yB,uGCNFG,EAAY,CAErBC,YAAa,UACbC,aAAc,UACdC,aAAc,UAGdC,IAAK,CACDC,QAAS,UACTC,UAAW,UACXC,SAAU,UACVC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,gBAAiB,UACjBC,eAAgB,WAEpBC,QAAS,CACLR,QAAS,UACTC,UAAW,UACXC,SAAU,UACVC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,gBAAiB,UACjBC,eAAgB,WAEpBE,OAAQ,CACJT,QAAS,UACTC,UAAW,UACXC,SAAU,UACVC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,gBAAiB,UACjBC,eAAgB,WAEpBG,UAAW,CACPV,QAAS,UACTC,UAAW,UACXC,SAAU,UACVC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,gBAAiB,UACjBC,eAAgB,WAEpBI,OAAQ,CACJX,QAAS,UACTC,UAAW,UACXC,SAAU,UACVC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,gBAAiB,UACjBC,eAAgB,WAIpBK,YAAa,wBACbC,YAAa,4BAGbC,UAAW,8BAGXC,MAAO,WACPC,OAAQ,WACRC,MAAO,WACPC,QAAS,a,sgBClEb,IA2BeC,EA3BKC,YAAH,KAYO,SAAAC,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,SAC5F,SAAAgB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,OACvFR,EAAUiB,YAKVjB,EAAUkB,a,4UCpB7B,IAAMW,EAAOC,IAAOC,IAAV,KAcK,SAASC,EAAUN,GAC9B,OACI,kBAACG,EAAD,KACG,yBAAKI,UAAU,UACX,yBAAKC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,aAAc,MAAOC,YAAa,MAAOC,gBAAiBb,EAAMrB,WAC7G,yBAAK6B,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,aAAc,MAAOC,YAAa,MAAOC,gBAAiBb,EAAMpB,aAC7G,yBAAK4B,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,aAAc,MAAOE,gBAAiBb,EAAMnB,aAE7F,yBAAK0B,UAAU,QACX,2BAAIP,EAAMc,Q,o+BCpBzB,IAAMC,EAAcX,IAAOY,IAAV,KAWXC,EAAgBb,IAAOC,IAAV,KAuBF,SAAAL,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOjB,QAMdV,EAAUoB,OAKpC,SAASwB,EAAKlB,GAAQ,IACzBC,EAAUD,EAAVC,MACR,OACI,kBAACgB,EAAD,KACI,kBAACF,EAAD,CACII,IAAKC,MAAQ,YAAanB,EAAd,SACZoB,IAAI,SAER,yBAAKd,UAAU,YACf,kBAAC,IAAD,CAAMe,GAAG,KACL,gD,ywGCpDhB,IAAMC,EAASnB,IAAOC,IAAV,IAKM/B,EAAUmB,WAKV,SAAAO,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOtB,WAQ5B,SAAAqB,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOhB,mBA+C5F,SAAAe,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOjB,QAadV,EAAUsB,MAKVtB,EAAUoB,OAO7C8B,EAAWpB,IAAOC,IAAV,KAQRoB,EAAarB,IAAOsB,IAAV,IASOpD,EAAUiB,aAKhB,SAAAS,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAW7F,SAAAkB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAY7F,SAAAkB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAYzF6C,E,4MAWjBC,MAAQ,CACJC,WAAY,GACZC,YAAY,G,EAYhBC,YAAc,SAACvE,GACP,EAAKwE,KAAKC,SAASzE,EAAE0E,SACrB,EAAKC,SAAS,CAAEL,YAAY,K,EAIpCM,SAAW,SAACnC,GACR,EAAKkC,SAAS,CAAEN,WAAY5B,IAC5B,EAAKD,MAAMqC,YAAYpC,I,EAG3BqC,aAAe,WACX,EAAKH,SAAS,CAAEL,YAAa,EAAKF,MAAME,c,EAG5CS,YAAc,WACV,EAAKJ,SAAS,CAAEL,YAAY,K,mEAxB5BU,SAASC,iBAAiB,YAAaC,KAAKX,aAAa,K,6CAIzDS,SAASG,oBAAoB,YAAaD,KAAKX,aAAa,K,+BAuBtD,IAAD,OACL,OACI,kBAACR,EAAD,CAAQqB,IAAK,SAAAZ,GAAI,OAAI,EAAKA,KAAOA,IAC7B,kBAACd,EAAD,CAAMjB,MAAOyC,KAAK1C,MAAM6C,eACxB,yBAAKtC,UAAU,YACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIA,UAAU,OACVuC,YAAa,CAAEC,aAAc,8BAC7BC,OAAK,EACL1B,GAAG,KAJP,UAOA,kBAAC,IAAD,CACIf,UAAU,OACVuC,YAAa,CAAEC,aAAc,8BAC7BC,OAAK,EACL1B,GAAG,eAJP,mBAOA,kBAAC,IAAD,CACIf,UAAU,OACVuC,YAAa,CAAEC,aAAc,8BAC7BC,OAAK,EACL1B,GAAG,aAJP,YAOCoB,KAAK1C,MAAMiD,WAAa,KAAO,kBAAC,IAAD,CAC5B1C,UAAU,OACVuC,YAAa,CAAEC,aAAc,8BAC7BC,OAAK,EACL1B,GAAG,mBAJyB,mBAQpC,yBAAKf,UAAU,UACVmC,KAAK1C,MAAMiD,YAAcP,KAAK1C,MAAMkD,UAAY,yBAAK/B,IAAKuB,KAAK1C,MAAMkD,UAAW7B,IAAG,UAAKqB,KAAK1C,MAAMmD,SAAhB,cAAyC,MAEjI,kBAAC,IAAD,CACIC,KAAOC,IACPC,MAAQhF,EAAUG,aAClB8B,UAAU,OACVgD,QAASb,KAAKJ,eAClB,yBACI/B,UAAWmC,KAAKd,MAAME,WAAa,SAAW,eAC9C,kBAACN,EAAD,KACI,kBAAC,IAAD,CACI+B,QAASb,KAAKH,YACdhC,UAAU,OACVC,MAAO,CAAEgD,OAAQ,OAAQC,SAAU,UACnCL,KAAOM,IACPJ,MAAgC,UAAzBZ,KAAK1C,MAAME,UAAwB5B,EAAUG,aAAeH,EAAUC,cAC7E,2BAAImE,KAAK1C,MAAMiD,WAAa,oBAAsB,0BAE1D,6BACA,kBAACxB,EAAD,KACI,0CACA,6BACA,kBAAC,IAAD,CAAMH,GAAG,KAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,eAAT,mBACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACCoB,KAAK1C,MAAMiD,WAAa,KAAO,kBAAC,IAAD,CAAM3B,GAAG,mBAAT,6BAEpC,kBAACG,EAAD,KACI,oDACA,6BACA,4BACI8B,QAASb,KAAK1C,MAAM2D,QACpBpD,UAAU,WAAU,kBAAC,IAAD,CAAiB+C,MAAgC,UAAzBZ,KAAK1C,MAAME,UAAwB5B,EAAUG,aAAeH,EAAUC,YAAa6E,KAAMQ,MAFzI,aAGA,uBACIrD,UAAU,UACVgD,QAASb,KAAK1C,MAAM6D,iBACpB,kBAAC,IAAD,CACIP,MAAgC,UAAzBZ,KAAK1C,MAAME,UAAwB5B,EAAUG,aAAeH,EAAUC,YAC7E6E,KAAMU,MALd,IAKoD,UAAzBpB,KAAK1C,MAAME,UAAwB,OAAS,QALvE,SAOA,2BACI,kBAAC,IAAD,CACIoD,MAAgC,UAAzBZ,KAAK1C,MAAME,UAAwB5B,EAAUG,aAAeH,EAAUC,YAC7E6E,KAAMW,MAHd,WAKA,4BACI,wBACIxD,UAAuC,WAA5BmC,KAAK1C,MAAM6C,aAA4B,WAAa,KAC/DU,QAASb,KAAKN,SAAS4B,KAAKtB,KAAM,WAClC,kBAACpC,EAAD,CACIQ,KAAK,SACLnC,QAASL,EAAUc,OAAOT,QAC1BC,UAAWN,EAAUc,OAAOR,UAC5BC,SAAUP,EAAUc,OAAOP,YAGnC,wBACI0B,UAAuC,QAA5BmC,KAAK1C,MAAM6C,aAAyB,WAAa,KAC5DU,QAASb,KAAKN,SAAS4B,KAAKtB,KAAM,QACtC,kBAACpC,EAAD,CACQQ,KAAK,MACLnC,QAASL,EAAUI,IAAIC,QACvBC,UAAWN,EAAUI,IAAIE,UACzBC,SAAUP,EAAUI,IAAIG,YAGhC,wBACI0B,UAAuC,YAA5BmC,KAAK1C,MAAM6C,aAA6B,WAAa,KAChEU,QAASb,KAAKN,SAAS4B,KAAKtB,KAAM,YAClC,kBAACpC,EAAD,CACIQ,KAAK,UACLnC,QAASL,EAAUa,QAAQR,QAC3BC,UAAWN,EAAUa,QAAQP,UAC7BC,SAAUP,EAAUa,QAAQN,YAGpC,wBACI0B,UAAuC,cAA5BmC,KAAK1C,MAAM6C,aAA+B,WAAa,KAClEU,QAASb,KAAKN,SAAS4B,KAAKtB,KAAM,cAClC,kBAACpC,EAAD,CACIQ,KAAK,YACLnC,QAASL,EAAUe,UAAUV,QAC7BC,UAAWN,EAAUe,UAAUT,UAC/BC,SAAUP,EAAUe,UAAUR,YAGtC,wBACI0B,UAAuC,WAA5BmC,KAAK1C,MAAM6C,aAA4B,WAAa,KAC/DU,QAASb,KAAKN,SAAS4B,KAAKtB,KAAM,WAClC,kBAACpC,EAAD,CACIQ,KAAK,SACLnC,QAASL,EAAUgB,OAAOX,QAC1BC,UAAWN,EAAUgB,OAAOV,UAC5BC,SAAUP,EAAUgB,OAAOT,qB,GA7K3BoF,a,4sBC3JxC,IAAMC,EAAgB9D,IAAO+D,OAAV,IAIA7F,EAAUiB,aAChB,SAAAS,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOnB,QACjC,SAAAkB,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOjB,SAGhC,SAAAgB,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOtB,WAExC,SAAAqB,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOtB,WAC3C,SAAAqB,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOjB,SAIjDoF,EAAehE,IAAO+D,OAAV,IAIC7F,EAAUiB,aAChB,SAAAS,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOjB,SACjC,SAAAgB,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOtB,WAGhC,SAAAqB,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOtB,WAG7C,SAAAqB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAI/F,SAASuF,EAAOrE,GAC3B,OAAIA,EAAMsE,QAEF,kBAACJ,EAAD,KACKlE,EAAMuE,UAKX,kBAACH,EAAD,CAAcb,QAASvD,EAAM+B,YAAc/B,EAAM+B,YAAYiC,KAAKtB,MAAQ,MACrE1C,EAAMuE,U,m9CC9ChB,IAAMC,EAAYpE,IAAOC,IAAV,KAcToE,EAAkBrE,IAAOC,IAAV,KACZ,SAAAL,GAAK,OAAIA,EAAM0E,SAAW,WAAa,cAC5C,SAAA1E,GAAK,OAAIA,EAAM0E,SAAW,OAAS,SACtB,SAAA1E,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOhB,gBAAkBX,EAAU0B,EAAMC,MAAMA,OAAOf,kBACnG,SAAAc,GAAK,OAAIA,EAAM0E,SAAW,OAAS,WACnC,SAAA1E,GAAK,OAAIA,EAAM0E,SAAW,OAAS,WAClC,SAAA1E,GAAK,OAAIA,EAAM0E,SAAW,OAAS,WACnC,SAAA1E,GAAK,OAAIA,EAAM0E,SAAW,OAAS,WAGhC,SAAA1E,GAAK,OAAIA,EAAM0E,SAAW,OAAS,SAKtCpG,EAAUmB,WAGfkF,EAAQvE,IAAOY,IAAV,KAKG,SAAAhB,GAAK,OAAIA,EAAM0E,SAAW,OAAS,UAG3CE,EAAaxE,IAAOyE,KAAV,KAIN,SAAA7E,GAAK,OAAIA,EAAM0E,SAAW,OAAS,WAIlC,SAAA1E,GAAK,OAAIA,EAAM0E,SAAW,OAAS,WACnC,SAAA1E,GAAK,OAAIA,EAAM0E,SAAW,OAAS,WAC7B,SAAA1E,GAAK,OACzBA,EAAM0E,SAAW,OAASpG,EAAU0B,EAAMC,MAAMA,OAAOjB,SAG9C8F,EAAc1E,IAAO2E,MAAV,IAGLzG,EAAUiB,aAGhB,SAAAS,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOnB,QACjC,SAAAkB,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOjB,SAEhC,SAAAgB,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOtB,WC5DzCqG,G,4MACjBpD,MAAQ,CACJqD,MAAO,GACPC,gBAAgB,G,EAQpBC,kBAAoB,SAAC3H,GACjB,EAAK2E,SAAS,CAAE8C,MAAOzH,EAAE0E,OAAOkD,S,EAGpCC,WAAa,SAAC7H,GACVA,EAAE8H,iBACF,EAAKtF,MAAMuF,aAAa,EAAK3D,MAAMqD,OACnC,EAAK9C,SAAS,CAAE8C,MAAO,GAAIC,gBAAgB,K,uDAGrC,IACEjF,EAAUyC,KAAK1C,MAAfC,MACR,OACI,kBAACuE,EAAD,KACI,kBAACC,EAAD,CAAiBC,SAAUhC,KAAKd,MAAMsD,gBAClC,kBAACP,EAAD,CACIxD,IAAKC,MAAQ,YAAanB,EAAd,SACZoB,IAAI,GACJqD,SAAUhC,KAAKd,MAAMsD,iBAEzB,kBAACN,EAAD,CACIF,SAAUhC,KAAKd,MAAMsD,eACrBM,SAAU9C,KAAK2C,YACf,kBAACP,EAAD,CACIhE,KAAK,QACL2E,KAAK,OACLC,YAAY,oBACZN,MAAO1C,KAAKd,MAAMqD,MAClBU,SAAUjD,KAAKyC,oBACnB,kBAACd,EAAD,CAAQC,SAAS,EAAMmB,KAAK,UAA5B,iB,GAxCexB,a,gmBCHvC,IAAM2B,GAAexF,IAAOyF,OAAV,MAIF,SAAA7F,GAAK,OAAI1B,EAAU0B,EAAMC,MAAMA,OAAOrB,YACtCN,EAAUmB,WAqBLqG,G,uKAEb,OACI,kBAACF,GAAD,U,GAHwB3B,a,wCC1Bf8B,G,4MACjBC,SAAW,CAEPC,WAAY,QAEZC,iBAAkB,mBAElBC,cAAe,CACbnI,KAASoI,KAAKC,kBAAkBC,YAChCtI,KAASoI,KAAKG,mBAAmBD,YACjCtI,KAASoI,KAAKI,mBAAmBF,c,uDAKjC,OAAO,kBAAC,KAAD,CAAoBN,SAAUtD,KAAKsD,SAAUS,aAAczI,KAASoI,a,GAfnDM,IAAMzC,W,kkCCDjC,IAAM0C,GAAiBvG,IAAOC,IAAV,MAUb,SAAAL,GAAK,MACW,UAA1BA,EAAMC,MAAMC,UAAZ,oBAAiD5B,EAAU0B,EAAMC,MAAMA,OAAOf,gBAA9E,oBAA8GZ,EAAU0B,EAAMC,MAAMA,OAAOhB,oBAuBlI2H,IAPQxG,IAAOY,IAAV,MAOcZ,IAAOC,IAAV,MAKL,SAAAL,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,UCV1F6H,G,uKAnBD,IAAD,EACiDnE,KAAK1C,MAAnD8G,EADH,EACGA,UAAWC,EADd,EACcA,QAASC,EADvB,EACuBA,WAAYC,EADnC,EACmCA,UACxC,GAAIH,EACA,OACI,kBAACH,GAAD,KACI,kBAACC,GAAD,KACI,6BACKK,EAAY,kBAAC,IAAD,CAAiB1G,UAAU,OAAO2G,eAAa,QAAQC,aAAW,QAAQ/D,KAAMgE,IAAe7D,QAASyD,IAAiB,KACtI,4BAAKD,GACJrE,KAAK1C,MAAMuE,gB,GAjBpBmC,IAAMzC,W,ohDCK1B,IAAMoD,GAAKrJ,KAASsJ,YAEdC,GAAsBnH,IAAOC,IAAV,MAOD,SAAAL,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOlB,SAC5F,SAAAiB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOlB,MAAQT,EAAU0B,EAAMC,MAAMA,OAAOnB,QAE5F,SAAAkB,GAAK,MACW,UAA1BA,EAAMC,MAAMC,UAAZ,oBAAiD5B,EAAU0B,EAAMC,MAAMA,OAAOlB,OAA9E,oBAAqGT,EAAU0B,EAAMC,MAAMA,OAAOnB,SAWpH,SAAAkB,GAAK,MACW,UAA1BA,EAAMC,MAAMC,UAAZ,oBAAiD5B,EAAU0B,EAAMC,MAAMA,OAAOlB,OAA9E,oBAAqGT,EAAU0B,EAAMC,MAAMA,OAAOnB,SAsCzH,SAAAkB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAOzF,SAAAkB,GAAK,MACQ,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAMzF0I,G,4MACjB5F,MAAQ,CACJ6F,gBAAgB,EAChBC,uBAAuB,G,EAW3BC,gBAAkB,WACd,GAAG,EAAK3H,MAAMiD,WAAY,CACtB,IAAM2E,EAAM5J,KAASoI,OAAOyB,YAAYD,IADlB,EAEU,EAAK5H,MAA7B8H,EAFc,EAEdA,KAAMC,EAFQ,EAERA,cAFQ,EAG2B,EAAK/H,MAAMgI,IAApDvC,EAHc,EAGdA,KAAMwC,EAHQ,EAGRA,WAAYC,EAHJ,EAGIA,QAASC,EAHb,EAGaA,UAC/Bd,GAAGe,WAAW,SACbC,IAAIT,GACJQ,WAAW,kBACPE,IAAI,CACDR,OACAC,gBACAtC,OACAwC,aACAC,UACAC,YACAI,UAAW,IAAIC,OAEvBC,QAAQC,IAAI,wCAA0CZ,EAAO,6BAEjEW,QAAQC,IAAI,0DACZ,EAAKvG,SAAS,CAAEsF,gBAAgB,K,uDAK9B,IAAD,EACkC/E,KAAK1C,MAApC8H,EADH,EACGA,KAAMC,EADT,EACSA,cAAe9H,EADxB,EACwBA,MADxB,EAE4CyC,KAAK1C,MAAMgI,IAApDvC,EAFH,EAEGA,KAAMwC,EAFT,EAESA,WAAYC,EAFrB,EAEqBA,QAASC,EAF9B,EAE8BA,UACnC,OACI,kBAAC,IAAMQ,SAAP,KACI,kBAAC,KAAD,MACA,kBAACpB,GAAD,KACI,yBAAKhH,UAAU,eACX,4BAAKuH,EAAK,6BAAMrC,IACf0C,EAAY,yBAAKhH,IAAKgH,EAAW9G,IAAI,SAAY,KAClD,2BAAI0G,EAAa,WAAOA,EAAP,KAA0B,IAC3C,4BAAQa,WAAS,8BAA8BrF,QAASb,KAAKiF,iBAAiB,kBAAC,IAAD,CAAiBvE,KAAMyF,IAAYtI,UAAU,WAE/H,6BACA,2BAAI0H,GACJ,uBAAG1H,UAAU,WAAW2H,IAE3BxF,KAAKd,MAAM6F,eACJ,kBAAC,GAAD,CAAOV,QAAQ,2DAA2D9G,MAAOA,GAC7E,kBAAC,GAAD,OAEF,U,GA5DkBgE,aCvF7B,SAAS6E,KACpB,OACI,6BACI,yCACA,kBAAC,IAAD,CAAiBC,MAAI,EAAC3F,KAAM4F,IAAWC,KAAK,Q,yiDCHxD,IAAMzE,GAAYpE,IAAOC,IAAV,MAmEA,SAAS6I,GAAUlJ,GAAQ,IAAD,EACCA,EAAM8H,KAApCA,EAD6B,EAC7BA,KAAMqB,EADuB,EACvBA,KAAMC,EADiB,EACjBA,SAAUC,EADO,EACPA,IADO,EAENrJ,EAAM8H,KAAKwB,YAAY,GAA9CC,EAF6B,EAE7BA,KAAMC,EAFuB,EAEvBA,aACd,OACI,kBAAC,GAAD,KACI,yBAAKjJ,UAAU,WACX,yBAAKA,UAAU,WACX,+CACA,2BAAIkJ,KAAOJ,GAAKK,OAAO,kBAE3B,yBAAKnJ,UAAU,QACX,4BAAKuH,EAAK,6BAAM0B,IAChB,uBAAGjJ,UAAU,cAAcgJ,GAC3B,uBAAGhJ,UAAU,QAAb,IAAsB4I,EAAtB,KACA,4BACKC,EAASnM,KAAI,SAAAiL,GACV,OACI,wBAAIyB,IAAKzB,EAAQ9K,IACjB,gCAAYwM,KAAM1B,EAAQ2B,KACtB,2BAAI3B,EAAQqB,MACZ,oCAAUrB,EAAQ4B,gB,2VChFtD,IAAMC,GAAgB3J,IAAOC,IAAV,MAQbmE,GAAYpE,IAAO4J,KAAV,MAMTjE,G,4MACFnE,MAAQ,CACJqI,KAAM,GACNnC,KAAM,GACNC,cAAe,GACfmC,WAAW,EACXjH,YAAY,EACZkH,SAAU,GACVC,WAAW,EACXC,aAAc,I,EA4BlB1G,QAAU,WACN3F,IAASoI,OAAOkE,UAChB,EAAKnI,SAAS,CAAEc,YAAY,IAC5B,EAAKjD,MAAMuK,QAAQC,KAAK,M,EAG5BjF,aAAe,SAACN,GACZ,EAAK9C,SAAS,CAAE+H,WAAW,EAAME,WAAW,IAC5CK,MAAM,yCAA2CxF,EAAO,CACxDyF,QAAS,CACLC,cAAc,SAAD,OAAWxM,+CAEzByM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAS,IAAM,EAAK3I,SAAS,CAAEiI,WAAW,EAAMF,WAAW,IAAWW,EAAIE,UAC5FH,MAAK,SAAAX,GACFxB,QAAQC,IAAIuB,GACZ,EAAK9H,SAAS,CAAE+H,WAAW,EAAOD,KAAMA,EAAKX,YAAaxB,KAAMmC,EAAKnC,KAAMC,cAAekC,EAAKlC,mBAElGiD,OAAM,SAAAC,GAAG,OAAIxC,QAAQC,IAAIuC,O,EAG9BC,gBAAkB,WACd,IAAMC,EAAM,IAAI3C,KACV4C,EAAOD,EAAIE,cACXC,EAAQH,EAAII,WAAa,EACzBC,EAAML,EAAIM,UACVC,EAAS,UAAMN,EAAN,YAAcE,EAAd,YAAuBE,GACtC/C,QAAQC,IAAIgD,GACZjB,MAAM,2DAAD,OAA4DiB,EAA5D,oBAAiFvN,qDAAqC,CACvHuM,QAAS,CACLiB,OAAQ,sBAGff,MAAK,SAAAC,GAAG,OAAIA,EAAIE,UAChBH,MAAK,SAAAX,GACFxB,QAAQC,IAAIuB,GACZ,EAAK9H,SAAS,CAAEkI,aAAcJ,EAAMC,WAAW,OAElDc,OAAM,SAAAC,GAAG,OAAIxC,QAAQC,IAAIuC,O,kEAvDT,IAAD,OAChBvI,KAAKkJ,uBAAyB5N,IAASoI,OAAOyF,oBAC1C,SAAAC,GACIrD,QAAQC,IAAIoD,GACZ,EAAK3J,SAAS,CAAEc,aAAc6I,EAAM3B,SAAUnM,IAASoI,OAAOyB,cAC1DiE,GACA,EAAK3J,SAAS,CAAEc,YAAY,OAGxCP,KAAKwI,oB,6CAIFxI,KAAKkJ,wBACJlJ,KAAKkJ,2B,+BA4CH,IAAD,OACL,OACI,6BACA,kBAAC,GAAD,MACI,kBAAC,EAAD,CACI/H,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIxG,aAAc7C,KAAK6C,aACnBtF,MAAOyC,KAAK1C,MAAMC,QAEtB,kBAAC8J,GAAD,KACKrH,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAc,MACpCpG,KAAKd,MAAMsI,WAAaxH,KAAKd,MAAMkG,KAAOpF,KAAKd,MAAMqI,KAAKhN,KAAI,SAACgL,EAAY+D,GACzE,OACI,kBAAC,GAAD,CACIrC,IAAKqC,EACL/I,WAAY,EAAKrB,MAAMqB,WACvB+E,IAAKC,EACLH,KAAM,EAAKlG,MAAMkG,KACjB7H,MAAO,EAAKD,MAAMC,MAClB8H,cAAe,EAAKnG,MAAMmG,mBAGjC,KACJrF,KAAKd,MAAMwI,UAAY,gDAA4B,OAG3D1H,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAc,kBAACI,GAAD,CAAWpB,KAAMpF,KAAKd,MAAMyI,oB,GAhH/DpG,aAsHJgI,eAAWlG,I,wmBCzI1B,IAAMvB,GAAYpE,IAAOC,IAAV,MAGgB,SAAAL,GAAK,MACN,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAC9E,SAAAkB,GAAK,MACH,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAIlF,SAAAkB,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,SAExF,SAAAgB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAS7F,SAAAkB,GAAK,OACd1B,EAAU0B,EAAMC,MAAMA,OAAOjB,SACT,SAAAgB,GAAK,OACzB1B,EAAU0B,EAAMC,MAAMA,OAAOtB,WAIhBuN,G,uKAKP,IACE9O,EAAOsF,KAAK1C,MAAZ5C,GACR,OAAIsF,KAAK1C,MAAMmM,SAWP,kBAAC,GAAD,KACA,kBAAC,KAAD,MACA,kBAAC,IAAD,CAASC,gBAAgB,WAAW9K,GAAE,oBAAelE,GAAMwL,WAAS,qCAApE,cACA,kBAAC,IAAD,CAASwD,gBAAgB,WAAW9K,GAAE,2BAAsBlE,GAAMwL,WAAS,mEAA3E,UACA,kBAAC,IAAD,CAASwD,gBAAgB,WAAW9K,GAAE,yBAAoBlE,GAAMwL,WAAS,oFAAzE,SAbA,kBAAC,GAAD,KACA,kBAAC,KAAD,MACA,kBAAC,IAAD,CAASwD,gBAAgB,WAAW9K,GAAG,cAAcsH,WAAS,qCAA9D,cACA,kBAAC,IAAD,CAASwD,gBAAgB,WAAW9K,GAAG,UAAUsH,WAAS,mEAA1D,UACA,kBAAC,IAAD,CAASwD,gBAAgB,WAAW9K,GAAG,QAAQsH,WAAS,oFAAxD,a,GAbgC3E,a,gSC9BhD,IAAMoI,GAAWjM,IAAOC,IAAV,MAaC,SAASiM,GAAkBtM,GAAQ,IACtCuM,EAAqFvM,EAArFuM,YAAaC,EAAwExM,EAAxEwM,cAAeC,EAAyDzM,EAAzDyM,SAAUC,EAA+C1M,EAA/C0M,SAAUC,EAAqC3M,EAArC2M,UAAWC,EAA0B5M,EAA1B4M,SAAUC,EAAgB7M,EAAhB6M,YAC7E,OACI,kBAAC,IAAMlE,SAAP,KACI,kBAAC0D,GAAD,KACI,kBAAC,IAAD,CACI9I,QAASoJ,EACTvJ,KAAM0J,IACNvM,UAAU,SACd,kBAAC,IAAD,CACIgD,QAASmJ,EACTtJ,KAAM2J,IACNxM,UAAU,SACd,kBAAC,IAAD,CACIgD,QAASsJ,EACTzJ,KAAM4J,IACNzM,UAAU,SACd,kBAAC,IAAD,CACIgD,QAASkJ,EACTrJ,KAAMM,IACNnD,UAAU,SACd,kBAAC,IAAD,CACIgD,QAASqJ,EACTxJ,KAAM6J,IACN1M,UAAU,UAElB,2BAAIiM,EAAJ,IAAoBD,I,qkDCxChC,IAAM/H,GAAYpE,IAAOC,IAAV,MAOT6M,GAAY9M,IAAOC,IAAV,MA0Ca,SAAAL,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,SAC5F,SAAAgB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAIlF,SAAAkB,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,SAC5F,SAAAgB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAWzFqO,G,4MACjBvL,MAAQ,CACJwL,UAAU,EACVC,eAAe,G,EAgBnBC,SAAW,WACP,EAAKnL,SAAS,CAAEiL,UAAW,EAAKxL,MAAMwL,Y,EAG1CP,YAAc,WACV,EAAK1K,SAAS,CAAEkL,eAAgB,EAAKzL,MAAMyL,iB,uDAIrC,IAAD,EAC6F3K,KAAK1C,MAA/F8H,EADH,EACGA,KAAMG,EADT,EACSA,WAAY0E,EADrB,EACqBA,UAAWC,EADhC,EACgCA,SAAUJ,EAD1C,EAC0CA,cAAeD,EADzD,EACyDA,YAAaG,EADtE,EACsEA,SAAUD,EADhF,EACgFA,SACrF,OACI,kBAAC,GAAD,KACI,6BACI,kBAACS,GAAD,CAAW3J,QAASb,KAAK4K,UACrB,yBAAK/M,UAAWmC,KAAKd,MAAMwL,SAAW,iBAAmB,WACrD,yBAAK7M,UAAU,SACdmC,KAAKd,MAAMyL,cAAgB,4BAAKvF,GAAa,uBAAGvH,UAAU,cAAc0H,IAEzE,yBAAK1H,UAAU,QACdmC,KAAKd,MAAMyL,cAAgB,uBAAG9M,UAAU,cAAc0H,GAAkB,4BAAKH,MAItF,kBAACwE,GAAD,CACIK,UAAWA,EACXC,SAAUA,EACVF,SAAUA,EACVD,SAAUA,EACVD,cAAeA,EAAgB,EAC/BD,YAAaA,EACbM,YAAanK,KAAKmK,oB,GAlDHnG,IAAMzC,WClEvCoD,GAAKrJ,KAASsJ,YAEdiG,G,4MACF3L,MAAQ,CACJqB,YAAY,EACZkH,SAAU,GACVqD,eAAgB,GAChBtD,WAAW,EACXsC,cAAe,EACfD,YAAa,G,EAsBjBkB,kBAAoB,SAAA7F,GAChBa,QAAQC,IAAId,GACZP,GAAGe,WAAW,SACbC,IAAIT,GACJQ,WAAW,kBACXsF,MACA9C,MAAK,SAAA+C,GACF,IAAMvF,EAAa,GACnBuF,EAASC,KAAK3Q,KAAI,SAAAoL,GACdI,QAAQC,IAAIL,EAAIjL,IAChBgL,EAAWoC,KAAKnC,MAEpBI,QAAQC,IAAIN,GACZ,EAAKjG,SAAS,CAAEqL,eAAgBpF,EAAY8B,WAAW,EAAOqC,YAAanE,EAAWyF,YAEzF7C,OAAM,SAAAC,GAAG,OAAIxC,QAAQC,IAAIuC,O,EAS9BtH,QAAU,WACN3F,KAASoI,OAAOkE,UAChB,EAAKnI,SAAS,CAAEc,YAAY,IAC5B,EAAKjD,MAAMuK,QAAQC,KAAK,M,EAG5BiC,SAAW,WACPhE,QAAQC,IAAI,4BACT,EAAK9G,MAAM4K,cAAgB,IAAM,EAAK5K,MAAM2K,YAC3C,EAAKpK,SAAS,CAAEqK,cAAe,EAAK5K,MAAM4K,cAAgB,IAE1D,EAAKrK,SAAS,CAAEqK,cAAe,K,EAIvCE,SAAW,WACyB,IAA7B,EAAK9K,MAAM4K,cACV,EAAKrK,SAAS,CAAEqK,cAAe,EAAK5K,MAAM2K,YAAc,IAExD,EAAKpK,SAAS,CAAEqK,cAAe,EAAK5K,MAAM4K,cAAgB,K,EAIlEI,SAAW,WACP,EAAKzK,SAAS,CAAEqK,cAAe,EAAK5K,MAAM2K,YAAc,K,EAG5DI,UAAY,WACR,EAAKxK,SAAS,CAAEqK,cAAe,K,kEAhEd,IAAD,OAChB9J,KAAKkJ,uBAAyB5N,KAASoI,OAAOyF,oBAC1C,SAAAC,GACI,EAAK3J,SAAS,CAAEc,aAAc6I,EAAM3B,SAAUnM,KAASoI,OAAOyB,cAC1DiE,EAGA,EAAK2B,kBAAkB,EAAK7L,MAAMuI,SAASvC,KAF3C,EAAKzF,SAAS,CAAEc,YAAY,S,6CA0BrCP,KAAKkJ,wBACJlJ,KAAKkJ,2B,+BAoCT,OACI,kBAAC,IAAMjD,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,IAC7BzJ,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAc,MACpCpG,KAAKd,MAAMsI,WAAaxH,KAAKd,MAAM4L,eAAeK,OAAS,EAAI,kBAAC,GAAD,CAC7DlB,UAAWjK,KAAKiK,UAChBC,SAAUlK,KAAKkK,SACfF,SAAUhK,KAAKgK,SACfD,SAAU/J,KAAK+J,SACfD,cAAe9J,KAAKd,MAAM4K,cAC1BD,YAAa7J,KAAKd,MAAM2K,YACxBzE,KAAMpF,KAAKd,MAAM4L,eAAe9K,KAAKd,MAAM4K,eAAevC,OAAOnC,KACjEG,WAAYvF,KAAKd,MAAM4L,eAAe9K,KAAKd,MAAM4K,eAAevC,OAAOhC,WAAY7K,GAAIsF,KAAKd,MAAM4L,eAAe,GAAGpQ,KAAS,KAC/HsF,KAAKd,MAAMsI,WAAkD,IAArCxH,KAAKd,MAAM4L,eAAeK,OAAuE,KAAxD,kF,GA5G9D5J,aAkHNgI,eAAWsB,I,glDCtH1B,IAAMO,GAAmB1N,IAAO2N,GAAV,MASS,SAAA/N,GAAK,MACN,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,OACjER,EAAUqB,QAelC,SAAAK,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAoB9E,SAAAkB,GAAK,MACH,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAWxG0F,GAAYpE,IAAOC,IAAV,MAKS,SAAAL,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,SAC5F,SAAAgB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,OACvFR,EAAUiB,aACL,SAAAS,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QASrFkP,G,uKAMP,IAAD,OACL,OACI,yBAAKxN,MAAO,CAAEyN,aAAc,OAAQvN,MAAO,OAAQwN,QAAS,OAAQC,eAAgB,WAChF,kBAAC,GAAD,KACI,kBAAC,KAAD,MACA,+CACA,wBAAI3N,MAAO,CAAE4N,QAAS,MACrB1L,KAAK1C,MAAMoI,WAAWnL,KAAI,SAAA6K,GACvB,OACI,kBAACgG,GAAD,CAAkBnE,IAAK7B,EAAKmC,OAAOnC,MAC/B,yBAAKvH,UAAU,QACX,4BAAKuH,EAAKmC,OAAOnC,KAAK,6BAAMA,EAAKmC,OAAOxE,QAE5C,yBAAKlF,UAAU,cACX,2BAAIuH,EAAKmC,OAAOhC,YAChB,uBAAG1H,UAAU,WAAYuH,EAAKmC,OAAO/B,SAAZ,WAA2BJ,EAAKmC,OAAO/B,QAAvC,OAE5B,EAAKlI,MAAMqO,WAAa,yBACrB9K,QAAS,EAAKvD,MAAMsO,WAAWtK,KAAK,EAAM8D,EAAK1K,IAC/CwL,WAAS,mCACTrI,UAAU,UACV,kBAAC,IAAD,CAAiBA,UAAU,OAAO6C,KAAMmL,OACnC,gB,GA5BQtK,aC3E3CoD,GAAKrJ,IAASsJ,YAEdkH,G,4MACF5M,MAAQ,CACJqB,YAAY,EACZkH,SAAU,GACVsE,eAAgB,GAChBvE,WAAW,EACXwE,WAAW,EACX5H,WAAW,G,EAyBf6H,uBAAyB,WACrB,IAAMvR,EAAK,EAAK4C,MAAM4O,MAAMC,OAAOzR,GACnCiK,GAAGe,WAAW,WACbC,IAAIjL,GACJgL,WAAW,SACXsF,MACA9C,MAAK,SAAA+C,GACF,IAAMvF,EAAa,GACnBuF,EAASC,KAAK3Q,KAAI,SAAAoL,GACdI,QAAQC,IAAIL,EAAIjL,IAChBgL,EAAWoC,KAAKnC,MAEpBI,QAAQC,IAAIN,GACZ,EAAKjG,SAAS,CAAEsM,eAAgBrG,EAAY8B,WAAW,OAE1Dc,OAAM,SAAAC,GAAG,OAAIxC,QAAQC,IAAIuC,O,EAS9BjE,WAAa,WACT,EAAK7E,SAAS,CAAE2E,WAAW,K,EAG/BnD,QAAU,WACN3F,IAASoI,OAAOkE,UAChB,EAAKnI,SAAS,CAAEc,YAAY,IAC5B,EAAKjD,MAAMuK,QAAQC,KAAK,M,kEA9CP,IAAD,OAChB9H,KAAKkJ,uBAAyB5N,IAASoI,OAAOyF,oBAC1C,SAAAC,GACI,EAAK3J,SAAS,CAAEc,aAAc6I,EAAM3B,SAAUnM,IAASoI,OAAOyB,cAE1DiE,EAKA,EAAK6C,0BAJLlG,QAAQC,IAAI,sBACZ,EAAKvG,SAAS,CAAEc,YAAY,EAAOiH,WAAW,EAAOpD,WAAW,U,6CA2BzEpE,KAAKkJ,wBACJlJ,KAAKkJ,2B,+BAeT,IAAMxO,EAAKsF,KAAK1C,MAAM4O,MAAMC,OAAOzR,GACnC,OAAIsF,KAAKd,MAAMsI,UAEP,kBAAC,IAAMvB,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,EAAM/O,GAAIA,IACxC,kBAAC0L,GAAD,OAKJ,kBAAC,IAAMH,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,EAAM/O,GAAIA,IACvCsF,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAc,KACrCpG,KAAKd,MAAM6M,eAAeZ,OAAS,EAAI,kBAAC,GAAD,CAAqBQ,YAAY,EAAOjG,WAAY1F,KAAKd,MAAM6M,iBAAqB,wE,GApGnHxK,aA2GdgI,eAAWuC,I,uSCnH1B,IAAMhK,GAAYpE,IAAOC,IAAV,MAgBMyO,G,uKAMP,IAAD,EAC+BpM,KAAK1C,MAAjCyO,EADH,EACGA,eAAgBM,EADnB,EACmBA,QACxB,OACI,kBAAC,GAAD,KACKN,EAAexR,KAAI,SAAC+R,EAAgBhD,GAAO,IAAD,EACLgD,EAAe/E,OAA1CnC,EADgC,EAChCA,KAAMG,EAD0B,EAC1BA,WAAYxC,EADc,EACdA,KACpBwJ,EAASF,EAAQ/C,GAAK+C,EAAQ/C,GAAGkD,cAAgBH,EAAQ/C,GAC/D,OAAIlE,EAAKoH,gBAAkBD,EAEnB,yBAAKtF,IAAKqC,GACL,2BAAIA,EAAI,EAAR,KAAa/D,EAAb,KAA2BxC,EAA3B,KACA,yBAAKlF,UAAU,WACX,uBAAGA,UAAU,QAAb,WACA,2BAAG,kBAAC,IAAD,CAAiBA,UAAU,WAAW6C,KAAM+L,MAA/C,IAAkErH,IAEtE,8BAKJ,yBAAK6B,IAAKqC,GACN,2BAAIA,EAAI,EAAR,KAAa/D,EAAb,KAA2BxC,EAA3B,KACA,yBAAKlF,UAAU,WACX,uBAAGA,UAAU,QAAb,aACA,2BAAG,kBAAC,IAAD,CAAiBA,UAAU,UAAU6C,KAAMgE,MAA9C,IAAiE2H,EAAQ/C,IACzE,uBAAGzL,UAAU,QAAb,kBACA,2BAAIuH,IAER,sC,GAlCS7D,a,mwECXzC,IAAMmL,GAAQhP,IAAOC,IAAV,MAeLgP,GAA2BjP,IAAOC,IAAV,MASN,SAAAL,GAAK,OACzBA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,SAC7C,SAAAgB,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,SAC5F,SAAAgB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QA8BpG8F,GAAaxE,IAAOyE,KAAV,MAOQ,SAAA7E,GAAK,OACzBA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,SAE7C,SAAAgB,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,SAC5F,SAAAgB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAM9E,SAAAkB,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,SAC5F,SAAAgB,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAK3E,SAAAkB,GAAK,MACN,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAaxG0F,GAAYpE,IAAOC,IAAV,MAQMiP,G,4MACjB1N,MAAQ,CACJmN,QAAS,GACTQ,eAAe,EACfC,WAAY,EACZtF,WAAW,EACXuF,aAAa,EACbC,QAAS,GACTC,SAAU,I,EAOdC,aAAe,SAACpS,EAAGqS,GACf,IAAMd,EAAO,aAAO,EAAKnN,MAAMmN,SAC/BA,EAAQc,GAASrS,EAAE0E,OAAOkD,MAC1B,EAAKjD,SAAS,CAAE4M,a,EAGpBe,aAAe,SAACtS,GACZ,IAAMuS,EAAmB,EAAKnO,MAAMmN,QAAQ9R,KAAI,SAAAgS,GAAM,OAAIA,EAAOC,iBACjEzG,QAAQC,IAAIqH,GACZtH,QAAQC,IAAI,EAAK9G,MAAMmN,SACvBvR,EAAE8H,iBACF,IAAM0K,EAAe,GACrB,EAAKpO,MAAM6M,eAAexR,KAAI,SAAA+R,GAAmB,IACrClH,EAASkH,EAAe/E,OAAxBnC,KACRkI,EAAaxF,KAAK1C,MAEtB,IAAImI,EAAe,EACnBD,EAAaE,SAAQ,SAACpI,EAAMkE,GACrBlE,EAAKoH,gBAAkBa,EAAiB/D,IACvCiE,OAGR,EAAK9N,SAAS,CAAEqN,WAAYS,IAAgB,WACxC,EAAKE,WAAWF,O,EAKxBE,WAAa,SAACC,GACV,IAAMC,EAAQD,EAAQ,EAAKpQ,MAAMyO,eAAeZ,OAAS,IAC5C,MAAVwC,EACC,EAAKlO,SAAS,CAAEoN,eAAe,EAAMG,QAAS,iBAAkBC,SAAU,yBACnEU,EAAQ,GACf,EAAKlO,SAAS,CAAEoN,eAAe,EAAMG,QAAS,mBAAoBC,SAAU,yCACrEU,EAAQ,GACf,EAAKlO,SAAS,CAAEoN,eAAe,EAAMG,QAAS,cAAeC,SAAU,yCAChEU,EAAQ,GACf,EAAKlO,SAAS,CAAEoN,eAAe,EAAMG,QAAS,YAAaC,SAAU,oCAC9DU,EAAQ,EACf,EAAKlO,SAAS,CAAEoN,eAAe,EAAMG,QAAS,SAAUC,SAAU,wCAElE,EAAKxN,SAAS,CAAEoN,eAAe,EAAMG,QAAS,SAAUC,SAAU,iC,EAU1EW,UAAY,SAACC,EAAKC,GACd,IAAIC,EAAS,IAAIC,MAAMF,GACnBG,EAAMJ,EAAI1C,OACV+C,EAAQ,IAAIF,MAAMC,GACtB,GAAIH,EAAIG,EACJ,MAAM,IAAIE,WAAW,iDACzB,KAAOL,KAAK,CACR,IAAIM,EAAIC,KAAKC,MAAMD,KAAKE,SAAWN,GACnCF,EAAOD,GAAKD,EAAIO,KAAKF,EAAQA,EAAME,GAAKA,GACxCF,EAAME,KAAOH,KAAOC,EAAQA,EAAMD,GAAOA,EAE7ClI,QAAQC,IAAI+H,GACZ,EAAKtO,SAAS,CAAEsM,eAAgBgC,EAAQvG,WAAW,K,EAGvDgH,UAAY,WACR,EAAK/O,SAAS,CAAE4M,QAAS,GAAIQ,eAAe,EAAOC,WAAY,EAAGtF,WAAW,EAAMuF,aAAa,IADlF,IAENhB,EAAmB,EAAKzO,MAAxByO,eACFZ,EAASY,EAAeZ,OAAS,EAAI,EAAIY,EAAeZ,OAC9D,EAAKyC,UAAU7B,EAAgBZ,I,kEAzBd,IACTY,EAAmB/L,KAAK1C,MAAxByO,eACFZ,EAASY,EAAeZ,OAAS,EAAI,EAAIY,EAAeZ,OAC9DnL,KAAK4N,UAAU7B,EAAgBZ,K,+BAyBzB,IAAD,OACG5N,EAAUyC,KAAK1C,MAAfC,MACR,OAAIyC,KAAKd,MAAM2N,cAEP,kBAAC,GAAD,KACI,kBAACF,GAAD,KACI,yBAAK9O,UAAU,iBACX,yBAAKY,IAAKC,MAAQ,YAAanB,EAAd,WACjB,yBAAKM,UAAU,WACX,4BAAKmC,KAAKd,MAAM8N,SAChB,2BAAIhN,KAAKd,MAAM+N,UACf,8CAAoBjN,KAAKd,MAAM4N,WAA/B,WAAmD9M,KAAKd,MAAM6M,eAAeZ,QAC7E,kBAACxJ,EAAD,CAAQtC,YAAaW,KAAKwO,WAA1B,cACA,yBACI3N,QAAS,kBAAM,EAAKpB,SAAS,CAAEsN,aAAc,EAAK7N,MAAM6N,eACxDlP,UAAU,iBACV,2BAAImC,KAAKd,MAAM6N,YAAc,eAAiB,gBAC9C,kBAAC,IAAD,CACIrM,KAAM+N,SAKrBzO,KAAKd,MAAM6N,YAAc,yBAAKlP,UAAU,UAAS,kBAAC,GAAD,CAAakO,eAAgB/L,KAAKd,MAAM6M,eAAgBM,QAASrM,KAAKd,MAAMmN,WAAoB,OAM1J,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAYvJ,SAAU9C,KAAKoN,cACvB,+CACCpN,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAcpG,KAAKd,MAAM6M,eAAexR,KAAI,SAAC+R,EAAgBa,GAAW,IAAD,EAC1Db,EAAe/E,OAAzCnC,EADoF,EACpFA,KAAMG,EAD8E,EAC9EA,WAAWxC,EADmE,EACnEA,KACxB,OACI,kBAAC2J,GAAD,CAAOzF,IAAK7B,GACR,6BACI,2BAAOsJ,QAAStJ,GAAhB,UAA0B+H,EAAQ,EAAlC,aAAwC5H,EAAW,GAAGoJ,cAAgBpJ,EAAWqJ,MAAM,IAAK,0BAAM/Q,UAAU,QAAhB,IAAyBkF,EAAzB,MAC5F,2BAAOrI,GAAI0K,EAAMrC,KAAK,OAAO8L,UAAS1B,EAAOlK,SAAU,SAACnI,GAAD,OAAO,EAAKoS,aAAapS,EAAGqS,IAAQzK,MAAO,EAAKxD,MAAMmN,QAAQc,IAAU,GAAI/O,KAAMgH,EAAMvH,UAAU,WAE7J,yBAAKA,UAAU,QACX,kBAAC,KAAD,MACA,kBAAC,IAAD,CACIqI,WAAA,4CAA+Cd,EAAK,GAAGuJ,eACvDjO,KAAMoO,WAM1B,kBAACnN,EAAD,qB,GA1ImBJ,aC3GrCoD,GAAKrJ,IAASsJ,YAEdmK,G,4MACF7P,MAAQ,CACJqB,YAAY,EACZiH,WAAW,EACXC,SAAU,GACVqD,eAAgB,I,EAUpB7J,QAAU,WACN3F,IAASoI,OAAOkE,UAChB,EAAKnI,SAAS,CAAEc,YAAY,IAC5B,EAAKjD,MAAMuK,QAAQC,KAAK,M,EAe5BiD,kBAAoB,SAAA7F,GAChBa,QAAQC,IAAId,GACZP,GAAGe,WAAW,SACbC,IAAIT,GACJQ,WAAW,kBACXsF,MACA9C,MAAK,SAAA+C,GACF,IAAMvF,EAAa,GACnBuF,EAASC,KAAK3Q,KAAI,SAAAoL,GACdI,QAAQC,IAAIL,EAAIjL,IAChBgL,EAAWoC,KAAKnC,MAEpBI,QAAQC,IAAIN,GACZ,EAAKjG,SAAS,CAAEqL,eAAgBpF,EAAY8B,WAAW,OAE1Dc,OAAM,SAAAC,GAAG,OAAIxC,QAAQC,IAAIuC,O,kEA3BT,IAAD,OAChBvI,KAAKkJ,uBAAyB5N,IAASoI,OAAOyF,oBAC1C,SAAAC,GACI,EAAK3J,SAAS,CAAEc,aAAc6I,EAAM3B,SAAUnM,IAASoI,OAAOyB,cAC1DiE,EAGA,EAAK2B,kBAAkB,EAAK7L,MAAMuI,SAASvC,KAF3C,EAAKzF,SAAS,CAAEc,YAAY,EAAOiH,WAAW,EAAOpD,WAAW,S,+BA2B5E,OAAIpE,KAAKd,MAAMsI,UAEP,kBAAC,IAAMvB,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,IAC9B,kBAACrD,GAAD,OAIJpG,KAAKd,MAAMqB,WAEP,kBAAC,IAAM0F,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,IAC7BzJ,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAc,KACrCpG,KAAKd,MAAM4L,eAAeK,OAAS,EAC1B,oCAAE,8FAAsE,iDAAuBnL,KAAKd,MAAM4L,eAAeK,OAAjD,IAA+F,IAArCnL,KAAKd,MAAM4L,eAAeK,OAAe,OAAS,QAA5G,wBAAiJ,kBAAC,GAAD,CAAe5N,MAAOyC,KAAK1C,MAAMC,MAAOwO,eAAgB/L,KAAKd,MAAM4L,kBAM9S,kBAAC,IAAM7E,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,IAC9B,kBAAC,GAAD,CAAOpF,QAAQ,2BAA2BE,WAAW,EAAOH,UAAWpE,KAAKd,MAAMkF,UAAWE,WAAYtE,KAAKsE,YAC1G,gGACA,kBAAC,GAAD,Y,GA3GL/C,aAsHJgI,eAAWwF,ICxHpBpK,GAAKrJ,IAASsJ,YAEdmK,G,4MACF7P,MAAQ,CACJqB,YAAY,EACZiH,WAAW,EACXC,SAAU,GACVsE,eAAgB,I,EAUpB9K,QAAU,WACN3F,IAASoI,OAAOkE,UAChB,EAAKnI,SAAS,CAAEc,YAAY,IAC5B,EAAKjD,MAAMuK,QAAQC,KAAK,M,EAe5BmE,uBAAyB,WACrB,IAAMvR,EAAK,EAAK4C,MAAM4O,MAAMC,OAAOzR,GACnCiK,GAAGe,WAAW,WACbC,IAAIjL,GACJgL,WAAW,SACXsF,MACA9C,MAAK,SAAA+C,GACF,IAAMvF,EAAa,GACnBuF,EAASC,KAAK3Q,KAAI,SAAAoL,GACdI,QAAQC,IAAIL,EAAIjL,IAChBgL,EAAWoC,KAAKnC,MAEpBI,QAAQC,IAAIN,GACZ,EAAKjG,SAAS,CAAEsM,eAAgBrG,EAAY8B,WAAW,OAE1Dc,OAAM,SAAAC,GAAG,OAAIxC,QAAQC,IAAIuC,O,kEA3BT,IAAD,OAChBvI,KAAKkJ,uBAAyB5N,IAASoI,OAAOyF,oBAC1C,SAAAC,GACI,EAAK3J,SAAS,CAAEc,aAAc6I,EAAM3B,SAAUnM,IAASoI,OAAOyB,cAC1DiE,EAGA,EAAK6C,yBAFL,EAAKxM,SAAS,CAAEc,YAAY,EAAOiH,WAAW,EAAOpD,WAAW,S,+BA0B5E,IAAM1J,EAAKsF,KAAK1C,MAAM4O,MAAMC,OAAOzR,GACnC,OAAIsF,KAAKd,MAAMsI,UAEP,kBAAC,IAAMvB,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,EAAM/O,GAAIA,IACxC,kBAAC0L,GAAD,OAKJ,kBAAC,IAAMH,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,EAAM/O,GAAIA,IACvCsF,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAc,KACrCpG,KAAKd,MAAM6M,eAAeZ,OAAS,EAC1B,oCAAE,8FAAsE,iDAAuBnL,KAAKd,MAAM6M,eAAeZ,OAAjD,IAA+F,IAArCnL,KAAKd,MAAM6M,eAAeZ,OAAe,OAAS,QAA5G,wBAAiJ,kBAAC,GAAD,CAAe5N,MAAOyC,KAAK1C,MAAMC,MAAOwO,eAAgB/L,KAAKd,MAAM6M,sB,GAtFvSxK,aA6FJgI,eAAWwF,ICjGpBpK,GAAKrJ,KAASsJ,YAEdiG,G,4MACF3L,MAAQ,CACJqB,YAAY,EACZkH,SAAU,GACVsE,eAAgB,GAChBvE,WAAW,EACXsC,cAAe,EACfD,YAAa,G,EAsBjBoC,uBAAyB,WACrB,IAAMvR,EAAK,EAAK4C,MAAM4O,MAAMC,OAAOzR,GACnCiK,GAAGe,WAAW,WACbC,IAAIjL,GACJgL,WAAW,SACXsF,MACA9C,MAAK,SAAA+C,GACF,IAAMvF,EAAa,GACnBuF,EAASC,KAAK3Q,KAAI,SAAAoL,GACdI,QAAQC,IAAIL,EAAIjL,IAChBgL,EAAWoC,KAAKnC,MAEpBI,QAAQC,IAAIN,GACZ,EAAKjG,SAAS,CAAEsM,eAAgBrG,EAAY8B,WAAW,EAAOqC,YAAanE,EAAWyF,YAEzF7C,OAAM,SAAAC,GAAG,OAAIxC,QAAQC,IAAIuC,O,EAS9BtH,QAAU,WACN3F,KAASoI,OAAOkE,UAChB,EAAKnI,SAAS,CAAEc,YAAY,IAC5B,EAAKjD,MAAMuK,QAAQC,KAAK,M,EAG5BiC,SAAW,WACPhE,QAAQC,IAAI,4BACT,EAAK9G,MAAM4K,cAAgB,IAAM,EAAK5K,MAAM2K,YAC3C,EAAKpK,SAAS,CAAEqK,cAAe,EAAK5K,MAAM4K,cAAgB,IAE1D,EAAKrK,SAAS,CAAEqK,cAAe,K,EAIvCE,SAAW,WACyB,IAA7B,EAAK9K,MAAM4K,cACV,EAAKrK,SAAS,CAAEqK,cAAe,EAAK5K,MAAM2K,YAAc,IAExD,EAAKpK,SAAS,CAAEqK,cAAe,EAAK5K,MAAM4K,cAAgB,K,EAIlEI,SAAW,WACP,EAAKzK,SAAS,CAAEqK,cAAe,EAAK5K,MAAM2K,YAAc,K,EAG5DI,UAAY,WACR,EAAKxK,SAAS,CAAEqK,cAAe,K,kEAhEd,IAAD,OAChB9J,KAAKkJ,uBAAyB5N,KAASoI,OAAOyF,oBAC1C,SAAAC,GACI,EAAK3J,SAAS,CAAEc,aAAc6I,EAAM3B,SAAUnM,KAASoI,OAAOyB,cAC1DiE,EAGA,EAAK6C,yBAFL,EAAKxM,SAAS,CAAEc,YAAY,S,6CA0BrCP,KAAKkJ,wBACJlJ,KAAKkJ,2B,+BAoCT,IAAMxO,EAAKsF,KAAK1C,MAAM4O,MAAMC,OAAOzR,GACnC,OACI,kBAAC,IAAMuL,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,EAAM/O,GAAIA,IACvCsF,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAc,MACpCpG,KAAKd,MAAMsI,WAAaxH,KAAKd,MAAM6M,eAAeZ,OAAS,EAAI,kBAAC,GAAD,CAC7DlB,UAAWjK,KAAKiK,UAChBC,SAAUlK,KAAKkK,SACfF,SAAUhK,KAAKgK,SACfD,SAAU/J,KAAK+J,SACfD,cAAe9J,KAAKd,MAAM4K,cAC1BD,YAAa7J,KAAKd,MAAM2K,YACxBzE,KAAMpF,KAAKd,MAAM6M,eAAe/L,KAAKd,MAAM4K,eAAevC,OAAOnC,KACjEG,WAAYvF,KAAKd,MAAM6M,eAAe/L,KAAKd,MAAM4K,eAAevC,OAAOhC,WAAY7K,GAAIsF,KAAKd,MAAM6M,eAAe,GAAGrR,KAAS,KAC/HsF,KAAKd,MAAMsI,WAAkD,IAArCxH,KAAKd,MAAM6M,eAAeZ,OAAuE,KAAxD,kF,GA7G9D5J,aAmHNgI,eAAWsB,I,q/BCzH1B,IAAM/I,GAAYpE,IAAOC,IAAV,MAGE,SAAAL,GAAK,MACY,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAGlF,SAAAkB,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOjB,MAAQV,EAAU0B,EAAMC,MAAMA,OAAOnB,QAkBlF,SAAAkB,GAAK,MACC,UAA1BA,EAAMC,MAAMC,UAAwB5B,EAAU0B,EAAMC,MAAMA,OAAOnB,KAAOR,EAAU0B,EAAMC,MAAMA,OAAOjB,SAiBxF0S,G,uKAIP,IAAD,EACsBhP,KAAK1C,MAAM2R,QAA9B7Q,EADH,EACGA,KAAM8Q,EADT,EACSA,SACd,OACI,kBAAC,GAAD,KACI,kBAAC,IAAD,CAAMtQ,GAAE,oBAAeoB,KAAK1C,MAAM5C,KAC9B,yBAAKmD,UAAU,QACX,4BAAKO,GACL,yBAAKK,IAAKyQ,EAAUvQ,IAAKP,W,GAXRmD,a,kUCvCzC,IAAMO,GAAYpE,IAAOC,IAAV,KAM0B/B,EAAUoB,OAK7C2H,GAAKrJ,IAASsJ,YAEduK,G,4MACFjQ,MAAQ,CACJqB,YAAY,EACZkH,SAAU,GACV2H,SAAU,GACV5H,WAAW,EACXwE,WAAW,EACX5H,WAAW,G,EA0BfiL,YAAc,WACV1K,GAAGe,WAAW,WACbsF,MACA9C,MAAK,SAAA+C,GACF,IAAMvF,EAAa,GACnBuF,EAASC,KAAK3Q,KAAI,SAAAoL,GACdI,QAAQC,IAAIL,EAAIjL,IAChBgL,EAAWoC,KAAKnC,MAEpBI,QAAQC,IAAIN,GACZ,EAAKjG,SAAS,CAAE2P,SAAU1J,EAAY8B,WAAW,Q,EAUzDlD,WAAa,WACT,EAAK7E,SAAS,CAAE2E,WAAW,K,EAG/BnD,QAAU,WACN3F,IAASoI,OAAOkE,UAChB,EAAKnI,SAAS,CAAEc,YAAY,IAC5B,EAAKjD,MAAMuK,QAAQC,KAAK,M,kEA3CP,IAAD,OAChB9H,KAAKkJ,uBAAyB5N,IAASoI,OAAOyF,oBAC1C,SAAAC,GACI,EAAK3J,SAAS,CAAEc,aAAc6I,EAAM3B,SAAUnM,IAASoI,OAAOyB,cAE1DiE,IACArD,QAAQC,IAAI,sBACZ,EAAKvG,SAAS,CAAEc,YAAY,KAI5B,EAAK8O,mB,6CAoBdrP,KAAKkJ,wBACJlJ,KAAKkJ,2B,+BAeT,OAAIlJ,KAAKd,MAAMsI,UAEP,kBAAC,IAAMvB,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAACjD,GAAD,OAKJ,kBAAC,IAAMH,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEnErJ,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAc,KACtC,kBAAC,GAAD,KACCpG,KAAKd,MAAMsI,UAAY,KAAOxH,KAAKd,MAAMkQ,SAASjE,OAAS,EAAInL,KAAKd,MAAMkQ,SAAS7U,KAAI,SAAA+U,GAAG,OAAI,kBAAC,GAAD,CAAarI,IAAKqI,EAAI5U,GAAIuU,QAASK,EAAI/H,OAAQ7M,GAAI4U,EAAI5U,QAAU,sF,GA/F7J6G,aAuGRgI,eAAW4F,ICnHpBxK,GAAKrJ,IAASsJ,YAEd2K,G,4MACFrQ,MAAQ,CACJqB,YAAY,EACZkH,SAAU,GACVqD,eAAgB,GAChBtD,WAAW,EACXwE,WAAW,EACX5H,WAAW,G,EAyBf2G,kBAAoB,SAAA7F,GAChBa,QAAQC,IAAId,GACZP,GAAGe,WAAW,SACbC,IAAIT,GACJQ,WAAW,kBACXsF,MACA9C,MAAK,SAAA+C,GACF,IAAMvF,EAAa,GACnBuF,EAASC,KAAK3Q,KAAI,SAAAoL,GACdI,QAAQC,IAAIL,EAAIjL,IAChBgL,EAAWoC,KAAKnC,MAEpBI,QAAQC,IAAIN,GACZ,EAAKjG,SAAS,CAAEqL,eAAgBpF,EAAY8B,WAAW,OAE1Dc,OAAM,SAAAC,GAAG,OAAIxC,QAAQC,IAAIuC,O,EAG9BqD,WAAa,SAAAlR,GACT,IAAMwK,EAAM,EAAKhG,MAAMuI,SAASvC,IAChCP,GAAGe,WAAW,SACbC,IAAIT,GACJQ,WAAW,kBACXC,IAAIjL,GACJ8U,SACD,EAAKzE,kBAAkB7F,I,EAS3BZ,WAAa,WACT,EAAK7E,SAAS,CAAE2E,WAAW,K,EAG/BnD,QAAU,WACN3F,IAASoI,OAAOkE,UAChB,EAAKnI,SAAS,CAAEc,YAAY,IAC5B,EAAKjD,MAAMuK,QAAQC,KAAK,M,kEAxDP,IAAD,OAChB9H,KAAKkJ,uBAAyB5N,IAASoI,OAAOyF,oBAC1C,SAAAC,GACI,EAAK3J,SAAS,CAAEc,aAAc6I,EAAM3B,SAAUnM,IAASoI,OAAOyB,cAE1DiE,EAKA,EAAK2B,kBAAkB,EAAK7L,MAAMuI,SAASvC,MAJ3Ca,QAAQC,IAAI,sBACZ,EAAKvG,SAAS,CAAEc,YAAY,EAAOiH,WAAW,EAAOpD,WAAW,U,6CAqCzEpE,KAAKkJ,wBACJlJ,KAAKkJ,2B,+BAeT,OAAIlJ,KAAKd,MAAMsI,UAEP,kBAAC,IAAMvB,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,IAC9B,kBAACrD,GAAD,OAIJpG,KAAKd,MAAMqB,WAEP,kBAAC,IAAM0F,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAoBI,UAAU,IAC7BzJ,KAAKd,MAAMsI,UAAY,kBAACpB,GAAD,MAAc,KACrCpG,KAAKd,MAAM4L,eAAeK,OAAS,EAAI,kBAAC,GAAD,CAAqBS,WAAY5L,KAAK4L,WAAYD,YAAY,EAAMjG,WAAY1F,KAAKd,MAAM4L,iBAAqB,oEAKhK,kBAAC,IAAM7E,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,CACI9E,gBAAiBnB,KAAK1C,MAAM6D,gBAC5B3D,UAAWwC,KAAK1C,MAAME,UACtByD,QAASjB,KAAKiB,QACdtB,YAAaK,KAAK1C,MAAMqC,YACxBQ,aAAcH,KAAK1C,MAAMC,MACzBgD,WAAYP,KAAKd,MAAMqB,WACvBC,UAAWR,KAAKd,MAAMuI,SAAWzH,KAAKd,MAAMuI,SAAS4B,SAAW,KAEpE,kBAAC,GAAD,CAAOhF,QAAQ,2BAA2BE,WAAW,EAAOH,UAAWpE,KAAKd,MAAMkF,UAAWE,WAAYtE,KAAKsE,YAC1G,4FACA,kBAAC,GAAD,Y,GAhIC/C,aA4IVgI,eAAWgG,I,wuBCjJ1B,IAAME,GAAa/R,IAAOC,IAAV,MACQ,SAAAL,GAAK,OACzB1B,EAAU0B,EAAMC,MAAMA,OAAOtB,WAQ3ByT,GAAmBhS,IAAOC,IAAV,MACE,SAAAL,GAAK,OACzB1B,EAAU0B,EAAMC,MAAMA,OAAOrB,aAS3ByT,GAAkBjS,IAAOC,IAAV,MACG,SAAAL,GAAK,OACzB1B,EAAU0B,EAAMC,MAAMA,OAAOpB,YASZyT,G,uKAUb,OACI,kBAAC,IAAM3J,SAAP,KACI,kBAACwJ,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACI,kBAAC,GAAD,CAAOvL,WAAW,EAAMG,WAAW,EAAOF,QAAQ,+BAC9C,kBAAC,GAAD,Y,GAhBY9C,aCqFrBsO,G,4MA9Gb3Q,MAAQ,CACN1B,UAAWsS,IAAQC,QAAQ,aAAeD,IAAQC,QAAQ,aAAe,QACzExS,MAAOuS,IAAQC,QAAQ,SAAWD,IAAQC,QAAQ,SAAW,U,EAG/D5O,gBAAkB,WACY,UAAzB,EAAKjC,MAAM1B,WACZ,EAAKiC,SAAS,CAAEjC,UAAW,SAC3BsS,IAAQE,QAAQ,YAAa,UAE7B,EAAKvQ,SAAS,CAAEjC,UAAW,UAC3BsS,IAAQE,QAAQ,YAAa,W,EAIjCrQ,YAAc,SAACpC,GACb,EAAKkC,SAAS,CAAElC,UAChBuS,IAAQE,QAAQ,QAASzS,I,EAG3B0S,eAAiB,WACf,IAAMC,EAAiBJ,IAAQC,QAAQ,aACvC,QAAOG,GAAiBC,KAAKC,MAAMF,I,uDAIjC,OACE,kBAAC,IAAD,CAAQG,SAAS,mBACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAe9S,MAAO,CAAEC,UAAWwC,KAAKd,MAAM1B,UAAWD,MAAOyC,KAAKd,MAAM3B,QACzE,kBAAC,IAAD,CAAO+C,OAAK,EAACgQ,KAAK,KAChB,kBAAC,GAAD,CACEnP,gBAAiBnB,KAAKmB,gBACtB3D,UAAWwC,KAAKd,MAAM1B,UACtBmC,YAAaK,KAAKL,YAClBpC,MAAOyC,KAAKd,MAAM3B,SAGtB,kBAAC,IAAD,CAAO+S,KAAK,eACV,kBAAC,GAAD,CACEnP,gBAAiBnB,KAAKmB,gBACtB3D,UAAWwC,KAAKd,MAAM1B,UACtBmC,YAAaK,KAAKL,YAClBpC,MAAOyC,KAAKd,MAAM3B,SAGtB,kBAAC,IAAD,CAAO+S,KAAK,mBACV,kBAAC,GAAD,CACEnP,gBAAiBnB,KAAKmB,gBACtB3D,UAAWwC,KAAKd,MAAM1B,UACtBmC,YAAaK,KAAKL,YAClBpC,MAAOyC,KAAKd,MAAM3B,SAGtB,kBAAC,IAAD,CAAO+S,KAAK,WACV,kBAAC,GAAD,CACEnP,gBAAiBnB,KAAKmB,gBACtB3D,UAAWwC,KAAKd,MAAM1B,UACtBmC,YAAaK,KAAKL,YAClBpC,MAAOyC,KAAKd,MAAM3B,SAGtB,kBAAC,IAAD,CAAO+S,KAAK,SACV,kBAAC,GAAD,CACEnP,gBAAiBnB,KAAKmB,gBACtB3D,UAAWwC,KAAKd,MAAM1B,UACtBmC,YAAaK,KAAKL,YAClBpC,MAAOyC,KAAKd,MAAM3B,SAGtB,kBAAC,IAAD,CAAO+C,OAAK,EAACgQ,KAAK,aAChB,kBAAC,GAAD,CACEnP,gBAAiBnB,KAAKmB,gBACtB3D,UAAWwC,KAAKd,MAAM1B,UACtBmC,YAAaK,KAAKL,YAClBpC,MAAOyC,KAAKd,MAAM3B,SAGtB,kBAAC,IAAD,CAAO+C,OAAK,EAACgQ,KAAK,iBAChB,kBAAC,GAAD,CACEnP,gBAAiBnB,KAAKmB,gBACtB3D,UAAWwC,KAAKd,MAAM1B,UACtBmC,YAAaK,KAAKL,YAClBpC,MAAOyC,KAAKd,MAAM3B,SAGtB,kBAAC,IAAD,CAAO+C,OAAK,EAACgQ,KAAK,sBAChB,kBAACC,GAAD,CACEpP,gBAAiBnB,KAAKmB,gBACtB3D,UAAWwC,KAAKd,MAAM1B,UACtBmC,YAAaK,KAAKL,YAClBpC,MAAOyC,KAAKd,MAAM3B,SAGtB,kBAAC,IAAD,CAAO+C,OAAK,EAACgQ,KAAK,wBAChB,kBAACE,GAAD,CACErP,gBAAiBnB,KAAKmB,gBACtB3D,UAAWwC,KAAKd,MAAM1B,UACtBmC,YAAaK,KAAKL,YAClBpC,MAAOyC,KAAKd,MAAM3B,SAGtB,kBAAC,EAAD,a,GAvGEyG,IAAMzC,WCHJkP,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1E,MACvB,2DCXN2E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFjR,SAASkR,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjJ,MAAK,SAAAkJ,GACJA,EAAaC,gBAEd/I,OAAM,SAAAgJ,GACLvL,QAAQuL,MAAMA,EAAMtE,c","file":"static/js/main.dad0ab9e.chunk.js","sourcesContent":["var map = {\n\t\"./inn.svg\": 65,\n\t\"./mataura.svg\": 66,\n\t\"./mohaka.svg\": 67,\n\t\"./ngaruroro.svg\": 68,\n\t\"./taieri.svg\": 69\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 32;","module.exports = __webpack_public_path__ + \"static/media/inn.64bd2963.svg\";","module.exports = __webpack_public_path__ + \"static/media/mataura.4afff881.svg\";","module.exports = __webpack_public_path__ + \"static/media/mohaka.c27f4bb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/ngaruroro.8a341e3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/taieri.cf3c80a0.svg\";","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\r\n});\r\n","export const variables = {\r\n    //Color Variables\r\n    primaryDark: \"#161616\",\r\n    primaryLight: \"#E6E6E6\",\r\n    primaryWhite: \"#fdfdfe\",\r\n\r\n    //Theme color varients\r\n    inn: {\r\n        primary: \"#F45B0F\",\r\n        secondary: \"#FFD726\",\r\n        tertiary: \"#048ECB\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#E6E6E6\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    mataura: {\r\n        primary: \"#2C99B0\",\r\n        secondary: \"#F6B800\",\r\n        tertiary: \"#F83C1E\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#fdfdfe\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    mohaka: {\r\n        primary: \"#1A9E78\",\r\n        secondary: \"#F4B943\",\r\n        tertiary: \"#D55151\",\r\n        dark: \"#242C2D\",\r\n        light: \"#EADDCD\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#fdfdfe\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    ngaruroro: {\r\n        primary: \"#5359A6\",\r\n        secondary: \"#37ABB7\", \r\n        tertiary: \"#C4DD76\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#fdfdfe\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n    taieri: {\r\n        primary: \"#4484AB\",\r\n        secondary: \"#44AB96\",\r\n        tertiary: \"#E53855\",\r\n        dark: \"#161616\",\r\n        light: \"#E6E6E6\", \r\n        white: \"#fdfdfe\",\r\n        backgroundLight: \"#E6E6E6\",\r\n        backgroundDark: \"#161616\"\r\n    },\r\n\r\n    //Typography Variables\r\n    primaryFont: \"'Raleway', sans-serif\",\r\n    headingFont: \"'Playfair Display', serif\",\r\n\r\n    //Other Variables\r\n    boxShadow: \"2px 2px 5px rgba(0,0,0,0.2)\",\r\n\r\n    //Media Query Breakpoints\r\n    small: \"575.98px\", \r\n    medium: \"767.98px\",\r\n    large: \"991.98px\",\r\n    desktop: \"1199.98px\"\r\n}","import { createGlobalStyle } from 'styled-components';\r\nimport { variables } from './variables';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n}\r\n*, *:before, *:after {\r\n  -webkit-box-sizing: inherit;\r\n  -moz-box-sizing: inherit;\r\n  box-sizing: inherit;\r\n}\r\nbody {\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    font-family: ${variables.primaryFont};\r\n    text-align: center;\r\n    overflow-x: hidden;\r\n}\r\nh1, h2, h3, h4, h5, h6 {\r\n    font-family: ${variables.headingFont};\r\n    font-weight: 400;\r\n    margin-bottom: 3rem;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Item = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 0rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .colors {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\n\r\nexport default function ThemeItem(props) {\r\n    return (\r\n        <Item>\r\n           <div className=\"colors\">\r\n               <div style={{ height: \"20px\", width: \"20px\", borderRadius: \"50%\", marginRight: \"5px\", backgroundColor: props.primary }}></div>\r\n               <div style={{ height: \"20px\", width: \"20px\", borderRadius: \"50%\", marginRight: \"5px\", backgroundColor: props.secondary }}></div>\r\n               <div style={{ height: \"20px\", width: \"20px\", borderRadius: \"50%\", backgroundColor: props.tertiary }}></div>\r\n           </div>\r\n           <div className=\"name\">\r\n               <p>{props.name}</p>\r\n           </div> \r\n        </Item>\r\n    )\r\n}\r\n\r\nThemeItem.propTypes = {\r\n    name: PropTypes.string,\r\n    primary: PropTypes.string,\r\n    secondary: PropTypes.string,\r\n    tertiary: PropTypes.string,\r\n\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { variables } from './styles/variables';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst StyledImage = styled.img`\r\n    width: 90%;\r\n    max-width: 250px;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    top: 0;\r\n    left: 0;\r\n    position: absolute;\r\n    \r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n    a {\r\n        text-decoration: none;\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n    }\r\n    .overlay {\r\n        width: 80%;\r\n        max-width: 500px;\r\n        height: 100%;\r\n        background: linear-gradient(90deg, rgba(0,0,0,0.3), rgba(0,0,0,0.3), rgba(0,0,0,0));\r\n        z-index: 80;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n\r\n    }\r\n    h1 {\r\n        font-size: 1.5rem;\r\n        color: ${props => variables[props.theme.theme].white};\r\n        z-index: 100;\r\n        padding: 0;\r\n        margin: 0rem 3rem;\r\n        text-transform: uppercase;\r\n    }\r\n    @media only screen and (max-width: ${variables.small}) {\r\n        display: none;\r\n\r\n    }\r\n`;\r\nexport default function Logo(props) {\r\n    const { theme } = props\r\n    return (\r\n        <LogoContainer>\r\n            <StyledImage \r\n                src={require(`../images/${theme}.svg`)} \r\n                alt=\"logo\"\r\n            />\r\n            <div className=\"overlay\"></div>\r\n            <Link to=\"/\">\r\n                <h1>Dictionary App</h1>\r\n            </Link>\r\n        </LogoContainer>\r\n    )\r\n}\r\n\r\nLogo.propTypes = {\r\n    theme: PropTypes.string\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport ThemeItem from './ThemeItem';\r\nimport Logo from '../components/Logo';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAdjust, faBars, faArrowRight, faSignOutAlt, faPalette } from '@fortawesome/free-solid-svg-icons'\r\nimport { variables } from '../components/styles/variables';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NavBar = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    box-shadow: ${variables.boxShadow};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0rem 3rem 0rem 0rem;\r\n    align-items: center;\r\n    background: ${props => variables[props.theme.theme].primary};\r\n    .flexItem {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .drawer {\r\n        right: 0px;\r\n        background-color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].backgroundLight };\r\n        position: absolute;\r\n        top: 50px;\r\n        width: 300px;\r\n        z-index: 11;\r\n        border-left: 2px solid gray;\r\n        border-bottom: solid 2px gray;\r\n        transition: 350ms ease-in-out;\r\n        padding-bottom: 5rem;\r\n        height: calc(100vh - 50px);\r\n        overflow: auto;\r\n    }\r\n    .open {\r\n        transform: translateX(300px);\r\n    }\r\n    .selected {\r\n        background-color: lightgrey;\r\n    }\r\n    ul {\r\n        width: 100%;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    .icon {\r\n        cursor: pointer;\r\n    }\r\n    li {\r\n        list-style: none;\r\n        width: 100%;\r\n        padding: 0.5rem;\r\n        font-size: 1rem;\r\n        transition: 200ms ease-in;\r\n\r\n        &:hover {\r\n            background: lightgray;\r\n        }\r\n    }\r\n    .avatar img {\r\n        height: 35px;\r\n        width: 35px;\r\n        margin-right: 1rem;\r\n        box-shadow: 0px 0px 2px rgba(0,0,0,0.8);\r\n        border-radius: 50%;\r\n    }\r\n    .link {\r\n        text-decoration: none;\r\n        text-transform: uppercase;\r\n        color: ${props => variables[props.theme.theme].white};\r\n        margin: 0rem 1rem;\r\n        transition: 200ms linear;\r\n        padding-bottom: 0.25rem;\r\n        &:hover {\r\n            border-bottom: 5px solid rgba(0, 0,0,0.1);\r\n\r\n        }\r\n    }\r\n    .navLinks {\r\n        margin: 0rem 2rem;\r\n        \r\n    }\r\n    @media only screen and (max-width: ${variables.large}) {\r\n        .navLinks {\r\n            display: none;\r\n        }\r\n    }\r\n    @media only screen and (max-width: ${variables.small}) {\r\n        justify-content: flex-end;\r\n        \r\n    }\r\n    \r\n`;\r\n\r\nconst LoggedIn = styled.div`\r\n    padding: 0rem 2rem 0rem 1rem;\r\n    text-align: left;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst NavSection = styled.nav`\r\n    text-align: left;\r\n    padding: 0rem 1rem 0rem 0rem;\r\n    .signOut {\r\n        display: block;\r\n        padding: 0.5rem;\r\n        font-size: 1rem;\r\n        background: transparent;\r\n        border: none;\r\n        font-family: ${variables.primaryFont};\r\n        transition: 200ms ease-in;\r\n        width: 100%;\r\n        text-align: left;\r\n        cursor: pointer;\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        &:hover {\r\n            background: lightgray;\r\n        }\r\n    }\r\n    h3 {\r\n        margin: 1rem 1rem 0rem 1rem;\r\n        padding: 0rem;\r\n    }\r\n    a {\r\n        font-size: 1rem;\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        text-decoration: none;\r\n        display: block;\r\n        padding: 0.5rem;\r\n        transition: 200ms ease-in;\r\n        &:hover {\r\n            background: lightgray;\r\n        }\r\n\r\n    }\r\n    p{\r\n        font-size: 1rem;\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        padding: 0.5rem;\r\n        margin: 0;\r\n        transition: 200ms ease-in;\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: lightgray;\r\n        }\r\n    }\r\n   \r\n`\r\n\r\nexport default class Navigation extends Component {\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        signout: PropTypes.func,\r\n        currentTheme: PropTypes.string,\r\n        isSignedIn: PropTypes.bool,\r\n        userImage: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        themeValue: '',\r\n        drawerOpen: false,\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('mousedown', this.handleClick, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick, false);\r\n    }\r\n\r\n    // This closes the navigation drawer when a user clicks outside of the drawer\r\n    handleClick = (e) => {\r\n        if(!this.node.contains(e.target)) {\r\n            this.setState({ drawerOpen: false });\r\n        }\r\n    }\r\n\r\n    setTheme = (theme) => {\r\n        this.setState({ themeValue: theme });\r\n        this.props.toggleTheme(theme)\r\n    }\r\n\r\n    toggleDrawer = () => {\r\n        this.setState({ drawerOpen: !this.state.drawerOpen });\r\n    }\r\n\r\n    closeDrawer = () => {\r\n        this.setState({ drawerOpen: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavBar ref={node => this.node = node}>\r\n                <Logo theme={this.props.currentTheme} />\r\n                <div className=\"flexItem\">\r\n                    <div className=\"navLinks\">\r\n                        <NavLink \r\n                            className=\"link\"\r\n                            activeStyle={{ borderBottom: \"5px solid rgba(0, 0,0,0.1)\" }}\r\n                            exact\r\n                            to=\"/\">\r\n                            Search\r\n                        </NavLink>\r\n                        <NavLink \r\n                            className=\"link\"\r\n                            activeStyle={{ borderBottom: \"5px solid rgba(0, 0,0,0.1)\" }} \r\n                            exact\r\n                            to=\"/collection\">\r\n                            Your Collection\r\n                        </NavLink>\r\n                        <NavLink \r\n                            className=\"link\"\r\n                            activeStyle={{ borderBottom: \"5px solid rgba(0, 0,0,0.1)\" }} \r\n                            exact\r\n                            to=\"/practice\">\r\n                            Practice\r\n                        </NavLink>\r\n                        {this.props.isSignedIn ? null : <NavLink \r\n                            className=\"link\"\r\n                            activeStyle={{ borderBottom: \"5px solid rgba(0, 0,0,0.1)\" }}\r\n                            exact\r\n                            to=\"/create-account\">\r\n                            Create Account\r\n                        </NavLink>}\r\n                    </div>\r\n                    <div className=\"avatar\">\r\n                        {this.props.isSignedIn && this.props.userImage ? <img src={this.props.userImage} alt={`${this.props.userName}' avatar`} /> : null}\r\n                    </div>\r\n                    <FontAwesomeIcon \r\n                        icon={ faBars } \r\n                        color={ variables.primaryWhite } \r\n                        className=\"icon\"\r\n                        onClick={this.toggleDrawer} />\r\n                    <div \r\n                        className={this.state.drawerOpen ? \"drawer\" : \"open drawer\"}>\r\n                        <LoggedIn>\r\n                            <FontAwesomeIcon \r\n                                onClick={this.closeDrawer} \r\n                                className=\"icon\"\r\n                                style={{ margin: \"1rem\", fontSize: \"1.5rem\" }} \r\n                                icon={ faArrowRight } \r\n                                color={this.props.nightMode === \"light\" ? variables.primaryWhite : variables.primaryDark} />\r\n                                <p>{this.props.isSignedIn ? \"You are logged in\" : \"You are not logged in\"}</p>\r\n                        </LoggedIn>\r\n                        <hr/>\r\n                        <NavSection>\r\n                            <h3>Navigation</h3>\r\n                            <hr/>\r\n                            <Link to=\"/\">Search</Link>\r\n                            <Link to=\"/collection\">Your Collection</Link>\r\n                            <Link to=\"/practice\">Practice</Link>\r\n                            {this.props.isSignedIn ? null : <Link to=\"/create-account\">Sign in / Create Account</Link>}\r\n                        </NavSection>\r\n                        <NavSection>\r\n                            <h3>Account and Settings</h3>\r\n                            <hr/>\r\n                            <button \r\n                                onClick={this.props.signout} \r\n                                className=\"signOut\"><FontAwesomeIcon color={this.props.nightMode === \"light\" ? variables.primaryWhite : variables.primaryDark} icon={faSignOutAlt}/> Sign Out</button>\r\n                            <p \r\n                                className=\"navItem\"\r\n                                onClick={this.props.toggleNightMode}>\r\n                                <FontAwesomeIcon \r\n                                    color={this.props.nightMode === \"light\" ? variables.primaryWhite : variables.primaryDark} \r\n                                    icon={faAdjust}/> {this.props.nightMode === \"light\" ? \"Dark\" : \"Light\"} Mode\r\n                            </p>\r\n                            <p>\r\n                                <FontAwesomeIcon \r\n                                    color={this.props.nightMode === \"light\" ? variables.primaryWhite : variables.primaryDark} \r\n                                    icon={faPalette} /> Themes\r\n                            </p>\r\n                            <ul>\r\n                                <li \r\n                                    className={this.props.currentTheme === \"mohaka\" ? \"selected\" : null}\r\n                                    onClick={this.setTheme.bind(this, \"mohaka\")}>\r\n                                    <ThemeItem \r\n                                        name=\"Mohaka\" \r\n                                        primary={variables.mohaka.primary}\r\n                                        secondary={variables.mohaka.secondary}\r\n                                        tertiary={variables.mohaka.tertiary}\r\n                                    />        \r\n                                </li>\r\n                                <li \r\n                                    className={this.props.currentTheme === \"inn\" ? \"selected\" : null}\r\n                                    onClick={this.setTheme.bind(this, \"inn\")}>\r\n                                <ThemeItem \r\n                                        name=\"Inn\" \r\n                                        primary={variables.inn.primary}\r\n                                        secondary={variables.inn.secondary}\r\n                                        tertiary={variables.inn.tertiary}\r\n                                    />  \r\n                                </li>\r\n                                <li \r\n                                    className={this.props.currentTheme === \"mataura\" ? \"selected\" : null}\r\n                                    onClick={this.setTheme.bind(this, \"mataura\")}>\r\n                                    <ThemeItem \r\n                                        name=\"Mataura\" \r\n                                        primary={variables.mataura.primary}\r\n                                        secondary={variables.mataura.secondary}\r\n                                        tertiary={variables.mataura.tertiary}\r\n                                    />  \r\n                                </li>\r\n                                <li \r\n                                    className={this.props.currentTheme === \"ngaruroro\" ? \"selected\" : null}\r\n                                    onClick={this.setTheme.bind(this, \"ngaruroro\")}>\r\n                                    <ThemeItem \r\n                                        name=\"Ngaruroro\" \r\n                                        primary={variables.ngaruroro.primary}\r\n                                        secondary={variables.ngaruroro.secondary}\r\n                                        tertiary={variables.ngaruroro.tertiary}\r\n                                    />  \r\n                                </li>\r\n                                <li \r\n                                    className={this.props.currentTheme === \"taieri\" ? \"selected\" : null}\r\n                                    onClick={this.setTheme.bind(this, \"taieri\")}>\r\n                                    <ThemeItem \r\n                                        name=\"Taieri\" \r\n                                        primary={variables.taieri.primary}\r\n                                        secondary={variables.taieri.secondary}\r\n                                        tertiary={variables.taieri.tertiary}\r\n                                    />  \r\n                                </li>\r\n                            </ul>\r\n                        </NavSection>\r\n                    </div>\r\n                </div>\r\n            </NavBar>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { variables } from './styles/variables';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst InverseButton = styled.button`\r\n    font-size: 1rem;\r\n    height: 35px;\r\n    width: 100px;\r\n    font-family: ${variables.primaryFont};\r\n    color: ${props => variables[props.theme.theme].dark};\r\n    background: ${props => variables[props.theme.theme].white};\r\n    border-radius: 0.5rem;\r\n    transition: 300ms ease-in-out;\r\n    border: solid 2px ${props => variables[props.theme.theme].primary};\r\n    &:hover {\r\n        background: ${props => variables[props.theme.theme].primary};\r\n        color: ${props => variables[props.theme.theme].white};\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    font-size: 1rem;\r\n    height: 35px;\r\n    width: 100px;\r\n    font-family: ${variables.primaryFont};\r\n    color: ${props => variables[props.theme.theme].white};\r\n    background: ${props => variables[props.theme.theme].primary};\r\n    border-radius: 0.5rem;\r\n    transition: 300ms ease-in-out;\r\n    border: solid 2px ${props => variables[props.theme.theme].primary};\r\n    &:hover {\r\n        background: transparent;\r\n        color: ${props => \r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    }\r\n`;\r\n\r\nexport default function Button(props) {\r\n    if (props.inverse) {\r\n        return (\r\n            <InverseButton>\r\n                {props.children}\r\n            </InverseButton>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledButton onClick={props.handleClick ? props.handleClick.bind(this) : null }>\r\n                {props.children}\r\n            </StyledButton>\r\n        )\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    inverse: PropTypes.bool,\r\n    handleClick: PropTypes.func,\r\n}\r\n","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const Container = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    max-width: 500px;\r\n    padding: 0;\r\n    margin: 0;\r\n    justify-content: center;\r\n    display: flex;\r\n    min-width: 300px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n    position: ${props => props.searched ? \"absolute\" : \"relative\"};\r\n    top: ${props => props.searched ? \"50px\" : \"0px\"};\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].backgroundLight : variables[props.theme.theme].backgroundDark };\r\n    min-width: ${props => props.searched ? \"100%\" : \"300px\"};\r\n    max-width: ${props => props.searched ? \"100%\" : \"500px\"};\r\n    min-height: ${props => props.searched ? \"50px\" : \"300px\"};\r\n    max-height: ${props => props.searched ? \"50px\" : \"300px\"};\r\n    width: 90%;\r\n    height: 90%;\r\n    border-radius: ${props => props.searched ? \"0rem\" : \"1rem\"};;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: 500ms linear;\r\n    box-shadow: ${variables.boxShadow};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-radius: ${props => props.searched ? \"0rem\" : \"1rem\"};;\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n    z-index: 10;\r\n    display: flex;\r\n    width: 80%;\r\n    min-width: ${props => props.searched ? \"75px\" : \"250px\"};;\r\n    border-radius: 1rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: ${props => props.searched ? \"50px\" : \"200px\"};\r\n    max-height: ${props => props.searched ? \"50px\" : \"200px\"};\r\n    background-color: ${props =>\r\n    props.searched ? \"none\" : variables[props.theme.theme].white };\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    margin-right: 0.5rem;\r\n    height: 35px;\r\n    font-family: ${variables.primaryFont};\r\n    padding-left: 0.5rem;\r\n    width: 200px;\r\n    color: ${props => variables[props.theme.theme].dark};\r\n    background: ${props => variables[props.theme.theme].white};\r\n    border-radius: 0.5rem;\r\n    border: solid 2px ${props => variables[props.theme.theme].primary};\r\n\r\n`;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport { SearchContainer, Image, StyledForm, StyledInput, Container } from './styles/components/searchBar';\r\n\r\n\r\n\r\nexport default class SearchBar extends Component {\r\n    state = {\r\n        query: '',\r\n        isWordSearched: false,\r\n    }\r\n\r\n    static propTypes = {\r\n        handleSearch: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ query: e.target.value });\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleSearch(this.state.query);\r\n        this.setState({ query: '', isWordSearched: true })\r\n    }\r\n\r\n    render() {\r\n        const { theme } = this.props;\r\n        return (\r\n            <Container>\r\n                <SearchContainer searched={this.state.isWordSearched} >\r\n                    <Image \r\n                        src={require(`../images/${theme}.svg`)} \r\n                        alt=\"\" \r\n                        searched={this.state.isWordSearched}    \r\n                        />\r\n                    <StyledForm \r\n                        searched={this.state.isWordSearched}\r\n                        onSubmit={this.submitForm}>\r\n                        <StyledInput \r\n                            name=\"query\" \r\n                            type=\"text\" \r\n                            placeholder=\"Search for a word\"\r\n                            value={this.state.query}\r\n                            onChange={this.handleInputChange}/>\r\n                        <Button inverse={true} type=\"submit\">Search</Button>\r\n                    </StyledForm>\r\n                </SearchContainer>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { variables } from '../components/styles/variables';\r\n\r\nconst StyledHeader = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100px;\r\n  background: ${props => variables[props.theme.theme].secondary};\r\n  box-shadow: ${variables.boxShadow};\r\n  &:after {\r\n  position: absolute;\r\n  border-style: solid;\r\n  border-width: 0 0 100px 500px;\r\n  border-color: transparent transparent rgba(255, 255, 255, 0.3) transparent;\r\n  right: 0;\r\n  top: 0;\r\n  content: \"\";\r\n  }\r\n  &:before  {\r\n  position: absolute;\r\n  border-style: solid;\r\n  border-width: 50px 0 0 70px;\r\n  border-color: transparent transparent transparent rgba(255, 255, 255, 0.3);\r\n  left: 0;\r\n  bottom: 0;\r\n  content: \"\";\r\n  }\r\n`\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <StyledHeader />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\n\r\nexport default class Home extends React.Component {\r\n    uiConfig = {\r\n        // Popup signin flow rather than redirect flow.\r\n        signInFlow: 'popup',\r\n        // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n        signInSuccessUrl: '/dictionaryApp#/',\r\n        // We will display Google and Facebook as auth providers.\r\n        signInOptions: [\r\n          firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          firebase.auth.GithubAuthProvider.PROVIDER_ID\r\n        ]\r\n      };\r\n\r\n      render() {\r\n          return <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\r\n      }\r\n}","import styled from 'styled-components';\r\nimport { variables } from '../variables';\r\n\r\nexport const ModalContainer = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%,-50%);\r\n    max-height: 500px;\r\n    max-width: 700px;\r\n    width: 90%;\r\n    height: 90%;\r\n    border-radius: 1rem;\r\n    border: ${props => \r\n    props.theme.nightMode === \"light\" ? `solid 2px ${variables[props.theme.theme].backgroundDark}` : `solid 2px ${variables[props.theme.theme].backgroundLight}` };\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0px 0px 15px rgba(0,0,0,0.4);\r\n    z-index: 10;\r\n    .icon {\r\n        position: absolute;\r\n        top: 1rem;\r\n        right: 1rem;\r\n        cursor: pointer;\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-radius: 1rem;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    height: 90%;\r\n    width: 90%;\r\n    border-radius: 1rem;\r\n    position: fixed;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0rem 0.5rem;\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.4);\r\n    z-index: 10;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { ModalContainer, ContentContainer } from './styles/components/modal';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Modal extends React.Component{\r\n    static propTypes = {\r\n        heading: PropTypes.string,\r\n        showModal: PropTypes.bool,\r\n        closeModal: PropTypes.func,\r\n        showClose: PropTypes.bool,\r\n    }\r\n\r\n    render() {\r\n        const { showModal, heading, closeModal, showClose } = this.props;\r\n        if (showModal) {\r\n            return(\r\n                <ModalContainer>\r\n                    <ContentContainer>\r\n                        <div>\r\n                            {showClose ? <FontAwesomeIcon className=\"icon\" data-dismiss=\"modal\" aria-label=\"Close\" icon={faTimesCircle} onClick={closeModal} /> : null }\r\n                            <h1>{heading}</h1>\r\n                            {this.props.children}\r\n                        </div>\r\n                    </ContentContainer>\r\n                </ModalContainer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\nimport Modal from '../components/Modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBookmark } from '@fortawesome/free-solid-svg-icons'\r\nimport { variables } from './styles/variables';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst DefinitionContainer = styled.div`\r\n    width: 100%;\r\n    max-width: 500px;\r\n    min-width: 250px;\r\n    height: 100%;\r\n    text-align: left;\r\n    position: relative;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].light };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].light : variables[props.theme.theme].dark };\r\n    padding: 1.5rem;\r\n    border: ${props =>\r\n    props.theme.nightMode === \"light\" ? `solid 1px ${variables[props.theme.theme].light}` : `solid 1px ${variables[props.theme.theme].dark}` };\r\n    margin: 1rem;\r\n    border-radius: 1rem;\r\n    transition: 200ms ease-in-out;\r\n    & img {\r\n        position: absolute;\r\n        top: 1.5rem;\r\n        right: 4.5rem;\r\n        height: 75px;\r\n        width: 75px;\r\n        border-radius: 50%;\r\n        border: ${props =>\r\n        props.theme.nightMode === \"light\" ? `solid 1px ${variables[props.theme.theme].light}` : `solid 1px ${variables[props.theme.theme].dark}` };\r\n    }\r\n    & h2 {\r\n        font-size: 2rem;\r\n        padding: 0rem;\r\n        margin: 0rem;\r\n    }\r\n    & hr {\r\n        text-align: center;\r\n    }\r\n    & sup {\r\n        font-size: 0.8rem;\r\n        color: grey;\r\n        margin-left: 0.5rem;\r\n    }\r\n    & .example {\r\n        font-style: italic;\r\n        font-size: 0.9rem;\r\n    }\r\n    &:hover {\r\n        box-shadow: 2px 2px 5px rgba(0,0,0,0.5);\r\n    }\r\n    .cardHeading {\r\n        min-height: 80px;\r\n    }\r\n    .grid {\r\n        display: grid;\r\n        grid-template-columns: 1fr 75px;\r\n        grid-gap: 1rem;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    button {\r\n        background: transparent;\r\n        border: none;\r\n        position: absolute;\r\n        top: 1rem;\r\n        right: 1rem;\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark }; \r\n        transition: 200ms ease-in-out;\r\n        &:hover {\r\n            transform: scale(1.3);\r\n        }\r\n        .icon {\r\n            font-size: 2rem;\r\n            color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark }; \r\n        }\r\n\r\n    }\r\n`;\r\n\r\nexport default class DefinitionCard extends Component {\r\n    state = {\r\n        showErrorModal: false,\r\n        showCOnfirmationModal: false,\r\n    }\r\n\r\n    static propTypes = {\r\n        def: PropTypes.object,\r\n        word: PropTypes.string,\r\n        pronunciation: PropTypes.string,\r\n        isSignedIn: PropTypes.bool,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    addToCollection = () => {\r\n        if(this.props.isSignedIn) {\r\n            const uid = firebase.auth().currentUser.uid;\r\n            const { word, pronunciation } = this.props;\r\n            const { type, definition, example, image_url } = this.props.def;\r\n                db.collection('users')\r\n                .doc(uid)\r\n                .collection(\"wordCollection\")\r\n                    .add({\r\n                        word,\r\n                        pronunciation,\r\n                        type,\r\n                        definition,\r\n                        example, \r\n                        image_url,\r\n                        dateAdded: new Date()\r\n                    })\r\n                console.log(\"You have successfully added the word \" + word + \" to your collection!\")\r\n        } else {\r\n            console.log(\"You must be logged in to add a word to your collection\")\r\n            this.setState({ showErrorModal: true })\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { word, pronunciation, theme } = this.props;\r\n        const { type, definition, example, image_url } = this.props.def;\r\n        return (\r\n            <React.Fragment>\r\n                <ReactTooltip />\r\n                <DefinitionContainer>\r\n                    <div className=\"cardHeading\">\r\n                        <h2>{word}<sup>{type}</sup></h2>\r\n                        {image_url ? <img src={image_url} alt=\"word\" /> : null }\r\n                        <p>{pronunciation ? `/${pronunciation}/` : \"\"}</p>\r\n                        <button data-tip=\"Add word to your collection\" onClick={this.addToCollection}><FontAwesomeIcon icon={faBookmark} className=\"icon\" /></button>\r\n                    </div>\r\n                    <hr/>\r\n                    <p>{definition}</p>\r\n                    <p className=\"example\">{example}</p>\r\n                </DefinitionContainer>\r\n                {this.state.showErrorModal ? \r\n                        <Modal heading=\"Please Create an Account to Add Words to Your Collection\" theme={theme} >\r\n                            <FirebaseAuth />\r\n                        </Modal>\r\n                        : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div>\r\n            <p>Loading...</p> \r\n            <FontAwesomeIcon spin icon={faSpinner} size=\"lg\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\n\r\nconst Container = styled.div`\r\n    margin: 5rem 0rem;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    .wordDay {\r\n        width: 90%;\r\n        max-width: 800px;\r\n        border: solid 1px blue;\r\n        border-radius: 2rem;\r\n    }\r\n    .heading {\r\n        background-color: black;\r\n        border-radius: 2rem 2rem 0rem 0rem;\r\n        color: white;\r\n        text-align: center;\r\n        padding: 1rem;\r\n        h2 {\r\n            font-size: 2.5rem;\r\n            text-transform: uppercase;\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n    }\r\n    .body {\r\n        text-align: left;\r\n        h3 {\r\n            font-size: 3rem;\r\n            padding: 0rem 3rem;\r\n\r\n        }\r\n        .definition {\r\n            padding: 0rem 3rem;\r\n            font-size: 1.2rem;\r\n        }\r\n        .note {\r\n            padding: 0rem 3rem 1rem 3rem;\r\n            font-style: italic;\r\n            font-size: 0.9rem;\r\n        }\r\n        sup {\r\n            font-size: 1rem;\r\n        }\r\n        ul {\r\n            list-style: none;\r\n            text-align: center;\r\n            padding: 0;\r\n            li {\r\n                padding: 1rem;\r\n            }\r\n            li:nth-child(odd) {\r\n                background: rgba(0,0,0,0.1);\r\n            }\r\n            p {\r\n                padding: 0rem 1rem;\r\n            }\r\n            blockquote {\r\n                padding: 0;\r\n                margin: 0;\r\n            }\r\n        }\r\n        small {\r\n            font-style: italic;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function WordOfDay(props) {\r\n    const { word, note, examples, pdd } = props.word;\r\n    const { text, partOfSpeech } = props.word.definitions[0];\r\n    return (\r\n        <Container>\r\n            <div className=\"wordDay\">\r\n                <div className=\"heading\">\r\n                    <h2>Word of the Day</h2>\r\n                    <p>{moment(pdd).format('MMMM do YYYY')}</p>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <h3>{word}<sup>{partOfSpeech}</sup></h3>\r\n                    <p className=\"definition\">{text}</p>\r\n                    <p className=\"note\">({note})</p>\r\n                    <ul>\r\n                        {examples.map(example => {\r\n                            return (\r\n                                <li key={example.id}>\r\n                                <blockquote cite={example.url}>\r\n                                    <p>{example.text}</p>\r\n                                    <small>- {example.title}</small>\r\n                                </blockquote>\r\n                            </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nWordOfDay.propTypes = {\r\n    word: PropTypes.object,\r\n}\r\n","import React, { Component } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport Navigation from '../components/Navigation';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Header from '../components/Header';\r\nimport DefinitionCard from '../components/DefinitionCard';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport WordOfDay from '../components/WordOfDay';\r\nimport { withRouter } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nconst FlexContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 1.2rem;\r\n    justify-items: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Container = styled.main`\r\n    min-height: calc(100vh - 100px);\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        data: [],\r\n        word: '',\r\n        pronunciation: '',\r\n        isLoading: true,\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        badSearch: false,\r\n        wordOfTheDay: {}\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                console.log(user)\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false });\r\n                }\r\n            });\r\n        this.getWordOfTheDay();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    handleSearch = (query) => {\r\n        this.setState({ isLoading: true, badSearch: false })\r\n        fetch(\"https://owlbot.info/api/v4/dictionary/\" + query, {\r\n        headers: {\r\n            Authorization: `Token ${process.env.REACT_APP_OWLBOT_API}`\r\n        }\r\n        }).then(res => res.status > 400 ? this.setState({ badSearch: true, isLoading: false }) : res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.setState({ isLoading: false, data: data.definitions, word: data.word, pronunciation: data.pronunciation });\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    getWordOfTheDay = () => {\r\n        const now = new Date();\r\n        const year = now.getFullYear();\r\n        const month = now.getMonth() + 1;\r\n        const day = now.getDate();\r\n        const todayDate = `${year}-${month}-${day}`\r\n        console.log(todayDate)\r\n        fetch(`https://api.wordnik.com/v4/words.json/wordOfTheDay?date=${todayDate}&api_key=${process.env.REACT_APP_WORDNIK_API}`, {\r\n            headers: {\r\n                Accept: \"application/json\"\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.setState({ wordOfTheDay: data, isLoading: false })\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Header />\r\n                <Navigation \r\n                    toggleNightMode={this.props.toggleNightMode} \r\n                    nightMode={this.props.nightMode}\r\n                    signout={this.signout}\r\n                    toggleTheme={this.props.toggleTheme}\r\n                    currentTheme={this.props.theme}\r\n                    isSignedIn={this.state.isSignedIn}\r\n                    userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                     />\r\n                <Container>\r\n                    <SearchBar \r\n                        handleSearch={this.handleSearch}\r\n                        theme={this.props.theme}\r\n                    />\r\n                    <FlexContainer>\r\n                        {this.state.isLoading ? <Loading /> : null}\r\n                        {!this.state.isLoading && this.state.word ? this.state.data.map((definition, i) => {\r\n                            return (\r\n                                <DefinitionCard \r\n                                    key={i}\r\n                                    isSignedIn={this.state.isSignedIn}\r\n                                    def={definition}\r\n                                    word={this.state.word}\r\n                                    theme={this.props.theme}\r\n                                    pronunciation={this.state.pronunciation}\r\n                                />\r\n                            )\r\n                        }) : null}\r\n                        {this.state.badSearch ? <h3>No Results Found</h3> : null}\r\n                    </FlexContainer>\r\n                </Container>\r\n                {this.state.isLoading ? <Loading /> : <WordOfDay word={this.state.wordOfTheDay} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React, { Component } from 'react';\r\nimport ReactTooltip from \"react-tooltip\"; \r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { variables } from '../components/styles/variables';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    border-bottom: 1px solid ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    border-top: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 2rem;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    a {\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        padding: 1rem;\r\n        border-right: solid 1px black;\r\n        text-decoration: none;\r\n        &:last-of-type {\r\n            border-right: none;\r\n        }\r\n    }\r\n    .selected {\r\n        color: ${props => \r\n        variables[props.theme.theme].white};\r\n        background-color: ${props =>\r\n        variables[props.theme.theme].primary};\r\n    }\r\n`;\r\n\r\nexport default class ActivityNavigation extends Component {\r\n    static propTypes = {\r\n        practice: PropTypes.bool,\r\n        id: PropTypes.string\r\n    }\r\n    render() {\r\n        const { id } = this.props;\r\n        if(!this.props.practice) {\r\n            return (\r\n                <Container>\r\n                <ReactTooltip />\r\n                <NavLink activeClassName=\"selected\" to=\"/collection\" data-tip=\"View the words in your collection\">Collection</NavLink>\r\n                <NavLink activeClassName=\"selected\" to=\"/review\" data-tip=\"Review the words from your collection as interactive flashcards\" >Review</NavLink>\r\n                <NavLink activeClassName=\"selected\" to=\"/test\" data-tip=\"Test your skills by taking a vocabulary test with the words from your collection\" >Test</NavLink>\r\n                </Container>\r\n            )\r\n        } else {\r\n            return (\r\n                <Container>\r\n                <ReactTooltip />\r\n                <NavLink activeClassName=\"selected\" to={`/practice/${id}`} data-tip=\"View the words in your collection\">Collection</NavLink>\r\n                <NavLink activeClassName=\"selected\" to={`/practice-review/${id}`} data-tip=\"Review the words from your collection as interactive flashcards\" >Review</NavLink>\r\n                <NavLink activeClassName=\"selected\" to={`/practice-test/${id}`} data-tip=\"Test your skills by taking a vocabulary test with the words from your collection\" >Test</NavLink>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faArrowLeft, faAngleDoubleLeft, faAngleDoubleRight, faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Controls = styled.div`\r\n    display: flex;\r\n    width: 95%;\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n    justify-content: center;\r\n    .icon {\r\n        cursor: pointer;\r\n        font-size: 1.5rem;\r\n        margin: 0.5rem 1rem;\r\n    }\r\n`;\r\n\r\nexport default function FlashcardControls(props) {\r\n    const { totalNumber, currentNumber, moveNext, movePrev, moveFirst, moveLast, toggleOrder } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <Controls>\r\n                <FontAwesomeIcon \r\n                    onClick={moveFirst} \r\n                    icon={faAngleDoubleLeft} \r\n                    className=\"icon\" />\r\n                <FontAwesomeIcon \r\n                    onClick={movePrev} \r\n                    icon={faArrowLeft} \r\n                    className=\"icon\" />\r\n                <FontAwesomeIcon \r\n                    onClick={toggleOrder} \r\n                    icon={faSync} \r\n                    className=\"icon\" />\r\n                <FontAwesomeIcon \r\n                    onClick={moveNext} \r\n                    icon={faArrowRight} \r\n                    className=\"icon\" />\r\n                <FontAwesomeIcon \r\n                    onClick={moveLast} \r\n                    icon={faAngleDoubleRight} \r\n                    className=\"icon\" />\r\n            </Controls>\r\n            <p>{currentNumber}/{totalNumber}</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nFlashcardControls.propTypes = {\r\n    toggleOrder: PropTypes.func,\r\n    currentNumber: PropTypes.number,\r\n    totalNumber: PropTypes.number,\r\n    moveNext: PropTypes.func,\r\n    movePrev: PropTypes.func,\r\n    moveFirst: PropTypes.func,\r\n    moveLast: PropTypes.func\r\n\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport FlashcardControls from './FlashcardControls';\r\nimport PropTypes from 'prop-types';\r\nimport { variables } from '../components/styles/variables';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 5rem;\r\n`;\r\nconst FlashCard = styled.div`\r\n    max-height: 450px;\r\n    height: 450px;\r\n    max-width: 600px;\r\n    width: 100vw;\r\n    perspective: 9000px;\r\n    padding: 2rem;\r\n    display: flex;\r\n    position: relative;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    h1 {\r\n        font-size: 2.5rem;\r\n    }\r\n    .content {\r\n        display: flex;\r\n        justify-items: center;\r\n        align-items: center;\r\n        height: 100%;\r\n        width: 100%;\r\n        border: solid lightgray 2px;\r\n        transition: transform 0.8s;\r\n        transform-style: preserve-3d;\r\n        box-shadow: 2px 2px 5px rgba(0,0,0,0.5);\r\n        position: relative;\r\n        border-radius: 5px; \r\n    }\r\n    .front, .back {\r\n        position: absolute;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: auto;\r\n        padding: 0rem 2rem;\r\n        border-radius: 5px;\r\n        backface-visibility: hidden;\r\n        -webkit-backface-visibility: hidden; /* Safari */\r\n    }\r\n    .front {\r\n        background-color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    }\r\n\r\n    .back {\r\n        background-color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        transform: rotateX(180deg);\r\n    }\r\n    .rotate{\r\n        transform: rotateX(180deg);\r\n    }\r\n    .definition {\r\n        font-size: 1.5rem;\r\n    }\r\n`;\r\n\r\nexport default class Flashcard extends React.Component {\r\n    state = {\r\n        showBack: false,\r\n        showWordFirst: true,\r\n    }\r\n\r\n    static propTypes = {\r\n        word: PropTypes.string,\r\n        definition: PropTypes.string,\r\n        id: PropTypes.string,\r\n        totalNumber: PropTypes.number,\r\n        currentNumber: PropTypes.number,\r\n        moveNext: PropTypes.func,\r\n        movePrev: PropTypes.func,\r\n        moveFirst: PropTypes.func,\r\n        moveLast: PropTypes.func\r\n    \r\n    }\r\n\r\n    flipCard = () => {\r\n        this.setState({ showBack: !this.state.showBack });\r\n    }\r\n\r\n    toggleOrder = () => {\r\n        this.setState({ showWordFirst: !this.state.showWordFirst });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { word, definition, moveFirst, moveLast, currentNumber, totalNumber, movePrev, moveNext } = this.props;\r\n        return (\r\n            <Container>\r\n                <div>\r\n                    <FlashCard onClick={this.flipCard} >\r\n                        <div className={this.state.showBack ? \"content rotate\" : \"content\"}>\r\n                            <div className=\"front\">\r\n                            {this.state.showWordFirst ? <h1>{word}</h1> : <p className=\"definition\">{definition}</p>}\r\n                            </div>\r\n                            <div className=\"back\">\r\n                            {this.state.showWordFirst ? <p className=\"definition\">{definition}</p> : <h1>{word}</h1>}\r\n                            </div>\r\n                        </div>\r\n                    </FlashCard>\r\n                    <FlashcardControls \r\n                        moveFirst={moveFirst}\r\n                        moveLast={moveLast}\r\n                        movePrev={movePrev}\r\n                        moveNext={moveNext}\r\n                        currentNumber={currentNumber + 1}\r\n                        totalNumber={totalNumber}\r\n                        toggleOrder={this.toggleOrder}/>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport Loading from '../components/Loading';\r\nimport Flashcard from '../components/Flashcard';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router';\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Review extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        userCollection: [],\r\n        isLoading: true,\r\n        currentNumber: 0,\r\n        totalNumber: 0,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false })\r\n                } else {\r\n                    this.getUserCollection(this.state.userInfo.uid)\r\n                }\r\n            });\r\n    }\r\n\r\n    getUserCollection = uid => {\r\n        console.log(uid)\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .collection('wordCollection')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                console.log(doc.id)\r\n                collection.push(doc);\r\n            })\r\n            console.log(collection)\r\n            this.setState({ userCollection: collection, isLoading: false, totalNumber: collection.length })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    moveNext = () => {\r\n        console.log(\"you click the next arrow\")\r\n        if(this.state.currentNumber + 1 !== this.state.totalNumber) {\r\n            this.setState({ currentNumber: this.state.currentNumber + 1 });\r\n        } else {\r\n            this.setState({ currentNumber: 0 })\r\n        }\r\n    }\r\n\r\n    movePrev = () => {\r\n        if(this.state.currentNumber === 0) {\r\n            this.setState({ currentNumber: this.state.totalNumber - 1 });\r\n        } else {\r\n            this.setState({ currentNumber: this.state.currentNumber - 1 })\r\n        }\r\n    }\r\n\r\n    moveLast = () => {\r\n        this.setState({ currentNumber: this.state.totalNumber - 1 });\r\n    }\r\n\r\n    moveFirst = () => {\r\n        this.setState({ currentNumber: 0 })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Navigation \r\n                    toggleNightMode={this.props.toggleNightMode} \r\n                    nightMode={this.props.nightMode}\r\n                    signout={this.signout}\r\n                    toggleTheme={this.props.toggleTheme}\r\n                    currentTheme={this.props.theme}\r\n                    isSignedIn={this.state.isSignedIn}\r\n                    userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                />\r\n                <ActivityNavigation practice={false}/>\r\n                {this.state.isLoading ? <Loading /> : null}\r\n                {!this.state.isLoading && this.state.userCollection.length > 0 ? <Flashcard\r\n                    moveFirst={this.moveFirst}\r\n                    moveLast={this.moveLast}\r\n                    movePrev={this.movePrev}\r\n                    moveNext={this.moveNext} \r\n                    currentNumber={this.state.currentNumber}\r\n                    totalNumber={this.state.totalNumber}\r\n                    word={this.state.userCollection[this.state.currentNumber].data().word} \r\n                    definition={this.state.userCollection[this.state.currentNumber].data().definition} id={this.state.userCollection[0].id} /> : null }\r\n                {!this.state.isLoading && this.state.userCollection.length === 0 ? <p>You have no words in your collection to review</p> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Review);\r\n","import React, { Component } from 'react';\r\nimport { variables } from '../components/styles/variables';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport styled from 'styled-components';\r\n\r\nconst SingleDefinition = styled.li`\r\n    display: grid;\r\n    position: relative;\r\n    grid-template-columns: repeat( auto-fit, 300px minmax(300px, 1fr) 50px );\r\n    justify-content: center;\r\n    grid-gap: 1rem;\r\n    padding: 0.25rem 1rem;\r\n    align-items: center;\r\n    transition: 100ms ease-out;\r\n    border-bottom: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    @media only screen and (max-width: ${variables.medium}) {\r\n        grid-template-columns: 1fr;\r\n        .word {\r\n            text-align: left;\r\n        }\r\n        .remove {\r\n            position: absolute;\r\n            top: 1rem;\r\n            right: 1rem;\r\n        }\r\n    }\r\n    .definition {\r\n        text-align: left;\r\n    }\r\n    .icon {\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        transition: 200ms ease-in-out;\r\n        cursor: pointer;\r\n        &:hover {\r\n            transform: scale(1.3);\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 2.5rem;\r\n        margin: 0rem;\r\n    }\r\n    sup {\r\n        font-size: 0.8rem;\r\n        margin-left: 0.5rem;\r\n    }\r\n    .example {\r\n        font-style: italic;\r\n        font-size: 0.9rem;\r\n    }\r\n    &:first-of-type {\r\n        border-top: solid 1px ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    }\r\n    &:last-of-type {\r\n        border-bottom: none;\r\n    }\r\n    &:hover {\r\n        box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\r\n    }\r\n\r\n`;\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    max-width: 800px;\r\n    min-width: 300px;\r\n    min-height: 400px;\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    font-family: ${variables.primaryFont};\r\n    border: solid 1px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    border-radius: 1rem;\r\n    h2 {\r\n        margin-bottom: 1.5rem;\r\n\r\n    }\r\n`;\r\n\r\n\r\nexport default class CollectionContainer extends Component {\r\n    static propTypes = {\r\n        collection: PropTypes.array,\r\n        removeItem: PropTypes.func,\r\n        showRemove: PropTypes.bool\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ marginBottom: \"5rem\", width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\r\n                <Container>\r\n                    <ReactTooltip />\r\n                    <h2>Vocabulary List</h2>\r\n                    <ul style={{ padding: \"0\" }}>\r\n                    {this.props.collection.map(word => {\r\n                        return(\r\n                            <SingleDefinition key={word.data().word} >\r\n                                <div className=\"word\">\r\n                                    <h2>{word.data().word}<sup>{word.data().type}</sup></h2>\r\n                                </div>\r\n                                <div className=\"definition\">\r\n                                    <p>{word.data().definition}</p>\r\n                                    <p className=\"example\" >{word.data().example && `\"${word.data().example}\"`}</p>\r\n                                </div>\r\n                                {this.props.showRemove ? <div \r\n                                    onClick={this.props.removeItem.bind(this, word.id)}\r\n                                    data-tip=\"Remove word from your collection\" \r\n                                    className=\"remove\">\r\n                                    <FontAwesomeIcon className=\"icon\" icon={faTrash} />\r\n                                </div> : null }\r\n                            </SingleDefinition>\r\n                        )\r\n                    })}\r\n                    </ul>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport Modal from '../components/Modal';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport CollectionContainer from '../components/CollectionContainer';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase/app';\r\nimport { withRouter } from 'react-router';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass WordCollection extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        wordCollection: [],\r\n        isLoading: true,\r\n        isShowing: true,\r\n        showModal: true,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                //Redirects to home page if not logged in \r\n                if(!user){\r\n                    console.log(\"user not logged in\")\r\n                    this.setState({ isSignedIn: false, isLoading: false, showModal: true })\r\n                    // this.props.history.push('/');\r\n                } else {\r\n                    this.getWordsFromCollection();\r\n                }\r\n            });\r\n    }\r\n\r\n    getWordsFromCollection = () => {\r\n        const id = this.props.match.params.id\r\n        db.collection('wordSet')\r\n        .doc(id)\r\n        .collection('words')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                console.log(doc.id)\r\n                collection.push(doc);\r\n            })\r\n            console.log(collection)\r\n            this.setState({ wordCollection: collection, isLoading: false })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        const id = this.props.match.params.id\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={true} id={id} />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={true} id={id}/>\r\n                    {this.state.isLoading ? <Loading /> : null }\r\n                    {this.state.wordCollection.length > 0 ? <CollectionContainer showRemove={false} collection={this.state.wordCollection} /> : <p>You have no words in your collection</p>}\r\n                </React.Fragment>\r\n            )\r\n        } \r\n    }\r\n}\r\n\r\nexport default withRouter(WordCollection);\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Container = styled.div`\r\n    text-align: left;\r\n    .answers {\r\n        padding: 0rem 2rem;\r\n    }\r\n    .fade {\r\n        color: lightgray;\r\n    }\r\n    .iconGood {\r\n        color: green;\r\n    }\r\n    .iconBad {\r\n        color: red;\r\n    }\r\n`;\r\n\r\nexport default class ShowResults extends Component {\r\n    static propTypes = {\r\n       wordCollection: PropTypes.array,\r\n       answers: PropTypes.array,\r\n    }\r\n\r\n    render() {\r\n        const { wordCollection, answers } = this.props;\r\n        return (\r\n            <Container>\r\n               { wordCollection.map((individualWord, i) => {\r\n                   const { word, definition, type } = individualWord.data();\r\n                   const answer = answers[i] ? answers[i].toLowerCase() : answers[i];\r\n                   if (word.toLowerCase() === answer) {\r\n                       return (\r\n                           <div key={i}>\r\n                                <p>{i + 1}. {definition} ({type})</p>\r\n                                <div className=\"answers\">\r\n                                    <p className=\"fade\">Correct</p>\r\n                                    <p><FontAwesomeIcon className=\"iconGood\" icon={faCheckCircle} /> {word}</p>\r\n                                </div>\r\n                                <hr/>\r\n                           </div>\r\n                       )\r\n                   } else {\r\n                        return (\r\n                            <div key={i}>\r\n                                <p>{i + 1}. {definition} ({type})</p>\r\n                                <div className=\"answers\">\r\n                                    <p className=\"fade\">Incorrect</p>\r\n                                    <p><FontAwesomeIcon className=\"iconBad\" icon={faTimesCircle} /> {answers[i]}</p>\r\n                                    <p className=\"fade\">Correct Answer</p>\r\n                                    <p>{word}</p>\r\n                                </div>\r\n                                <hr/>\r\n                            </div>\r\n                        )\r\n                   }\r\n               })}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Loading from './Loading';\r\nimport ShowResults from './ShowResults';\r\nimport Button from './Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInfoCircle, faAngleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { variables } from '../components/styles/variables';\r\n\r\nconst Input = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 25px;\r\n    position: relative;\r\n    input {\r\n        display: block;\r\n    }\r\n    .icon {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: lightgray;\r\n    }\r\n`;\r\n\r\nconst CongratulationsContainer = styled.div`\r\n    width: 90%;\r\n    max-width: 700px;\r\n    min-width: 300px;\r\n    text-align: left;\r\n    border-radius: 2rem;\r\n    text-align: center;\r\n    position: relative;\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.2);\r\n    border: solid 2px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].white };\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    .iconContainer {\r\n        display: block;\r\n        text-align: center;\r\n        color: lightgray;\r\n        cursor: pointer;\r\n        margin-top: 2rem;\r\n    }\r\n    .flexContainer {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        img {\r\n            width: 100%;\r\n            height: 100%;\r\n            object-fit: cover;\r\n            border-radius: 2rem 0rem 0rem 2rem;\r\n\r\n        }\r\n    }\r\n    .message {\r\n        padding: 2rem;\r\n    }\r\n    .bottom {\r\n        padding: 2rem 3rem;\r\n    }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n    width: 90%;\r\n    max-width: 700px;\r\n    min-width: 300px;\r\n    text-align: left;\r\n    padding: 4rem 3rem;\r\n    border-radius: 2rem;\r\n    border: solid 2px ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].white };\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.2);\r\n    background-color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n    color: ${props =>\r\n    props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    input, label {\r\n        display: block;\r\n        margin: 1rem 0rem;\r\n        line-height: 1.8rem;\r\n        font-size: 1.2rem;\r\n        background-color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white };\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    }\r\n    input {\r\n        border: none;\r\n        transition: 150ms ease-in-out;\r\n        border-bottom: solid 2px ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        :focus {\r\n            outline: none;\r\n            transform: scale(1.05);\r\n        }\r\n    }\r\n    span {\r\n        color: lightgray;\r\n        font-size: 0.8rem;\r\n        padding-left: 1rem;\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 5rem;\r\n`;\r\n\r\nexport default class FormComponent extends Component {\r\n    state = {\r\n        answers: [],\r\n        formSubmitted: false,\r\n        totalScore: 0,\r\n        isLoading: true,\r\n        showResults: false,\r\n        message: '',\r\n        subtitle: ''\r\n    }\r\n    static propTypes = {\r\n        wordCollection: PropTypes.array,\r\n        theme: PropTypes.string,\r\n    }\r\n\r\n    handleChange = (e, index) => {\r\n        const answers = [...this.state.answers];\r\n        answers[index] = e.target.value;\r\n        this.setState({ answers })\r\n    }\r\n\r\n    checkAnswers = (e) => {\r\n        const lowerCaseAnswers = this.state.answers.map(answer => answer.toLowerCase());\r\n        console.log(lowerCaseAnswers);\r\n        console.log(this.state.answers)\r\n        e.preventDefault();\r\n        const answersArray = []\r\n        this.state.wordCollection.map(individualWord => {\r\n            const { word } = individualWord.data();\r\n            answersArray.push(word)\r\n        });\r\n        let totalCorrect = 0;\r\n        answersArray.forEach((word, i) => {\r\n            if(word.toLowerCase() === lowerCaseAnswers[i]){\r\n                totalCorrect++;\r\n            }\r\n        })\r\n        this.setState({ totalScore: totalCorrect }, () => {\r\n            this.getMessage(totalCorrect);\r\n        });\r\n\r\n    }\r\n\r\n    getMessage = (total) => {\r\n        const score = total / this.props.wordCollection.length * 100; \r\n        if(score === 100) {\r\n            this.setState({ formSubmitted: true, message: \"Perfect Score!\", subtitle: 'You must be a genius' })\r\n        } else if (score > 75) {\r\n            this.setState({ formSubmitted: true, message: \"Congratulations!\", subtitle: 'You have nearly mastered these words' })\r\n        } else if (score > 50) {\r\n            this.setState({ formSubmitted: true, message: \"Good Effort\", subtitle: 'With more practice you can do better' })\r\n        } else if (score > 25) {\r\n            this.setState({ formSubmitted: true, message: \"Good Try!\", subtitle: 'But you need to study some more' })\r\n        } else if (score > 0) {\r\n            this.setState({ formSubmitted: true, message: \"Oh No!\", subtitle: 'You need to review a few more times' })\r\n        } else {\r\n            this.setState({ formSubmitted: true, message: \"Oh No!\", subtitle: \"You didn't get any correct!\" })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { wordCollection } = this.props;\r\n        const length = wordCollection.length > 5 ? 5 : wordCollection.length;\r\n        this.getRandom(wordCollection, length);\r\n    }\r\n\r\n    getRandom = (arr, n) => {\r\n        let result = new Array(n),\r\n            len = arr.length,\r\n            taken = new Array(len);\r\n        if (n > len)\r\n            throw new RangeError(\"getRandom: more elements taken than available\");\r\n        while (n--) {\r\n            let x = Math.floor(Math.random() * len);\r\n            result[n] = arr[x in taken ? taken[x] : x];\r\n            taken[x] = --len in taken ? taken[len] : len;\r\n        }\r\n        console.log(result)\r\n        this.setState({ wordCollection: result, isLoading: false });\r\n    }\r\n\r\n    resetTest = () => {\r\n        this.setState({ answers: [], formSubmitted: false, totalScore: 0, isLoading: true, showResults: false });\r\n        const { wordCollection } = this.props;\r\n        const length = wordCollection.length > 5 ? 5 : wordCollection.length;\r\n        this.getRandom(wordCollection, length);\r\n    }\r\n\r\n    render() {\r\n        const { theme } = this.props;\r\n        if (this.state.formSubmitted) {\r\n            return (\r\n                <Container>\r\n                    <CongratulationsContainer>\r\n                        <div className=\"flexContainer\">\r\n                            <img src={require(`../images/${theme}.svg`)} />\r\n                            <div className=\"message\">\r\n                                <h1>{this.state.message}</h1>\r\n                                <p>{this.state.subtitle}</p>\r\n                                <p>Your Scored is: {this.state.totalScore} out of {this.state.wordCollection.length}</p>\r\n                                <Button handleClick={this.resetTest}>Try Again!</Button>\r\n                                <div \r\n                                    onClick={() => this.setState({ showResults: !this.state.showResults })}\r\n                                    className=\"iconContainer\">\r\n                                    <p>{this.state.showResults ? \"Hide Results\" : \"Show Results\"}</p>\r\n                                    <FontAwesomeIcon \r\n                                        icon={faAngleDown}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.showResults ? <div className=\"bottom\"><ShowResults wordCollection={this.state.wordCollection} answers={this.state.answers} /></div> : null}\r\n                    </CongratulationsContainer>\r\n                </Container>\r\n            )\r\n        } else {\r\n            return (\r\n                <Container>\r\n                    <StyledForm onSubmit={this.checkAnswers}>\r\n                        <h2>Vocabulary Test</h2>\r\n                        {this.state.isLoading ? <Loading /> : this.state.wordCollection.map((individualWord, index) => {\r\n                            const {word, definition,type } = individualWord.data();\r\n                            return (\r\n                                <Input key={word}>\r\n                                    <div>\r\n                                        <label htmlFor={word}>{`${index + 1}. ${definition[0].toUpperCase() + definition.slice(1)}`}<span className=\"type\">({type})</span></label>\r\n                                        <input id={word} type=\"text\" data-id={index} onChange={(e) => this.handleChange(e, index)} value={this.state.answers[index] || ''} name={word} className=\"guess\"/>\r\n                                    </div>\r\n                                    <div className=\"icon\">\r\n                                        <ReactTooltip />\r\n                                        <FontAwesomeIcon \r\n                                            data-tip={`This word begins with the letter: ${word[0].toUpperCase()}`}\r\n                                            icon={faInfoCircle} \r\n                                            />\r\n                                    </div>\r\n                                </Input>\r\n                                 )\r\n                        })}\r\n                        <Button>Submit</Button>\r\n                    </StyledForm>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport Modal from '../components/Modal';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport FormComponent from '../components/FormComponent';\r\nimport firebase from 'firebase/app';\r\nimport { withRouter } from 'react-router';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        isLoading: true,\r\n        userInfo: '',\r\n        userCollection: [],\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false, isLoading: false, showModal: true })\r\n                } else {\r\n                    this.getUserCollection(this.state.userInfo.uid)\r\n                }\r\n            });\r\n    }\r\n\r\n    getUserCollection = uid => {\r\n        console.log(uid)\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .collection('wordCollection')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                console.log(doc.id)\r\n                collection.push(doc);\r\n            })\r\n            console.log(collection)\r\n            this.setState({ userCollection: collection, isLoading: false })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={false} />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            if (this.state.isSignedIn) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Header />\r\n                        <Navigation \r\n                            toggleNightMode={this.props.toggleNightMode} \r\n                            nightMode={this.props.nightMode}\r\n                            signout={this.signout}\r\n                            toggleTheme={this.props.toggleTheme}\r\n                            currentTheme={this.props.theme}\r\n                            isSignedIn={this.state.isSignedIn}\r\n                            userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                        />\r\n                        <ActivityNavigation practice={false} />\r\n                        {this.state.isLoading ? <Loading /> : null }\r\n                        {this.state.userCollection.length < 5 \r\n                                ? <><p>You must have 5 or more words in your collection to take a test</p><p>You currently have {this.state.userCollection.length} {this.state.userCollection.length === 1 ? \"word\" : \"words\"} in your collection</p></> : <FormComponent theme={this.props.theme} wordCollection={this.state.userCollection} /> }\r\n                    </React.Fragment>\r\n            )\r\n            \r\n            } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={false} />\r\n                    <Modal heading=\"Please Create an Account\" showClose={false} showModal={this.state.showModal} closeModal={this.closeModal}>\r\n                        <p>You must first create an account and add words to your collection</p>\r\n                        <FirebaseAuth />\r\n                    </Modal>\r\n                </React.Fragment>\r\n            )\r\n\r\n        }\r\n    \r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Test);\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport Modal from '../components/Modal';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport FormComponent from '../components/FormComponent';\r\nimport firebase from 'firebase/app';\r\nimport { withRouter } from 'react-router';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        isLoading: true,\r\n        userInfo: '',\r\n        wordCollection: [],\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false, isLoading: false, showModal: true })\r\n                } else {\r\n                    this.getWordsFromCollection();\r\n                }\r\n            });\r\n    }\r\n\r\n    getWordsFromCollection = () => {\r\n        const id = this.props.match.params.id\r\n        db.collection('wordSet')\r\n        .doc(id)\r\n        .collection('words')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                console.log(doc.id)\r\n                collection.push(doc);\r\n            })\r\n            console.log(collection)\r\n            this.setState({ wordCollection: collection, isLoading: false })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const id = this.props.match.params.id\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={true} id={id} />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={true} id={id} />\r\n                    {this.state.isLoading ? <Loading /> : null }\r\n                    {this.state.wordCollection.length < 5 \r\n                            ? <><p>You must have 5 or more words in your collection to take a test</p><p>You currently have {this.state.wordCollection.length} {this.state.wordCollection.length === 1 ? \"word\" : \"words\"} in your collection</p></> : <FormComponent theme={this.props.theme} wordCollection={this.state.wordCollection} /> }\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Test);\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport Loading from '../components/Loading';\r\nimport Flashcard from '../components/Flashcard';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router';\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Review extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        wordCollection: [],\r\n        isLoading: true,\r\n        currentNumber: 0,\r\n        totalNumber: 0,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                if(!user){\r\n                    this.setState({ isSignedIn: false })\r\n                } else {\r\n                    this.getWordsFromCollection();\r\n                }\r\n            });\r\n    }\r\n\r\n    getWordsFromCollection = () => {\r\n        const id = this.props.match.params.id\r\n        db.collection('wordSet')\r\n        .doc(id)\r\n        .collection('words')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                console.log(doc.id)\r\n                collection.push(doc);\r\n            })\r\n            console.log(collection)\r\n            this.setState({ wordCollection: collection, isLoading: false, totalNumber: collection.length })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    moveNext = () => {\r\n        console.log(\"you click the next arrow\")\r\n        if(this.state.currentNumber + 1 !== this.state.totalNumber) {\r\n            this.setState({ currentNumber: this.state.currentNumber + 1 });\r\n        } else {\r\n            this.setState({ currentNumber: 0 })\r\n        }\r\n    }\r\n\r\n    movePrev = () => {\r\n        if(this.state.currentNumber === 0) {\r\n            this.setState({ currentNumber: this.state.totalNumber - 1 });\r\n        } else {\r\n            this.setState({ currentNumber: this.state.currentNumber - 1 })\r\n        }\r\n    }\r\n\r\n    moveLast = () => {\r\n        this.setState({ currentNumber: this.state.totalNumber - 1 });\r\n    }\r\n\r\n    moveFirst = () => {\r\n        this.setState({ currentNumber: 0 })\r\n    }\r\n\r\n    render() {\r\n        const id = this.props.match.params.id\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Navigation \r\n                    toggleNightMode={this.props.toggleNightMode} \r\n                    nightMode={this.props.nightMode}\r\n                    signout={this.signout}\r\n                    toggleTheme={this.props.toggleTheme}\r\n                    currentTheme={this.props.theme}\r\n                    isSignedIn={this.state.isSignedIn}\r\n                    userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                />\r\n                <ActivityNavigation practice={true} id={id} />\r\n                {this.state.isLoading ? <Loading /> : null}\r\n                {!this.state.isLoading && this.state.wordCollection.length > 0 ? <Flashcard\r\n                    moveFirst={this.moveFirst}\r\n                    moveLast={this.moveLast}\r\n                    movePrev={this.movePrev}\r\n                    moveNext={this.moveNext} \r\n                    currentNumber={this.state.currentNumber}\r\n                    totalNumber={this.state.totalNumber}\r\n                    word={this.state.wordCollection[this.state.currentNumber].data().word} \r\n                    definition={this.state.wordCollection[this.state.currentNumber].data().definition} id={this.state.wordCollection[0].id} /> : null }\r\n                {!this.state.isLoading && this.state.wordCollection.length === 0 ? <p>You have no words in your collection to review</p> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Review);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { variables } from './styles/variables';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    a {\r\n        text-decoration: none;\r\n        color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n    }\r\n    .card {\r\n        border: solid 1px ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].white : variables[props.theme.theme].dark };\r\n        border-radius: 1rem;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        position: relative;\r\n        min-height: 250px;\r\n        transition: 100ms ease-out;\r\n    &:hover {\r\n        box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\r\n    }\r\n    }\r\n    h2 {\r\n        font-size: 1.5rem;\r\n        padding: 0.5rem 0rem;\r\n        opacity: 0.9;\r\n        margin: 0;\r\n        z-index: 9;\r\n        background-color: ${props =>\r\n        props.theme.nightMode === \"light\" ? variables[props.theme.theme].dark : variables[props.theme.theme].white }; \r\n    }\r\n    img {\r\n        position: absolute;\r\n        width: 200px;\r\n        height: 200px;\r\n        margin: auto;\r\n        position: absolute;\r\n        border-radius: 50%;\r\n        top: 50%; left: 50%;\r\n        -webkit-transform: translate(-50%,-50%);\r\n            -ms-transform: translate(-50%,-50%);\r\n                transform: translate(-50%,-50%);\r\n    }\r\n    \r\n`;\r\n\r\nexport default class WordSetCard extends Component {\r\n    static propTypes = {\r\n        wordSet: PropTypes.object\r\n    }\r\n    render() {\r\n        const { name, imageURL } = this.props.wordSet;\r\n        return (\r\n            <Container>\r\n                <Link to={`/practice/${this.props.id}`}>\r\n                    <div className=\"card\">\r\n                        <h2>{name}</h2>\r\n                        <img src={imageURL} alt={name} />\r\n                    </div>\r\n                </Link>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport WordSetCard from '../components/WordSetCard';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase/app';\r\nimport { withRouter } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport { variables } from '../components/styles/variables';\r\n\r\nconst Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 300px));\r\n    justify-content: center;\r\n    grid-gap: 1.5rem;\r\n    margin: 2rem 3rem;\r\n    @media only screen and (max-width: ${variables.small}) {\r\n        margin: 2rem 0.5rem;\r\n    }\r\n`;\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Practice extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        wordSets: [],\r\n        isLoading: true,\r\n        isShowing: true,\r\n        showModal: true,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                //Redirects to home page if not logged in \r\n                if(!user){\r\n                    console.log(\"user not logged in\")\r\n                    this.setState({ isSignedIn: false })\r\n                    this.getWordSets();\r\n\r\n                } else {\r\n                    this.getWordSets();\r\n                }\r\n            });\r\n    }\r\n\r\n    getWordSets = () => {\r\n        db.collection('wordSet')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = [];\r\n            snapshot.docs.map(doc => {\r\n                console.log(doc.id)\r\n                collection.push(doc);\r\n            })\r\n            console.log(collection);\r\n            this.setState({ wordSets: collection, isLoading: false })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    {this.state.isLoading ? <Loading /> : null }\r\n                    <Container>\r\n                    {this.state.isLoading ? null : this.state.wordSets.length > 0 ? this.state.wordSets.map(set => <WordSetCard key={set.id} wordSet={set.data()} id={set.id} />) : <p>Oh no! We couldn't find any word sets to practice</p>}\r\n                    </Container>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Practice);\r\n\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport Header from '../components/Header';\r\nimport Modal from '../components/Modal';\r\nimport ActivityNavigation from '../components/ActivityNavigation';\r\nimport CollectionContainer from '../components/CollectionContainer';\r\nimport Loading from '../components/Loading';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase/app';\r\nimport { withRouter } from 'react-router';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Collection extends Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        userInfo: '',\r\n        userCollection: [],\r\n        isLoading: true,\r\n        isShowing: true,\r\n        showModal: true,\r\n    }\r\n\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        theme: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user, userInfo: firebase.auth().currentUser })\r\n                //Redirects to home page if not logged in \r\n                if(!user){\r\n                    console.log(\"user not logged in\")\r\n                    this.setState({ isSignedIn: false, isLoading: false, showModal: true })\r\n                    // this.props.history.push('/');\r\n                } else {\r\n                    this.getUserCollection(this.state.userInfo.uid)\r\n                }\r\n            });\r\n    }\r\n\r\n    getUserCollection = uid => {\r\n        console.log(uid)\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .collection('wordCollection')\r\n        .get()\r\n        .then(snapshot => {\r\n            const collection = []\r\n            snapshot.docs.map(doc => {\r\n                console.log(doc.id)\r\n                collection.push(doc);\r\n            })\r\n            console.log(collection)\r\n            this.setState({ userCollection: collection, isLoading: false })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    removeItem = id => {\r\n        const uid = this.state.userInfo.uid;\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .collection('wordCollection')\r\n        .doc(id)\r\n        .delete();\r\n        this.getUserCollection(uid);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.unregisterAuthObserver){\r\n            this.unregisterAuthObserver();\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    signout = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <ActivityNavigation practice={false} />\r\n                    <Loading />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            if (this.state.isSignedIn) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Header />\r\n                        <Navigation \r\n                            toggleNightMode={this.props.toggleNightMode} \r\n                            nightMode={this.props.nightMode}\r\n                            signout={this.signout}\r\n                            toggleTheme={this.props.toggleTheme}\r\n                            currentTheme={this.props.theme}\r\n                            isSignedIn={this.state.isSignedIn}\r\n                            userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                        />\r\n                        <ActivityNavigation practice={false}/>\r\n                        {this.state.isLoading ? <Loading /> : null }\r\n                        {this.state.userCollection.length > 0 ? <CollectionContainer removeItem={this.removeItem} showRemove={true} collection={this.state.userCollection} /> : <p>You have no words in your collection</p>}\r\n                    </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header />\r\n                    <Navigation \r\n                        toggleNightMode={this.props.toggleNightMode} \r\n                        nightMode={this.props.nightMode}\r\n                        signout={this.signout}\r\n                        toggleTheme={this.props.toggleTheme}\r\n                        currentTheme={this.props.theme}\r\n                        isSignedIn={this.state.isSignedIn}\r\n                        userImage={this.state.userInfo ? this.state.userInfo.photoURL : ''}\r\n                    />\r\n                    <Modal heading=\"Please Create an Account\" showClose={false} showModal={this.state.showModal} closeModal={this.closeModal}>\r\n                        <p>You must have an account in order to create a word collection</p>\r\n                        <FirebaseAuth />\r\n                    </Modal>\r\n                </React.Fragment>\r\n            )\r\n\r\n        }\r\n        \r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Collection);\r\n\r\n","import React, { Component } from 'react';\r\nimport Modal from '../components/Modal';\r\nimport Header from '../components/Header';\r\nimport Navigation from '../components/Navigation';\r\nimport FirebaseAuth from '../components/FirebaseAuth';\r\nimport PropTypes from 'prop-types';\r\nimport { variables } from '../components/styles/variables';\r\nimport styled from 'styled-components';\r\n\r\nconst Background = styled.div` \r\n    background-color: ${props =>\r\n    variables[props.theme.theme].primary};\r\n    width: 100vw;\r\n    height: 100vh;\r\n    clip-path: polygon(0 0, 100% 0, 100% 29%, 0 51%);\r\n    position: relative;\r\n    z-index: 9;\r\n`;\r\n\r\nconst SecondBackground = styled.div`\r\n    background-color: ${props =>\r\n    variables[props.theme.theme].secondary};\r\n    width: 100vw;\r\n    height: 100vh;\r\n    clip-path: polygon(0 0, 100% 0, 100% 29%, 0 51%);\r\n    position: absolute;\r\n    top: 25px;\r\n    z-index: 5;\r\n`;\r\n\r\nconst ThirdBackground = styled.div`\r\n    background-color: ${props =>\r\n    variables[props.theme.theme].tertiary};\r\n    width: 100vw;\r\n    height: 100vh;\r\n    clip-path: polygon(0 0, 100% 0, 100% 29%, 0 51%);\r\n    position: absolute;\r\n    top: 50px;\r\n    z-index: 2;\r\n`;\r\n\r\nexport default class SignIn extends Component {\r\n    static propTypes = {\r\n        nightMode: PropTypes.string,\r\n        toggleNightMode: PropTypes.func,\r\n        toggleTheme: PropTypes.func,\r\n        signout: PropTypes.func,\r\n        currentTheme: PropTypes.string\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Background />\r\n                <SecondBackground />\r\n                <ThirdBackground />\r\n                    <Modal showModal={true} showClose={false} heading=\"Create an Account or Log In\" >\r\n                        <FirebaseAuth />\r\n                    </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './components/styles/GlobalStyle';\nimport storage from 'local-storage-fallback';\nimport Home from './pages/Home';\nimport Review from './pages/Review';\nimport WordCollection from './pages/WordCollection';\nimport Test from './pages/Test';\nimport PracticeTest from './pages/PracticeTest';\nimport PracticeFlashCards from './pages/PracticeFlashCards';\nimport Practice from './pages/Practice';\nimport Collection from './pages/Collection';\nimport SignIn from './pages/SignIn';\n\nclass App extends React.Component {\n  state = {\n    nightMode: storage.getItem(\"nightMode\") ? storage.getItem(\"nightMode\") : \"light\",\n    theme: storage.getItem(\"theme\") ? storage.getItem(\"theme\") : \"mohaka\",\n  }\n\n  toggleNightMode = () => {\n    if(this.state.nightMode === \"light\"){\n      this.setState({ nightMode: \"dark\" })\n      storage.setItem(\"nightMode\", \"dark\");\n    } else {\n      this.setState({ nightMode: \"light\" });\n      storage.setItem(\"nightMode\", \"light\");\n    }\n  }\n\n  toggleTheme = (theme) => {\n    this.setState({ theme })\n    storage.setItem(\"theme\", theme)\n  }\n\n  getInitalTheme = () => {\n    const savedNightMode = storage.getItem(\"nightMode\");\n    return savedNightMode ? JSON.parse(savedNightMode) : false;\n  }\n\n  render() {\n      return (\n        <Router basename=\"/dictionaryApp/\">\n          <Switch>\n              <ThemeProvider theme={{ nightMode: this.state.nightMode, theme: this.state.theme }}>\n                <Route exact path=\"/\">\n                  <Home \n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme}\n                     />\n                </Route>\n                <Route path=\"/collection\">\n                  <Collection\n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme}\n                    />\n                </Route>\n                <Route path=\"/create-account\">\n                  <SignIn \n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme} \n                    />\n                </Route>\n                <Route path=\"/review\">\n                  <Review \n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme} \n                    />\n                </Route>\n                <Route path=\"/test\">\n                  <Test \n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme} \n                    />\n                </Route>\n                <Route exact path=\"/practice\">\n                  <Practice \n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme} \n                    />\n                </Route>\n                <Route exact path=\"/practice/:id\">\n                  <WordCollection \n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme} \n                    />\n                </Route>\n                <Route exact path=\"/practice-test/:id\">\n                  <PracticeTest \n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme} \n                    />\n                </Route>\n                <Route exact path=\"/practice-review/:id\">\n                  <PracticeFlashCards \n                    toggleNightMode={this.toggleNightMode} \n                    nightMode={this.state.nightMode}\n                    toggleTheme={this.toggleTheme}\n                    theme={this.state.theme} \n                    />\n                </Route>\n                <GlobalStyle />\n              </ThemeProvider>\n          </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './setupFirebase';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}